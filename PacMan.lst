------- FILE PacMan.asm LEVEL 1 PASS 2
      1  10000					       processor	6502
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       include	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.06, 06/SEP/2020
      3  10000 ????
      4  10000 ????		00 6a	    VERSION_VCS =	106
      5  10000 ????
      6  10000 ????						; THIS IS *THE* "STANDARD" VCS.H
      7  10000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  10000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  10000 ????						;
     10  10000 ????						; This file defines hardware registers and memory mapping for the
     11  10000 ????						; Atari 2600. It is distributed as a companion machine-specific support package
     12  10000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  10000 ????						; available at at https://dasm-assembler.github.io/
     14  10000 ????						;
     15  10000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     16  10000 ????						; contents, or would like ot add something, please report as an issue at...
     17  10000 ????						; https://github.com/dasm-assembler/dasm/issues
     18  10000 ????
     19  10000 ????						;
     20  10000 ????						; Latest Revisions...
     21  10000 ????						; 1.06  05/SEP/2020	 Modified header/license and links to new versions
     22  10000 ????						; 1.05  13/NOV/2003	  - Correction to 1.04 - now functions as requested by MR.
     23  10000 ????						;			  - Added VERSION_VCS equate (which will reflect 100x version #)
     24  10000 ????						;			    This will allow conditional code to verify VCS.H being
     25  10000 ????						;			    used for code assembly.
     26  10000 ????						; 1.04  12/NOV/2003	 Added TIA_BASE_WRITE_ADDRESS and TIA_BASE_READ_ADDRESS for
     27  10000 ????						;			 convenient disassembly/reassembly compatibility for hardware
     28  10000 ????						;			 mirrored reading/writing differences.	This is more a 
     29  10000 ????						;			 readability issue, and binary compatibility with disassembled
     30  10000 ????						;			 and reassembled sources.  Per Manuel Rotschkar's suggestion.
     31  10000 ????						; 1.03  12/MAY/2003	 Added SEG segment at end of file to fix old-code compatibility
     32  10000 ????						;			 which was broken by the use of segments in this file, as
     33  10000 ????						;			 reported by Manuel Polik on [stella] 11/MAY/2003
     34  10000 ????						; 1.02  22/MAR/2003	 Added TIMINT($285)
     35  10000 ????						; 1.01				Constant offset added to allow use for 3F-style bankswitching
     36  10000 ????						;						 - define TIA_BASE_ADDRESS as $40 for Tigervision carts, otherwise
     37  10000 ????						;						   it is safe to leave it undefined, and the base address will
     38  10000 ????						;						   be set to 0.  Thanks to Eckhard Stolberg for the suggestion.
     39  10000 ????						;			    Note, may use -DLABEL=EXPRESSION to define TIA_BASE_ADDRESS
     40  10000 ????						;			  - register definitions are now generated through assignment
     41  10000 ????						;			    in uninitialised segments.	This allows a changeable base
     42  10000 ????						;			    address architecture.
     43  10000 ????						; 1.0	22/MAR/2003		Initial release
     44  10000 ????
     45  10000 ????
     46  10000 ????						;-------------------------------------------------------------------------------
     47  10000 ????
     48  10000 ????						; TIA_BASE_ADDRESS
     49  10000 ????						; The TIA_BASE_ADDRESS defines the base address of access to TIA registers.
     50  10000 ????						; Normally 0, the base address should (externally, before including this file)
     51  10000 ????						; be set to $40 when creating 3F-bankswitched (and other?) cartridges.
     52  10000 ????						; The reason is that this bankswitching scheme treats any access to locations
     53  10000 ????						; < $40 as a bankswitch.
     54  10000 ????
     55  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
     56  10000 ????			   -TIA_BASE_ADDRESS =	0
     57  10000 ????				       ENDIF
     58  10000 ????
     59  10000 ????						; Note: The address may be defined on the command-line using the -D switch, eg:
     60  10000 ????						; dasm.exe code.asm -DTIA_BASE_ADDRESS=$40 -f3 -v5 -ocode.bin
     61  10000 ????						; *OR* by declaring the label before including this file, eg:
     62  10000 ????						; TIA_BASE_ADDRESS = $40
     63  10000 ????						;   include "vcs.h"
     64  10000 ????
     65  10000 ????						; Alternate read/write address capability - allows for some disassembly compatibility
     66  10000 ????						; usage ; to allow reassembly to binary perfect copies).  This is essentially catering
     67  10000 ????						; for the mirrored ROM hardware registers.
     68  10000 ????
     69  10000 ????						; Usage: As per above, define the TIA_BASE_READ_ADDRESS and/or TIA_BASE_WRITE_ADDRESS
     70  10000 ????						; using the -D command-line switch, as required.  If the addresses are not defined, 
     71  10000 ????						; they defaut to the TIA_BASE_ADDRESS.
     72  10000 ????
     73  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     74  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     75  10000 ????				       ENDIF
     76  10000 ????
     77  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     78  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     79  10000 ????				       ENDIF
     80  10000 ????
     81  10000 ????						;-------------------------------------------------------------------------------
     82  10000 ????
     83 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     84 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     85 U0000
     86 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     87 U0000
     88 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     89 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     90 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     91 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     92 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     93 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     94 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     95 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     96 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     97 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     98 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     99 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
    100 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
    101 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
    102 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
    103 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
    104 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
    105 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
    106 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
    107 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
    108 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
    109 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
    110 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
    111 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
    112 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
    113 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
    114 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
    115 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
    116 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
    117 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
    118 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
    119 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
    120 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
    121 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
    122 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
    123 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
    124 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
    125 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
    126 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
    127 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
    128 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
    129 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
    130 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
    131 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
    132 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
    133 U002d
    134 U002d							;-------------------------------------------------------------------------------
    135 U002d
    136 U000e ????				      SEG.U	TIA_REGISTERS_READ
    137 U0000					      ORG	TIA_BASE_READ_ADDRESS
    138 U0000
    139 U0000							;											bit 7	 bit 6
    140 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
    141 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
    142 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
    143 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
    144 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
    145 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
    146 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
    147 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
    148 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
    149 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
    150 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
    151 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
    152 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
    153 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
    154 U000e
    155 U000e							;-------------------------------------------------------------------------------
    156 U000e
    157 U0298 ????				      SEG.U	RIOT
    158 U0280					      ORG	$280
    159 U0280
    160 U0280							; RIOT MEMORY MAP
    161 U0280
    162 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    163 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    164 U0281
    165 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    166 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    167 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    168 U0284		       00	   INTIM      ds	1	; $284		Timer output
    169 U0285
    170 U0285		       00	   TIMINT     ds	1	; $285
    171 U0286
    172 U0286							; Unused/undefined registers ($285-$294)
    173 U0286
    174 U0286		       00		      ds	1	; $286
    175 U0287		       00		      ds	1	; $287
    176 U0288		       00		      ds	1	; $288
    177 U0289		       00		      ds	1	; $289
    178 U028a		       00		      ds	1	; $28A
    179 U028b		       00		      ds	1	; $28B
    180 U028c		       00		      ds	1	; $28C
    181 U028d		       00		      ds	1	; $28D
    182 U028e		       00		      ds	1	; $28E
    183 U028f		       00		      ds	1	; $28F
    184 U0290		       00		      ds	1	; $290
    185 U0291		       00		      ds	1	; $291
    186 U0292		       00		      ds	1	; $292
    187 U0293		       00		      ds	1	; $293
    188 U0294
    189 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    190 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    191 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    192 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    193 U0298
    194 U0298							;-------------------------------------------------------------------------------
    195 U0298							; The following required for back-compatibility with code which does not use
    196 U0298							; segments.
    197 U0298
    198  0000 ????				      SEG
    199  0000 ????
    200  0000 ????						; EOF
------- FILE PacMan.asm
------- FILE macro.h LEVEL 2 PASS 2
      0  0000 ????				      include	"macro.h"
      1  0000 ????						; MACRO.H
      2  0000 ????						; Version 1.09, 05/SEP/2020
      3  0000 ????
      4  0000 ????	       00 6d	   VERSION_MACRO =	109
      5  0000 ????
      6  0000 ????						;
      7  0000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  0000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  0000 ????						;
     10  0000 ????						; This file defines DASM macros useful for development for the Atari 2600.
     11  0000 ????						; It is distributed as a companion machine-specific support package
     12  0000 ????						; for the DASM compiler.
     13  0000 ????						;
     14  0000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     15  0000 ????						; contents, or would like ot add something, please report as an issue at...
     16  0000 ????						; https://github.com/dasm-assembler/dasm/issues
     17  0000 ????
     18  0000 ????
     19  0000 ????						; Latest Revisions...
     20  0000 ????						; 1.09  05/SEP/2020	 - updated license/links
     21  0000 ????
     22  0000 ????						; 1.08  13/JUL/2020	 - added use of LXA to CLEAN_START
     23  0000 ????						; 1.07  19/JAN/2020	 - correction to comment VERTICAL_SYNC
     24  0000 ????						; 1.06  03/SEP/2004	 - nice revision of VERTICAL_SYNC (Edwin Blink)
     25  0000 ????						; 1.05  14/NOV/2003	 - Added VERSION_MACRO equate (which will reflect 100x version #)
     26  0000 ????						;			   This will allow conditional code to verify MACRO.H being
     27  0000 ????						;			   used for code assembly.
     28  0000 ????						; 1.04  13/NOV/2003	 - SET_POINTER macro added (16-bit address load)
     29  0000 ????						;
     30  0000 ????						; 1.03  23/JUN/2003	 - CLEAN_START macro added - clears TIA, RAM, registers
     31  0000 ????						;
     32  0000 ????						; 1.02  14/JUN/2003	 - VERTICAL_SYNC macro added
     33  0000 ????						;			   (standardised macro for vertical synch code)
     34  0000 ????						; 1.01  22/MAR/2003	 - SLEEP macro added. 
     35  0000 ????						;			 - NO_ILLEGAL_OPCODES switch implemented
     36  0000 ????						; 1.0	22/MAR/2003		Initial release
     37  0000 ????
     38  0000 ????						; Note: These macros use illegal opcodes.  To disable illegal opcode usage, 
     39  0000 ????						;   define the symbol NO_ILLEGAL_OPCODES (-DNO_ILLEGAL_OPCODES=1 on command-line).
     40  0000 ????						;   If you do not allow illegal opcode usage, you must include this file 
     41  0000 ????						;   *after* including VCS.H (as the non-illegal opcodes access hardware
     42  0000 ????						;   registers and require them to be defined first).
     43  0000 ????
     44  0000 ????						; Available macros...
     45  0000 ????						;   SLEEP n		 - sleep for n cycles
     46  0000 ????						;   VERTICAL_SYNC	 - correct 3 scanline vertical synch code
     47  0000 ????						;   CLEAN_START	 - set machine to known state on startup
     48  0000 ????						;   SET_POINTER	 - load a 16-bit absolute to a 16-bit variable
     49  0000 ????
     50  0000 ????						;-------------------------------------------------------------------------------
     51  0000 ????						; SLEEP duration
     52  0000 ????						; Original author: Thomas Jentzsch
     53  0000 ????						; Inserts code which takes the specified number of cycles to execute.	This is
     54  0000 ????						; useful for code where precise timing is required.
     55  0000 ????						; ILLEGAL-OPCODE VERSION DOES NOT AFFECT FLAGS OR REGISTERS.
     56  0000 ????						; LEGAL OPCODE VERSION MAY AFFECT FLAGS
     57  0000 ????						; Uses illegal opcode (DASM 2.20.01 onwards).
     58  0000 ????
     59  0000 ????				      MAC	sleep
     60  0000 ????			   .CYCLES    SET	{1}
     61  0000 ????
     62  0000 ????				      IF	.CYCLES < 2
     63  0000 ????				      ECHO	"MACRO ERROR: 'SLEEP': Duration must be > 1"
     64  0000 ????				      ERR
     65  0000 ????				      ENDIF
     66  0000 ????
     67  0000 ????				      IF	.CYCLES & 1
     68  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
     69  0000 ????				      nop	0
     70  0000 ????				      ELSE
     71  0000 ????				      bit	VSYNC
     72  0000 ????				      ENDIF
     73  0000 ????			   .CYCLES    SET	.CYCLES - 3
     74  0000 ????				      ENDIF
     75  0000 ????
     76  0000 ????				      REPEAT	.CYCLES / 2
     77  0000 ????				      nop
     78  0000 ????				      REPEND
     79  0000 ????				      ENDM		;usage: SLEEP n (n>1)
     80  0000 ????
     81  0000 ????						;-------------------------------------------------------------------------------
     82  0000 ????						; VERTICAL_SYNC
     83  0000 ????						; revised version by Edwin Blink -- saves bytes!
     84  0000 ????						; Inserts the code required for a proper 3 scanline vertical sync sequence
     85  0000 ????						; Note: Alters the accumulator
     86  0000 ????
     87  0000 ????						; OUT: A = 0
     88  0000 ????
     89  0000 ????				      MAC	vertical_sync
     90  0000 ????				      lda	#%1110	; each '1' bits generate a VSYNC ON line (bits 1..3)
     91  0000 ????			   .VSLP1     sta	WSYNC	; 1st '0' bit resets Vsync, 2nd '0' bit exit loop
     92  0000 ????				      sta	VSYNC
     93  0000 ????				      lsr
     94  0000 ????				      bne	.VSLP1	; branch until VYSNC has been reset
     95  0000 ????				      ENDM
     96  0000 ????
     97  0000 ????						;-------------------------------------------------------------------------------
     98  0000 ????						; CLEAN_START
     99  0000 ????						; Original author: Andrew Davie
    100  0000 ????						; Standardised start-up code, clears stack, all TIA registers and RAM to 0
    101  0000 ????						; Sets stack pointer to $FF, and all registers to 0
    102  0000 ????						; Sets decimal mode off, sets interrupt flag (kind of un-necessary)
    103  0000 ????						; Use as very first section of code on boot (ie: at reset)
    104  0000 ????						; Code written to minimise total ROM usage - uses weird 6502 knowledge :)
    105  0000 ????
    106  0000 ????				      MAC	clean_start
    107  0000 ????				      sei
    108  0000 ????				      cld
    109  0000 ????
    110  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
    111  0000 ????				      lxa	#0
    112  0000 ????				      ELSE
    113  0000 ????				      ldx	#0
    114  0000 ????				      txa
    115  0000 ????				      ENDIF
    116  0000 ????				      tay
    117  0000 ????			   .CLEAR_STACK dex
    118  0000 ????				      txs
    119  0000 ????				      pha
    120  0000 ????				      bne	.CLEAR_STACK	; SP=$FF, X = A = Y = 0
    121  0000 ????
    122  0000 ????				      ENDM
    123  0000 ????
    124  0000 ????						;-------------------------------------------------------
    125  0000 ????						; SET_POINTER
    126  0000 ????						; Original author: Manuel Rotschkar
    127  0000 ????						;
    128  0000 ????						; Sets a 2 byte RAM pointer to an absolute address.
    129  0000 ????						;
    130  0000 ????						; Usage: SET_POINTER pointer, address
    131  0000 ????						; Example: SET_POINTER SpritePTR, SpriteData
    132  0000 ????						;
    133  0000 ????						; Note: Alters the accumulator, NZ flags
    134  0000 ????						; IN 1: 2 byte RAM location reserved for pointer
    135  0000 ????						; IN 2: absolute address
    136  0000 ????
    137  0000 ????				      MAC	set_pointer
    138  0000 ????			   .POINTER   SET	{1}
    139  0000 ????			   .ADDRESS   SET	{2}
    140  0000 ????
    141  0000 ????				      LDA	#<.ADDRESS	; Get Lowbyte of Address
    142  0000 ????				      STA	.POINTER	; Store in pointer
    143  0000 ????				      LDA	#>.ADDRESS	; Get Hibyte of Address
    144  0000 ????				      STA	.POINTER+1	; Store in pointer+1
    145  0000 ????
    146  0000 ????				      ENDM
    147  0000 ????
    148  0000 ????						;-------------------------------------------------------
    149  0000 ????						; BOUNDARY byte#
    150  0000 ????						; Original author: Denis Debro (borrowed from Bob Smith / Thomas)
    151  0000 ????						;
    152  0000 ????						; Push data to a certain position inside a page and keep count of how
    153  0000 ????						; many free bytes the programmer will have.
    154  0000 ????						;
    155  0000 ????						; eg: BOUNDARY 5    ; position at byte #5 in page
    156  0000 ????
    157  0000 ????			   .FREE_BYTES SET	0
    158  0000 ????				      MAC	boundary
    159  0000 ????				      REPEAT	256
    160  0000 ????				      IF	<. % {1} = 0
    161  0000 ????				      MEXIT
    162  0000 ????				      ELSE
    163  0000 ????			   .FREE_BYTES SET	.FREE_BYTES + 1
    164  0000 ????				      .byte	$00
    165  0000 ????				      ENDIF
    166  0000 ????				      REPEND
    167  0000 ????				      ENDM
    168  0000 ????
    169  0000 ????
    170  0000 ????						; EOF
------- FILE PacMan.asm
      4  0000 ????
      5  0000 ????						;==================================================================================
      6  0000 ????						; Program Definitions
      7  0000 ????						;==================================================================================
      8  0000 ????
      9  0000 ????	       00 16	   SPRITE_HEIGHT =	22
     10  0000 ????	       00 14	   TIMER_LIMIT =	20
     11  0000 ????
     12  0000 ????						;==================================================================================
     13  0000 ????						; Program Variables
     14  0000 ????						;==================================================================================
     15  0000 ????
     16 U008d ????				      SEG.U	Variables
     17 U0080					      ORG	$80
     18 U0080
     19 U0080		       00	   PS_temp    ds	1
     20 U0081
     21 U0081		       00 00	   SpriteAddrPtr ds	2
     22 U0083		       00	   SpriteXPos ds	1
     23 U0084		       00	   SpriteYPos ds	1
     24 U0085
     25 U0085		       00	   SpriteAnimationIndex ds	1
     26 U0086
     27 U0086		       00	   ScoreTens  ds	1
     28 U0087		       00	   ScoreOnes  ds	1
     29 U0088		       00	   TensOffset ds	1
     30 U0089		       00	   OnesOffset ds	1
     31 U008a		       00	   ScoreDisplayTemp ds	1
     32 U008b
     33 U008b		       00	   TimerCounter ds	1
     34 U008c		       00	   PlayerReflectedBuffer ds	1
     35 U008d
     36 U008d							;==================================================================================
     37 U008d							; Program Initialization
     38 U008d							;==================================================================================
     39 U008d
     40  f9c9 ????				      SEG	Executable
     41  f000					      ORG	$F000
     42  f000
     43  f000				   Reset
     44  f000				   ClearMemory
     45  f000		       a2 00		      LDX	#0
     46  f002		       9a		      TXS
     47  f003		       48		      PHA
     48  f004		       8a		      TXA
     49  f005
     50  f005				   ClearMemoryLoop
     51  f005		       48		      PHA
     52  f006		       ca		      DEX
     53  f007		       d0 fc		      BNE	ClearMemoryLoop
     54  f009
     55  f009		       20 10 f1 	      JSR	InitVariables
     56  f00c
     57  f00c							;==================================================================================
     58  f00c							; Main Loop
     59  f00c							;==================================================================================
     60  f00c
     61  f00c				   Main
     62  f00c		       20 1b f0 	      JSR	HandleVSync
     63  f00f		       20 2a f0 	      JSR	HandleVBlank
     64  f012		       20 45 f0 	      JSR	MainKernel
     65  f015		       20 b8 f0 	      JSR	Overscan
     66  f018		       4c 0c f0 	      JMP	Main
     67  f01b
     68  f01b							;==================================================================================
     69  f01b							; HandleVSync
     70  f01b							;==================================================================================
     71  f01b
     72  f01b				   HandleVSync
     73  f01b		       a9 00		      LDA	#0
     74  f01d		       85 01		      STA	VBLANK
     75  f01f		       a9 02		      LDA	#2
     76  f021		       85 00		      STA	VSYNC
     77  f023
     78  f023				   VSyncLoop
     79  f023		       85 02		      STA	WSYNC
     80  f025		       85 02		      STA	WSYNC
     81  f027		       85 02		      STA	WSYNC
     82  f029
     83  f029		       60		      RTS
     84  f02a
     85  f02a							;==================================================================================
     86  f02a							; HandleVBlank
     87  f02a							; Handle Part of Game Logic
     88  f02a							;==================================================================================
     89  f02a
     90  f02a				   HandleVBlank
     91  f02a
     92  f02a							; Initialize TIM64T
     93  f02a		       a9 2a		      LDA	#42
     94  f02c		       8d 96 02 	      STA	TIM64T
     95  f02f
     96  f02f							; Prepare Registers for VBLANK
     97  f02f		       a9 00		      LDA	#0
     98  f031		       85 00		      STA	VSYNC
     99  f033		       a9 42		      LDA	#%01000010
    100  f035		       85 01		      STA	VBLANK
    101  f037
    102  f037							; Processing Tasks
    103  f037		       20 81 f1 	      JSR	GetControllerInputs
    104  f03a		       20 7a f1 	      JSR	UpdateStuff
    105  f03d
    106  f03d				   VBlankLoop
    107  f03d		       ad 84 02 	      LDA	INTIM
    108  f040		       d0 fb		      BNE	VBlankLoop
    109  f042
    110  f042		       85 02		      STA	WSYNC
    111  f044		       60		      RTS
    112  f045
    113  f045							;==================================================================================
    114  f045							; MainKernel
    115  f045							;==================================================================================
    116  f045
    117  f045				   MainKernel
    118  f045		       a9 00		      LDA	#0
    119  f047		       85 01		      STA	VBLANK
    120  f049
    121  f049		       20 3e f1 	      JSR	PositionSpriteX
    122  f04c
    123  f04c		       a2 bf		      LDX	#191
    124  f04e		       85 02		      STA	WSYNC
    125  f050
    126  f050				   MainFrameLoop
    127  f050
    128  f050							; First Line
    129  f050							; Load First Playfield
    130  f050		       bd 00 f4 	      LDA	MainBoard_STRIP_0,x	; 4  4   0
    131  f053		       85 0d		      STA	PF0	; 3  7   12
    132  f055
    133  f055		       bd c0 f4 	      LDA	MainBoard_STRIP_1,x	; 4  11   33
    134  f058		       85 0e		      STA	PF1	; 3  14   42
    135  f05a
    136  f05a		       bd 80 f5 	      LDA	MainBoard_STRIP_2,x	; 4  18
    137  f05d		       85 0f		      STA	PF2	; 3  21
    138  f05f
    139  f05f							; Check Vertical Drawing
    140  f05f		       8a		      TXA		; 2
    141  f060		       38		      SEC		; 2
    142  f061		       e5 84		      SBC	SpriteYPos	; 3
    143  f063		       69 16		      ADC	#SPRITE_HEIGHT	; 2
    144  f065
    145  f065							; Load Second Playfield
    146  f065		       bc 40 f6 	      LDY	MainBoard_STRIP_3,x	; 4  25
    147  f068		       84 0d		      STY	PF0	; 3  28
    148  f06a
    149  f06a		       bc 00 f7 	      LDY	MainBoard_STRIP_4,x	; 4  32
    150  f06d		       84 0e		      STY	PF1
    151  f06f
    152  f06f		       bc c0 f7 	      LDY	MainBoard_STRIP_5,x	; 4  39
    153  f072		       84 0f		      STY	PF2	; 3  42
    154  f074
    155  f074							; Load P0 Sprite Data
    156  f074		       90 05		      BCC	SkipDrawing	; 3
    157  f076		       a8		      TAY		; 3
    158  f077		       b1 81		      LDA	(SpriteAddrPtr),y	; 5
    159  f079		       85 1b		      STA	GRP0	; 3
    160  f07b
    161  f07b				   SkipDrawing
    162  f07b							; Decrease X and Go To Next Line
    163  f07b		       ca		      DEX		; 2
    164  f07c		       85 02		      STA	WSYNC	; 3
    165  f07e		       e0 00		      CPX	#0
    166  f080		       f0 29		      BEQ	MainFrameLoopEnd	; 2 
    167  f082
    168  f082							; Second Line
    169  f082
    170  f082							; Load First Playfield
    171  f082		       bd 00 f4 	      LDA	MainBoard_STRIP_0,x	; 4
    172  f085		       85 0d		      STA	PF0	; 3
    173  f087
    174  f087		       bd c0 f4 	      LDA	MainBoard_STRIP_1,x	; 4
    175  f08a		       85 0e		      STA	PF1	; 3
    176  f08c
    177  f08c		       bd 80 f5 	      LDA	MainBoard_STRIP_2,x	; 4
    178  f08f		       85 0f		      STA	PF2	; 3
    179  f091
    180  f091							; Load Second Player
    181  f091		       a9 00		      LDA	#0
    182  f093		       85 1c		      STA	GRP1
    183  f095		       ea		      NOP
    184  f096		       ea		      NOP
    185  f097
    186  f097							; Load Second Playfield
    187  f097		       bd 40 f6 	      LDA	MainBoard_STRIP_3,x	; 4
    188  f09a		       85 0d		      STA	PF0	; 3
    189  f09c
    190  f09c		       bd 00 f7 	      LDA	MainBoard_STRIP_4,x	; 4
    191  f09f		       85 0e		      STA	PF1	; 3
    192  f0a1
    193  f0a1		       bd c0 f7 	      LDA	MainBoard_STRIP_5,x	; 4
    194  f0a4		       85 0f		      STA	PF2	; 3
    195  f0a6
    196  f0a6							; Decrease X and Go To Next Line
    197  f0a6		       85 02		      STA	WSYNC	; 3
    198  f0a8		       ca		      DEX		; 2
    199  f0a9		       d0 a5		      BNE	MainFrameLoop	; 2
    200  f0ab
    201  f0ab				   MainFrameLoopEnd
    202  f0ab							; Clearing Playfield Registers
    203  f0ab		       a9 00		      LDA	#0
    204  f0ad		       85 0d		      STA	PF0
    205  f0af		       85 0e		      STA	PF1
    206  f0b1		       85 0f		      STA	PF2
    207  f0b3
    208  f0b3		       85 1b		      STA	GRP0
    209  f0b5		       85 1c		      STA	GRP1
    210  f0b7
    211  f0b7		       60		      RTS
    212  f0b8
    213  f0b8							;==================================================================================
    214  f0b8							; Overscan
    215  f0b8							;==================================================================================
    216  f0b8
    217  f0b8				   Overscan
    218  f0b8
    219  f0b8							; Prepare Registers for Overscan Drawing
    220  f0b8		       a9 00		      LDA	#0
    221  f0ba		       85 0e		      STA	PF1
    222  f0bc		       85 0b		      STA	REFP0
    223  f0be
    224  f0be		       a9 0e		      LDA	#$0E
    225  f0c0		       85 06		      STA	COLUP0
    226  f0c2		       85 07		      STA	COLUP1
    227  f0c4
    228  f0c4							; Calculate Tens Offset
    229  f0c4		       a6 86		      LDX	ScoreTens
    230  f0c6		       bd e9 f1 	      LDA	MultBy20,x
    231  f0c9		       85 88		      STA	TensOffset
    232  f0cb
    233  f0cb							; Calculate Ones Offset
    234  f0cb		       a6 87		      LDX	ScoreOnes
    235  f0cd		       bd e9 f1 	      LDA	MultBy20,x
    236  f0d0		       85 89		      STA	OnesOffset
    237  f0d2
    238  f0d2							; Adjust Score Placement
    239  f0d2		       85 02		      STA	WSYNC
    240  f0d4		       20 e8 f1 	      JSR	Delay12
    241  f0d7		       20 e8 f1 	      JSR	Delay12
    242  f0da		       85 10		      STA	RESP0
    243  f0dc		       85 11		      STA	RESP1
    244  f0de
    245  f0de		       a2 1c		      LDX	#28
    246  f0e0				   OverscanLoop
    247  f0e0
    248  f0e0							; Is it time to draw?
    249  f0e0		       e0 0a		      CPX	#10
    250  f0e2		       90 16		      BCC	SmallerThan9
    251  f0e4
    252  f0e4							; Time to draw
    253  f0e4		       8a		      TXA
    254  f0e5		       e9 09		      SBC	#9
    255  f0e7		       65 88		      ADC	TensOffset
    256  f0e9		       a8		      TAY
    257  f0ea		       b9 00 f9 	      LDA	BottomData,y
    258  f0ed		       85 1b		      STA	GRP0
    259  f0ef
    260  f0ef		       8a		      TXA
    261  f0f0		       e9 09		      SBC	#9
    262  f0f2		       65 89		      ADC	OnesOffset
    263  f0f4		       a8		      TAY
    264  f0f5		       b9 00 f9 	      LDA	BottomData,y
    265  f0f8		       85 1c		      STA	GRP1
    266  f0fa
    267  f0fa				   SmallerThan9
    268  f0fa		       85 02		      STA	WSYNC
    269  f0fc		       ca		      DEX
    270  f0fd		       d0 e1		      BNE	OverscanLoop
    271  f0ff
    272  f0ff							; Clear Player Registers
    273  f0ff		       a9 00		      LDA	#0
    274  f101		       85 1b		      STA	GRP0
    275  f103		       85 1c		      STA	GRP1
    276  f105
    277  f105							; Return P0 Register Reflection Value
    278  f105		       a5 8c		      LDA	PlayerReflectedBuffer
    279  f107		       85 0b		      STA	REFP0
    280  f109
    281  f109							; Return P0 and P1 colors
    282  f109		       a9 1e		      LDA	#$1E
    283  f10b		       85 06		      STA	COLUP0
    284  f10d		       85 07		      STA	COLUP1
    285  f10f
    286  f10f		       60		      RTS
    287  f110
    288  f110							;==================================================================================
    289  f110							; InitVariables
    290  f110							;==================================================================================
    291  f110
    292  f110				   InitVariables
    293  f110							; Initialize BG Color and PF Color
    294  f110		       a9 00		      LDA	#$00
    295  f112		       85 09		      STA	COLUBK
    296  f114		       a9 72		      LDA	#$72
    297  f116		       85 08		      STA	COLUPF
    298  f118
    299  f118							; Initialize Player Color and Pattern
    300  f118		       a9 1e		      LDA	#$1E
    301  f11a		       85 06		      STA	COLUP0
    302  f11c
    303  f11c							; Initialize Variables
    304  f11c
    305  f11c							; SpriteXPos
    306  f11c		       a9 7d		      LDA	#125
    307  f11e		       85 83		      STA	SpriteXPos
    308  f120
    309  f120							; SpriteYPos
    310  f120		       a9 69		      LDA	#105
    311  f122		       85 84		      STA	SpriteYPos
    312  f124
    313  f124							; Timer Counter
    314  f124		       a9 00		      LDA	#0
    315  f126		       85 8b		      STA	TimerCounter
    316  f128
    317  f128							; Score
    318  f128		       85 86		      STA	ScoreTens
    319  f12a		       85 87		      STA	ScoreOnes
    320  f12c
    321  f12c							; Set Controller Inputs
    322  f12c		       8d 81 02 	      STA	SWACNT
    323  f12f
    324  f12f							; Set SpriteAnimationIndex
    325  f12f		       85 85		      STA	SpriteAnimationIndex
    326  f131
    327  f131							; Set P0 and P1 Delays
    328  f131		       a9 01		      LDA	#1
    329  f133		       85 25		      STA	VDELP0
    330  f135
    331  f135							; SpriteDataPointer
    332  f135		       a9 00		      LDA	#<Sprite0Data
    333  f137		       85 81		      STA	SpriteAddrPtr
    334  f139		       a9 f3		      LDA	#>Sprite0Data
    335  f13b		       85 82		      STA	SpriteAddrPtr+1
    336  f13d
    337  f13d		       60		      RTS
    338  f13e
    339  f13e							;==================================================================================
    340  f13e							; PositionSpriteX - Subroutine to position sprite
    341  f13e							;==================================================================================
    342  f13e
    343  f13e				   PositionSpriteX
    344  f13e		       85 02		      STA	WSYNC	; 3
    345  f140		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    346  f142
    347  f142		       a2 01		      LDX	#1	; sprite index 		  ; 2
    348  f144
    349  f144				   PosSP
    350  f144
    351  f144		       b5 82		      LDA	SpriteXPos-1,x	; 4
    352  f146		       a8		      TAY		; 2
    353  f147
    354  f147							; Divide by 16
    355  f147		       4a		      LSR		; 2
    356  f148		       4a		      LSR		; 2
    357  f149		       4a		      LSR		; 2
    358  f14a		       4a		      LSR		; 2
    359  f14b		       85 80		      STA	PS_temp	; 3
    360  f14d
    361  f14d		       98		      TYA		; 2
    362  f14e		       29 0f		      AND	#15	; 2
    363  f150
    364  f150		       18		      CLC		; 2
    365  f151
    366  f151		       65 80		      ADC	PS_temp	; 3
    367  f153		       a4 80		      LDY	PS_temp	; 3
    368  f155
    369  f155		       c9 0f		      CMP	#15	; 2
    370  f157		       90 03		      BCC	NH	; 3
    371  f159		       e9 0f		      SBC	#15	; 2
    372  f15b		       c8		      INY		; 2
    373  f15c
    374  f15c				   NH
    375  f15c							; Use remainder for fine adjustment
    376  f15c		       49 07		      EOR	#7	; 2
    377  f15e		       0a		      ASL		; 2
    378  f15f		       0a		      ASL		; 2
    379  f160		       0a		      ASL		; 2
    380  f161		       0a		      ASL		; 2
    381  f162
    382  f162		       95 1f		      STA	HMP0-1,x	; fine movement	     ; 4
    383  f164		       85 02		      STA	WSYNC	; 3
    384  f166
    385  f166		       20 79 f1 	      JSR	Ret	; just a 12 cycle delay     ; 12
    386  f169		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    387  f16b
    388  f16b
    389  f16b				   Jiggle
    390  f16b		       88		      dey		; 2
    391  f16c		       10 fd		      bpl	Jiggle	; 3
    392  f16e
    393  f16e		       95 0f		      sta	RESP0-1,x	; 4
    394  f170
    395  f170		       ca		      dex		; 2
    396  f171		       d0 d1		      bne	PosSP	; 3
    397  f173
    398  f173		       85 02		      sta	WSYNC	; 3
    399  f175		       85 2a		      sta	HMOVE	; 3
    400  f177		       85 02		      sta	WSYNC	; 3
    401  f179
    402  f179				   Ret
    403  f179		       60		      RTS		; 6
    404  f17a
    405  f17a							;==================================================================================
    406  f17a							; UpdateStuff
    407  f17a							;==================================================================================
    408  f17a
    409  f17a				   UpdateStuff
    410  f17a							; Update Sprite X Pos
    411  f17a							;INC SpriteXPos
    412  f17a
    413  f17a							; Update Sprite Y Pos
    414  f17a							;INC SpriteYPos
    415  f17a
    416  f17a							; Update Timer
    417  f17a		       20 b9 f1 	      JSR	UpdateTimer
    418  f17d
    419  f17d							; Increase Score
    420  f17d		       20 c9 f1 	      JSR	UpdateScore
    421  f180
    422  f180		       60		      RTS
    423  f181
    424  f181							;==================================================================================
    425  f181							; GetControllerInputs
    426  f181							;==================================================================================
    427  f181
    428  f181				   GetControllerInputs
    429  f181		       ae 80 02 	      LDX	SWCHA
    430  f184
    431  f184							; Check Right Input
    432  f184		       8a		      TXA
    433  f185		       29 80		      AND	#%10000000
    434  f187		       f0 12		      BEQ	RightInput
    435  f189
    436  f189							; Check Left Input
    437  f189		       8a		      TXA
    438  f18a		       29 40		      AND	#%01000000
    439  f18c		       f0 18		      BEQ	LeftInput
    440  f18e
    441  f18e							; Check Down Input
    442  f18e		       8a		      TXA
    443  f18f		       29 20		      AND	#%00100000
    444  f191		       f0 1e		      BEQ	DownInput
    445  f193
    446  f193							; Check Up Input
    447  f193		       8a		      TXA
    448  f194		       29 10		      AND	#%00010000
    449  f196		       f0 1e		      BEQ	UpInput
    450  f198
    451  f198							; No Input Detected
    452  f198		       4c b8 f1 	      JMP	ControllerRet
    453  f19b
    454  f19b				   RightInput
    455  f19b		       e6 83		      INC	SpriteXPos
    456  f19d		       a9 08		      LDA	#%1000
    457  f19f		       85 0b		      STA	REFP0
    458  f1a1		       85 8c		      STA	PlayerReflectedBuffer
    459  f1a3		       4c b8 f1 	      JMP	ControllerRet
    460  f1a6
    461  f1a6				   LeftInput
    462  f1a6		       c6 83		      DEC	SpriteXPos
    463  f1a8		       a9 00		      LDA	#0
    464  f1aa		       85 0b		      STA	REFP0
    465  f1ac		       85 8c		      STA	PlayerReflectedBuffer
    466  f1ae		       4c b8 f1 	      JMP	ControllerRet
    467  f1b1
    468  f1b1				   DownInput
    469  f1b1		       c6 84		      DEC	SpriteYPos
    470  f1b3		       4c b8 f1 	      JMP	ControllerRet
    471  f1b6
    472  f1b6				   UpInput
    473  f1b6		       e6 84		      INC	SpriteYPos
    474  f1b8
    475  f1b8				   ControllerRet
    476  f1b8		       60		      RTS
    477  f1b9
    478  f1b9							;==================================================================================
    479  f1b9							; UpdateTimer
    480  f1b9							;==================================================================================
    481  f1b9
    482  f1b9				   UpdateTimer
    483  f1b9		       a5 8b		      LDA	TimerCounter
    484  f1bb		       c9 00		      CMP	#0
    485  f1bd		       d0 07		      BNE	DidntReachLimit
    486  f1bf
    487  f1bf				   ReachedLimit
    488  f1bf		       a9 14		      LDA	#TIMER_LIMIT
    489  f1c1		       85 8b		      STA	TimerCounter
    490  f1c3		       4c c8 f1 	      JMP	TimerRet
    491  f1c6
    492  f1c6				   DidntReachLimit
    493  f1c6		       c6 8b		      DEC	TimerCounter
    494  f1c8
    495  f1c8				   TimerRet
    496  f1c8		       60		      RTS
    497  f1c9
    498  f1c9							;==================================================================================
    499  f1c9							; UpdateScore
    500  f1c9							;==================================================================================
    501  f1c9
    502  f1c9				   UpdateScore
    503  f1c9							; Check If Timer == 0
    504  f1c9		       a5 8b		      LDA	TimerCounter
    505  f1cb		       c9 00		      CMP	#0
    506  f1cd		       d0 18		      BNE	NotYet10
    507  f1cf
    508  f1cf							; Increase Ones
    509  f1cf		       e6 87		      INC	ScoreOnes
    510  f1d1
    511  f1d1							; Check if Ones reached 10
    512  f1d1		       a6 87		      LDX	ScoreOnes
    513  f1d3		       e0 0a		      CPX	#10
    514  f1d5		       d0 10		      BNE	NotYet10
    515  f1d7
    516  f1d7				   OnesReached10
    517  f1d7							; Reset Ones and Increase Tens
    518  f1d7		       a2 00		      LDX	#0
    519  f1d9		       86 87		      STX	ScoreOnes
    520  f1db		       e6 86		      INC	ScoreTens
    521  f1dd
    522  f1dd							; Check if Tens reached 10
    523  f1dd		       a6 86		      LDX	ScoreTens
    524  f1df		       e0 0a		      CPX	#10
    525  f1e1		       d0 04		      BNE	NotYet10
    526  f1e3
    527  f1e3				   TensReached10
    528  f1e3							; Reset Tens
    529  f1e3		       a2 00		      LDX	#0
    530  f1e5		       86 86		      STX	ScoreTens
    531  f1e7
    532  f1e7				   NotYet10
    533  f1e7		       60		      RTS
    534  f1e8
    535  f1e8							;==================================================================================
    536  f1e8							; Delay12 - Waste 12 cycles of CPU
    537  f1e8							;==================================================================================
    538  f1e8
    539  f1e8				   Delay12
    540  f1e8		       60		      RTS
    541  f1e9
    542  f1e9							;==================================================================================
    543  f1e9							; MultBy20
    544  f1e9							;==================================================================================
    545  f1e9
    546  f1e9				   MultBy20
    547  f1e9		       00 14 28 3c*	      .byte.b	0,20,40,60,80,100,120,140,160,180,200
    548  f1f4
    549  f1f4							;==================================================================================
    550  f1f4							; Control Page Boundry
    551  f1f4							;==================================================================================
    552  f1f4
    553  f1f4		       00 01 02 03*	      .byte.b	0,1,2,3,4,5,6,7,8,9,10
    554  f1ff		       00 01		      .byte.b	0,1
    555  f201
    556  f201							;===============================================================================
    557  f201							; free space check before page boundry
    558  f201							;===============================================================================
    559  f201
 Start of Sprite0Data is:  $f201
    560  f201					      echo	"Start of Sprite0Data is: ", *
    561  f300		       00 00 00 00*	      align	256
    562  f300
    563  f300							;==================================================================================
    564  f300							; Sprite Data
    565  f300							;==================================================================================
    566  f300
    567  f300				   Sprite0Data
    568  f300							; Frame 0
    569  f300		       00		      .byte.b	#%00000000
    570  f301		       00		      .byte.b	#%00000000
    571  f302		       18		      .byte.b	#%00011000
    572  f303		       18		      .byte.b	#%00011000
    573  f304		       7e		      .byte.b	#%01111110
    574  f305		       7e		      .byte.b	#%01111110
    575  f306		       ff		      .byte.b	#%11111111
    576  f307		       ff		      .byte.b	#%11111111
    577  f308		       3f		      .byte.b	#%00111111
    578  f309		       3f		      .byte.b	#%00111111
    579  f30a		       0f		      .byte.b	#%00001111
    580  f30b		       0f		      .byte.b	#%00001111
    581  f30c		       3f		      .byte.b	#%00111111
    582  f30d		       3f		      .byte.b	#%00111111
    583  f30e		       ff		      .byte.b	#%11111111
    584  f30f		       ff		      .byte.b	#%11111111
    585  f310		       7e		      .byte.b	#%01111110
    586  f311		       7e		      .byte.b	#%01111110
    587  f312		       18		      .byte.b	#%00011000
    588  f313		       18		      .byte.b	#%00011000
    589  f314		       00		      .byte.b	#%00000000
    590  f315		       00		      .byte.b	#%00000000
    591  f316
    592  f316							; Frame 1
    593  f316		       00		      .byte.b	#%00000000
    594  f317		       18		      .byte.b	#%00011000
    595  f318		       7e		      .byte.b	#%01111110
    596  f319		       ff		      .byte.b	#%11111111
    597  f31a		       ff		      .byte.b	#%11111111
    598  f31b		       ff		      .byte.b	#%11111111
    599  f31c		       ff		      .byte.b	#%11111111
    600  f31d		       ff		      .byte.b	#%11111111
    601  f31e		       7e		      .byte.b	#%01111110
    602  f31f		       18		      .byte.b	#%00011000
    603  f320		       00		      .byte.b	#%00000000
    604  f321
    605  f321							; Frame 2
    606  f321
    607  f321							;===============================================================================
    608  f321							; free space check before page boundry
    609  f321							;===============================================================================
    610  f321
 End of Sprite0Data is:  $f321
    611  f321					      echo	"End of Sprite0Data is: ", *
    612  f400		       00 00 00 00*	      align	256
    613  f400
    614  f400							;==================================================================================
    615  f400							; Board Data
    616  f400							;==================================================================================
    617  f400
------- FILE MainBoard.asm LEVEL 2 PASS 2
      0  f400					      include	"MainBoard.asm"
      1  f400				   MainBoard
      2  f400
      3  f400				   MainBoard_STRIP_0
      4  f400		       50		      .byte.b	80
      5  f401		       00		      .byte.b	0
      6  f402		       f0		      .byte.b	240
      7  f403		       f0		      .byte.b	240
      8  f404		       f0		      .byte.b	240
      9  f405		       f0		      .byte.b	240
     10  f406		       10		      .byte.b	16
     11  f407		       10		      .byte.b	16
     12  f408		       10		      .byte.b	16
     13  f409		       10		      .byte.b	16
     14  f40a		       10		      .byte.b	16
     15  f40b		       10		      .byte.b	16
     16  f40c		       10		      .byte.b	16
     17  f40d		       10		      .byte.b	16
     18  f40e		       10		      .byte.b	16
     19  f40f		       10		      .byte.b	16
     20  f410		       10		      .byte.b	16
     21  f411		       10		      .byte.b	16
     22  f412		       10		      .byte.b	16
     23  f413		       10		      .byte.b	16
     24  f414		       10		      .byte.b	16
     25  f415		       10		      .byte.b	16
     26  f416		       10		      .byte.b	16
     27  f417		       10		      .byte.b	16
     28  f418		       10		      .byte.b	16
     29  f419		       10		      .byte.b	16
     30  f41a		       10		      .byte.b	16
     31  f41b		       10		      .byte.b	16
     32  f41c		       10		      .byte.b	16
     33  f41d		       10		      .byte.b	16
     34  f41e		       10		      .byte.b	16
     35  f41f		       10		      .byte.b	16
     36  f420		       10		      .byte.b	16
     37  f421		       10		      .byte.b	16
     38  f422		       10		      .byte.b	16
     39  f423		       10		      .byte.b	16
     40  f424		       10		      .byte.b	16
     41  f425		       10		      .byte.b	16
     42  f426		       10		      .byte.b	16
     43  f427		       10		      .byte.b	16
     44  f428		       10		      .byte.b	16
     45  f429		       10		      .byte.b	16
     46  f42a		       10		      .byte.b	16
     47  f42b		       10		      .byte.b	16
     48  f42c		       10		      .byte.b	16
     49  f42d		       10		      .byte.b	16
     50  f42e		       10		      .byte.b	16
     51  f42f		       10		      .byte.b	16
     52  f430		       10		      .byte.b	16
     53  f431		       10		      .byte.b	16
     54  f432		       10		      .byte.b	16
     55  f433		       10		      .byte.b	16
     56  f434		       10		      .byte.b	16
     57  f435		       10		      .byte.b	16
     58  f436		       10		      .byte.b	16
     59  f437		       10		      .byte.b	16
     60  f438		       10		      .byte.b	16
     61  f439		       10		      .byte.b	16
     62  f43a		       10		      .byte.b	16
     63  f43b		       10		      .byte.b	16
     64  f43c		       10		      .byte.b	16
     65  f43d		       10		      .byte.b	16
     66  f43e		       10		      .byte.b	16
     67  f43f		       10		      .byte.b	16
     68  f440		       10		      .byte.b	16
     69  f441		       10		      .byte.b	16
     70  f442		       10		      .byte.b	16
     71  f443		       10		      .byte.b	16
     72  f444		       10		      .byte.b	16
     73  f445		       10		      .byte.b	16
     74  f446		       10		      .byte.b	16
     75  f447		       10		      .byte.b	16
     76  f448		       10		      .byte.b	16
     77  f449		       10		      .byte.b	16
     78  f44a		       10		      .byte.b	16
     79  f44b		       10		      .byte.b	16
     80  f44c		       10		      .byte.b	16
     81  f44d		       10		      .byte.b	16
     82  f44e		       10		      .byte.b	16
     83  f44f		       10		      .byte.b	16
     84  f450		       10		      .byte.b	16
     85  f451		       10		      .byte.b	16
     86  f452		       10		      .byte.b	16
     87  f453		       10		      .byte.b	16
     88  f454		       10		      .byte.b	16
     89  f455		       10		      .byte.b	16
     90  f456		       10		      .byte.b	16
     91  f457		       10		      .byte.b	16
     92  f458		       10		      .byte.b	16
     93  f459		       10		      .byte.b	16
     94  f45a		       10		      .byte.b	16
     95  f45b		       10		      .byte.b	16
     96  f45c		       10		      .byte.b	16
     97  f45d		       10		      .byte.b	16
     98  f45e		       10		      .byte.b	16
     99  f45f		       10		      .byte.b	16
    100  f460		       f0		      .byte.b	240
    101  f461		       10		      .byte.b	16
    102  f462		       10		      .byte.b	16
    103  f463		       10		      .byte.b	16
    104  f464		       10		      .byte.b	16
    105  f465		       10		      .byte.b	16
    106  f466		       10		      .byte.b	16
    107  f467		       10		      .byte.b	16
    108  f468		       10		      .byte.b	16
    109  f469		       10		      .byte.b	16
    110  f46a		       10		      .byte.b	16
    111  f46b		       10		      .byte.b	16
    112  f46c		       10		      .byte.b	16
    113  f46d		       10		      .byte.b	16
    114  f46e		       10		      .byte.b	16
    115  f46f		       10		      .byte.b	16
    116  f470		       10		      .byte.b	16
    117  f471		       10		      .byte.b	16
    118  f472		       10		      .byte.b	16
    119  f473		       10		      .byte.b	16
    120  f474		       10		      .byte.b	16
    121  f475		       10		      .byte.b	16
    122  f476		       10		      .byte.b	16
    123  f477		       10		      .byte.b	16
    124  f478		       10		      .byte.b	16
    125  f479		       10		      .byte.b	16
    126  f47a		       10		      .byte.b	16
    127  f47b		       10		      .byte.b	16
    128  f47c		       10		      .byte.b	16
    129  f47d		       10		      .byte.b	16
    130  f47e		       10		      .byte.b	16
    131  f47f		       10		      .byte.b	16
    132  f480		       10		      .byte.b	16
    133  f481		       10		      .byte.b	16
    134  f482		       10		      .byte.b	16
    135  f483		       10		      .byte.b	16
    136  f484		       10		      .byte.b	16
    137  f485		       10		      .byte.b	16
    138  f486		       10		      .byte.b	16
    139  f487		       10		      .byte.b	16
    140  f488		       10		      .byte.b	16
    141  f489		       10		      .byte.b	16
    142  f48a		       10		      .byte.b	16
    143  f48b		       10		      .byte.b	16
    144  f48c		       10		      .byte.b	16
    145  f48d		       10		      .byte.b	16
    146  f48e		       10		      .byte.b	16
    147  f48f		       10		      .byte.b	16
    148  f490		       10		      .byte.b	16
    149  f491		       10		      .byte.b	16
    150  f492		       10		      .byte.b	16
    151  f493		       10		      .byte.b	16
    152  f494		       10		      .byte.b	16
    153  f495		       10		      .byte.b	16
    154  f496		       10		      .byte.b	16
    155  f497		       10		      .byte.b	16
    156  f498		       10		      .byte.b	16
    157  f499		       10		      .byte.b	16
    158  f49a		       10		      .byte.b	16
    159  f49b		       10		      .byte.b	16
    160  f49c		       10		      .byte.b	16
    161  f49d		       10		      .byte.b	16
    162  f49e		       10		      .byte.b	16
    163  f49f		       10		      .byte.b	16
    164  f4a0		       10		      .byte.b	16
    165  f4a1		       10		      .byte.b	16
    166  f4a2		       10		      .byte.b	16
    167  f4a3		       10		      .byte.b	16
    168  f4a4		       10		      .byte.b	16
    169  f4a5		       10		      .byte.b	16
    170  f4a6		       10		      .byte.b	16
    171  f4a7		       10		      .byte.b	16
    172  f4a8		       10		      .byte.b	16
    173  f4a9		       10		      .byte.b	16
    174  f4aa		       10		      .byte.b	16
    175  f4ab		       10		      .byte.b	16
    176  f4ac		       10		      .byte.b	16
    177  f4ad		       10		      .byte.b	16
    178  f4ae		       10		      .byte.b	16
    179  f4af		       10		      .byte.b	16
    180  f4b0		       10		      .byte.b	16
    181  f4b1		       10		      .byte.b	16
    182  f4b2		       10		      .byte.b	16
    183  f4b3		       10		      .byte.b	16
    184  f4b4		       10		      .byte.b	16
    185  f4b5		       10		      .byte.b	16
    186  f4b6		       10		      .byte.b	16
    187  f4b7		       10		      .byte.b	16
    188  f4b8		       10		      .byte.b	16
    189  f4b9		       10		      .byte.b	16
    190  f4ba		       f0		      .byte.b	240
    191  f4bb		       f0		      .byte.b	240
    192  f4bc		       f0		      .byte.b	240
    193  f4bd		       f0		      .byte.b	240
    194  f4be		       00		      .byte.b	0
    195  f4bf		       00		      .byte.b	0
    196  f4c0				   MainBoard_STRIP_1
    197  f4c0		       aa		      .byte.b	170
    198  f4c1		       00		      .byte.b	0
    199  f4c2		       ff		      .byte.b	255
    200  f4c3		       ff		      .byte.b	255
    201  f4c4		       ff		      .byte.b	255
    202  f4c5		       ff		      .byte.b	255
    203  f4c6		       10		      .byte.b	16
    204  f4c7		       10		      .byte.b	16
    205  f4c8		       10		      .byte.b	16
    206  f4c9		       10		      .byte.b	16
    207  f4ca		       10		      .byte.b	16
    208  f4cb		       10		      .byte.b	16
    209  f4cc		       10		      .byte.b	16
    210  f4cd		       10		      .byte.b	16
    211  f4ce		       10		      .byte.b	16
    212  f4cf		       10		      .byte.b	16
    213  f4d0		       10		      .byte.b	16
    214  f4d1		       10		      .byte.b	16
    215  f4d2		       10		      .byte.b	16
    216  f4d3		       10		      .byte.b	16
    217  f4d4		       10		      .byte.b	16
    218  f4d5		       10		      .byte.b	16
    219  f4d6		       10		      .byte.b	16
    220  f4d7		       10		      .byte.b	16
    221  f4d8		       10		      .byte.b	16
    222  f4d9		       10		      .byte.b	16
    223  f4da		       10		      .byte.b	16
    224  f4db		       10		      .byte.b	16
    225  f4dc		       10		      .byte.b	16
    226  f4dd		       10		      .byte.b	16
    227  f4de		       10		      .byte.b	16
    228  f4df		       10		      .byte.b	16
    229  f4e0		       10		      .byte.b	16
    230  f4e1		       10		      .byte.b	16
    231  f4e2		       10		      .byte.b	16
    232  f4e3		       10		      .byte.b	16
    233  f4e4		       10		      .byte.b	16
    234  f4e5		       10		      .byte.b	16
    235  f4e6		       10		      .byte.b	16
    236  f4e7		       10		      .byte.b	16
    237  f4e8		       10		      .byte.b	16
    238  f4e9		       10		      .byte.b	16
    239  f4ea		       10		      .byte.b	16
    240  f4eb		       10		      .byte.b	16
    241  f4ec		       10		      .byte.b	16
    242  f4ed		       10		      .byte.b	16
    243  f4ee		       10		      .byte.b	16
    244  f4ef		       10		      .byte.b	16
    245  f4f0		       10		      .byte.b	16
    246  f4f1		       10		      .byte.b	16
    247  f4f2		       10		      .byte.b	16
    248  f4f3		       10		      .byte.b	16
    249  f4f4		       10		      .byte.b	16
    250  f4f5		       10		      .byte.b	16
    251  f4f6		       10		      .byte.b	16
    252  f4f7		       10		      .byte.b	16
    253  f4f8		       10		      .byte.b	16
    254  f4f9		       10		      .byte.b	16
    255  f4fa		       10		      .byte.b	16
    256  f4fb		       10		      .byte.b	16
    257  f4fc		       10		      .byte.b	16
    258  f4fd		       10		      .byte.b	16
    259  f4fe		       10		      .byte.b	16
    260  f4ff		       10		      .byte.b	16
    261  f500		       10		      .byte.b	16
    262  f501		       10		      .byte.b	16
    263  f502		       10		      .byte.b	16
    264  f503		       10		      .byte.b	16
    265  f504		       10		      .byte.b	16
    266  f505		       10		      .byte.b	16
    267  f506		       10		      .byte.b	16
    268  f507		       10		      .byte.b	16
    269  f508		       10		      .byte.b	16
    270  f509		       10		      .byte.b	16
    271  f50a		       10		      .byte.b	16
    272  f50b		       10		      .byte.b	16
    273  f50c		       10		      .byte.b	16
    274  f50d		       10		      .byte.b	16
    275  f50e		       10		      .byte.b	16
    276  f50f		       10		      .byte.b	16
    277  f510		       10		      .byte.b	16
    278  f511		       10		      .byte.b	16
    279  f512		       10		      .byte.b	16
    280  f513		       10		      .byte.b	16
    281  f514		       10		      .byte.b	16
    282  f515		       10		      .byte.b	16
    283  f516		       10		      .byte.b	16
    284  f517		       10		      .byte.b	16
    285  f518		       10		      .byte.b	16
    286  f519		       10		      .byte.b	16
    287  f51a		       10		      .byte.b	16
    288  f51b		       10		      .byte.b	16
    289  f51c		       10		      .byte.b	16
    290  f51d		       10		      .byte.b	16
    291  f51e		       10		      .byte.b	16
    292  f51f		       10		      .byte.b	16
    293  f520		       ff		      .byte.b	255
    294  f521		       10		      .byte.b	16
    295  f522		       10		      .byte.b	16
    296  f523		       10		      .byte.b	16
    297  f524		       10		      .byte.b	16
    298  f525		       10		      .byte.b	16
    299  f526		       10		      .byte.b	16
    300  f527		       10		      .byte.b	16
    301  f528		       10		      .byte.b	16
    302  f529		       10		      .byte.b	16
    303  f52a		       10		      .byte.b	16
    304  f52b		       10		      .byte.b	16
    305  f52c		       10		      .byte.b	16
    306  f52d		       10		      .byte.b	16
    307  f52e		       10		      .byte.b	16
    308  f52f		       10		      .byte.b	16
    309  f530		       10		      .byte.b	16
    310  f531		       10		      .byte.b	16
    311  f532		       10		      .byte.b	16
    312  f533		       10		      .byte.b	16
    313  f534		       10		      .byte.b	16
    314  f535		       10		      .byte.b	16
    315  f536		       10		      .byte.b	16
    316  f537		       10		      .byte.b	16
    317  f538		       10		      .byte.b	16
    318  f539		       10		      .byte.b	16
    319  f53a		       10		      .byte.b	16
    320  f53b		       10		      .byte.b	16
    321  f53c		       10		      .byte.b	16
    322  f53d		       10		      .byte.b	16
    323  f53e		       10		      .byte.b	16
    324  f53f		       10		      .byte.b	16
    325  f540		       10		      .byte.b	16
    326  f541		       10		      .byte.b	16
    327  f542		       10		      .byte.b	16
    328  f543		       10		      .byte.b	16
    329  f544		       10		      .byte.b	16
    330  f545		       10		      .byte.b	16
    331  f546		       10		      .byte.b	16
    332  f547		       10		      .byte.b	16
    333  f548		       10		      .byte.b	16
    334  f549		       10		      .byte.b	16
    335  f54a		       10		      .byte.b	16
    336  f54b		       10		      .byte.b	16
    337  f54c		       10		      .byte.b	16
    338  f54d		       10		      .byte.b	16
    339  f54e		       10		      .byte.b	16
    340  f54f		       10		      .byte.b	16
    341  f550		       10		      .byte.b	16
    342  f551		       10		      .byte.b	16
    343  f552		       10		      .byte.b	16
    344  f553		       10		      .byte.b	16
    345  f554		       10		      .byte.b	16
    346  f555		       10		      .byte.b	16
    347  f556		       10		      .byte.b	16
    348  f557		       10		      .byte.b	16
    349  f558		       10		      .byte.b	16
    350  f559		       10		      .byte.b	16
    351  f55a		       10		      .byte.b	16
    352  f55b		       10		      .byte.b	16
    353  f55c		       10		      .byte.b	16
    354  f55d		       10		      .byte.b	16
    355  f55e		       10		      .byte.b	16
    356  f55f		       10		      .byte.b	16
    357  f560		       10		      .byte.b	16
    358  f561		       10		      .byte.b	16
    359  f562		       10		      .byte.b	16
    360  f563		       10		      .byte.b	16
    361  f564		       10		      .byte.b	16
    362  f565		       10		      .byte.b	16
    363  f566		       10		      .byte.b	16
    364  f567		       10		      .byte.b	16
    365  f568		       10		      .byte.b	16
    366  f569		       10		      .byte.b	16
    367  f56a		       10		      .byte.b	16
    368  f56b		       10		      .byte.b	16
    369  f56c		       10		      .byte.b	16
    370  f56d		       10		      .byte.b	16
    371  f56e		       10		      .byte.b	16
    372  f56f		       10		      .byte.b	16
    373  f570		       10		      .byte.b	16
    374  f571		       10		      .byte.b	16
    375  f572		       10		      .byte.b	16
    376  f573		       10		      .byte.b	16
    377  f574		       10		      .byte.b	16
    378  f575		       10		      .byte.b	16
    379  f576		       10		      .byte.b	16
    380  f577		       10		      .byte.b	16
    381  f578		       10		      .byte.b	16
    382  f579		       10		      .byte.b	16
    383  f57a		       ff		      .byte.b	255
    384  f57b		       ff		      .byte.b	255
    385  f57c		       ff		      .byte.b	255
    386  f57d		       ff		      .byte.b	255
    387  f57e		       00		      .byte.b	0
    388  f57f		       00		      .byte.b	0
    389  f580				   MainBoard_STRIP_2
    390  f580		       00		      .byte.b	0
    391  f581		       00		      .byte.b	0
    392  f582		       ff		      .byte.b	255
    393  f583		       ff		      .byte.b	255
    394  f584		       ff		      .byte.b	255
    395  f585		       ff		      .byte.b	255
    396  f586		       08		      .byte.b	8
    397  f587		       08		      .byte.b	8
    398  f588		       08		      .byte.b	8
    399  f589		       08		      .byte.b	8
    400  f58a		       08		      .byte.b	8
    401  f58b		       08		      .byte.b	8
    402  f58c		       08		      .byte.b	8
    403  f58d		       08		      .byte.b	8
    404  f58e		       08		      .byte.b	8
    405  f58f		       08		      .byte.b	8
    406  f590		       08		      .byte.b	8
    407  f591		       08		      .byte.b	8
    408  f592		       08		      .byte.b	8
    409  f593		       08		      .byte.b	8
    410  f594		       08		      .byte.b	8
    411  f595		       08		      .byte.b	8
    412  f596		       08		      .byte.b	8
    413  f597		       08		      .byte.b	8
    414  f598		       08		      .byte.b	8
    415  f599		       08		      .byte.b	8
    416  f59a		       08		      .byte.b	8
    417  f59b		       08		      .byte.b	8
    418  f59c		       08		      .byte.b	8
    419  f59d		       08		      .byte.b	8
    420  f59e		       08		      .byte.b	8
    421  f59f		       08		      .byte.b	8
    422  f5a0		       08		      .byte.b	8
    423  f5a1		       08		      .byte.b	8
    424  f5a2		       08		      .byte.b	8
    425  f5a3		       08		      .byte.b	8
    426  f5a4		       08		      .byte.b	8
    427  f5a5		       08		      .byte.b	8
    428  f5a6		       08		      .byte.b	8
    429  f5a7		       08		      .byte.b	8
    430  f5a8		       08		      .byte.b	8
    431  f5a9		       08		      .byte.b	8
    432  f5aa		       08		      .byte.b	8
    433  f5ab		       08		      .byte.b	8
    434  f5ac		       08		      .byte.b	8
    435  f5ad		       08		      .byte.b	8
    436  f5ae		       08		      .byte.b	8
    437  f5af		       08		      .byte.b	8
    438  f5b0		       08		      .byte.b	8
    439  f5b1		       08		      .byte.b	8
    440  f5b2		       08		      .byte.b	8
    441  f5b3		       08		      .byte.b	8
    442  f5b4		       08		      .byte.b	8
    443  f5b5		       08		      .byte.b	8
    444  f5b6		       08		      .byte.b	8
    445  f5b7		       08		      .byte.b	8
    446  f5b8		       08		      .byte.b	8
    447  f5b9		       08		      .byte.b	8
    448  f5ba		       08		      .byte.b	8
    449  f5bb		       08		      .byte.b	8
    450  f5bc		       08		      .byte.b	8
    451  f5bd		       08		      .byte.b	8
    452  f5be		       08		      .byte.b	8
    453  f5bf		       08		      .byte.b	8
    454  f5c0		       08		      .byte.b	8
    455  f5c1		       08		      .byte.b	8
    456  f5c2		       08		      .byte.b	8
    457  f5c3		       08		      .byte.b	8
    458  f5c4		       08		      .byte.b	8
    459  f5c5		       08		      .byte.b	8
    460  f5c6		       08		      .byte.b	8
    461  f5c7		       08		      .byte.b	8
    462  f5c8		       08		      .byte.b	8
    463  f5c9		       08		      .byte.b	8
    464  f5ca		       08		      .byte.b	8
    465  f5cb		       08		      .byte.b	8
    466  f5cc		       08		      .byte.b	8
    467  f5cd		       08		      .byte.b	8
    468  f5ce		       08		      .byte.b	8
    469  f5cf		       08		      .byte.b	8
    470  f5d0		       08		      .byte.b	8
    471  f5d1		       08		      .byte.b	8
    472  f5d2		       08		      .byte.b	8
    473  f5d3		       08		      .byte.b	8
    474  f5d4		       08		      .byte.b	8
    475  f5d5		       08		      .byte.b	8
    476  f5d6		       08		      .byte.b	8
    477  f5d7		       08		      .byte.b	8
    478  f5d8		       08		      .byte.b	8
    479  f5d9		       08		      .byte.b	8
    480  f5da		       08		      .byte.b	8
    481  f5db		       08		      .byte.b	8
    482  f5dc		       08		      .byte.b	8
    483  f5dd		       08		      .byte.b	8
    484  f5de		       08		      .byte.b	8
    485  f5df		       08		      .byte.b	8
    486  f5e0		       ff		      .byte.b	255
    487  f5e1		       08		      .byte.b	8
    488  f5e2		       08		      .byte.b	8
    489  f5e3		       08		      .byte.b	8
    490  f5e4		       08		      .byte.b	8
    491  f5e5		       08		      .byte.b	8
    492  f5e6		       08		      .byte.b	8
    493  f5e7		       08		      .byte.b	8
    494  f5e8		       08		      .byte.b	8
    495  f5e9		       08		      .byte.b	8
    496  f5ea		       08		      .byte.b	8
    497  f5eb		       08		      .byte.b	8
    498  f5ec		       08		      .byte.b	8
    499  f5ed		       08		      .byte.b	8
    500  f5ee		       08		      .byte.b	8
    501  f5ef		       08		      .byte.b	8
    502  f5f0		       08		      .byte.b	8
    503  f5f1		       08		      .byte.b	8
    504  f5f2		       08		      .byte.b	8
    505  f5f3		       08		      .byte.b	8
    506  f5f4		       08		      .byte.b	8
    507  f5f5		       08		      .byte.b	8
    508  f5f6		       08		      .byte.b	8
    509  f5f7		       08		      .byte.b	8
    510  f5f8		       08		      .byte.b	8
    511  f5f9		       08		      .byte.b	8
    512  f5fa		       08		      .byte.b	8
    513  f5fb		       08		      .byte.b	8
    514  f5fc		       08		      .byte.b	8
    515  f5fd		       08		      .byte.b	8
    516  f5fe		       08		      .byte.b	8
    517  f5ff		       08		      .byte.b	8
    518  f600		       08		      .byte.b	8
    519  f601		       08		      .byte.b	8
    520  f602		       08		      .byte.b	8
    521  f603		       08		      .byte.b	8
    522  f604		       08		      .byte.b	8
    523  f605		       08		      .byte.b	8
    524  f606		       08		      .byte.b	8
    525  f607		       08		      .byte.b	8
    526  f608		       08		      .byte.b	8
    527  f609		       08		      .byte.b	8
    528  f60a		       08		      .byte.b	8
    529  f60b		       08		      .byte.b	8
    530  f60c		       08		      .byte.b	8
    531  f60d		       08		      .byte.b	8
    532  f60e		       08		      .byte.b	8
    533  f60f		       08		      .byte.b	8
    534  f610		       08		      .byte.b	8
    535  f611		       08		      .byte.b	8
    536  f612		       08		      .byte.b	8
    537  f613		       08		      .byte.b	8
    538  f614		       08		      .byte.b	8
    539  f615		       08		      .byte.b	8
    540  f616		       08		      .byte.b	8
    541  f617		       08		      .byte.b	8
    542  f618		       08		      .byte.b	8
    543  f619		       08		      .byte.b	8
    544  f61a		       08		      .byte.b	8
    545  f61b		       08		      .byte.b	8
    546  f61c		       08		      .byte.b	8
    547  f61d		       08		      .byte.b	8
    548  f61e		       08		      .byte.b	8
    549  f61f		       08		      .byte.b	8
    550  f620		       08		      .byte.b	8
    551  f621		       08		      .byte.b	8
    552  f622		       08		      .byte.b	8
    553  f623		       08		      .byte.b	8
    554  f624		       08		      .byte.b	8
    555  f625		       08		      .byte.b	8
    556  f626		       08		      .byte.b	8
    557  f627		       08		      .byte.b	8
    558  f628		       08		      .byte.b	8
    559  f629		       08		      .byte.b	8
    560  f62a		       08		      .byte.b	8
    561  f62b		       08		      .byte.b	8
    562  f62c		       08		      .byte.b	8
    563  f62d		       08		      .byte.b	8
    564  f62e		       08		      .byte.b	8
    565  f62f		       08		      .byte.b	8
    566  f630		       08		      .byte.b	8
    567  f631		       08		      .byte.b	8
    568  f632		       08		      .byte.b	8
    569  f633		       08		      .byte.b	8
    570  f634		       08		      .byte.b	8
    571  f635		       08		      .byte.b	8
    572  f636		       08		      .byte.b	8
    573  f637		       08		      .byte.b	8
    574  f638		       08		      .byte.b	8
    575  f639		       08		      .byte.b	8
    576  f63a		       ff		      .byte.b	255
    577  f63b		       ff		      .byte.b	255
    578  f63c		       ff		      .byte.b	255
    579  f63d		       ff		      .byte.b	255
    580  f63e		       00		      .byte.b	0
    581  f63f		       00		      .byte.b	0
    582  f640				   MainBoard_STRIP_3
    583  f640		       00		      .byte.b	0
    584  f641		       00		      .byte.b	0
    585  f642		       f0		      .byte.b	240
    586  f643		       f0		      .byte.b	240
    587  f644		       f0		      .byte.b	240
    588  f645		       f0		      .byte.b	240
    589  f646		       80		      .byte.b	128
    590  f647		       80		      .byte.b	128
    591  f648		       80		      .byte.b	128
    592  f649		       80		      .byte.b	128
    593  f64a		       80		      .byte.b	128
    594  f64b		       80		      .byte.b	128
    595  f64c		       80		      .byte.b	128
    596  f64d		       80		      .byte.b	128
    597  f64e		       80		      .byte.b	128
    598  f64f		       80		      .byte.b	128
    599  f650		       80		      .byte.b	128
    600  f651		       80		      .byte.b	128
    601  f652		       80		      .byte.b	128
    602  f653		       80		      .byte.b	128
    603  f654		       80		      .byte.b	128
    604  f655		       80		      .byte.b	128
    605  f656		       80		      .byte.b	128
    606  f657		       80		      .byte.b	128
    607  f658		       80		      .byte.b	128
    608  f659		       80		      .byte.b	128
    609  f65a		       80		      .byte.b	128
    610  f65b		       80		      .byte.b	128
    611  f65c		       80		      .byte.b	128
    612  f65d		       80		      .byte.b	128
    613  f65e		       80		      .byte.b	128
    614  f65f		       80		      .byte.b	128
    615  f660		       80		      .byte.b	128
    616  f661		       80		      .byte.b	128
    617  f662		       80		      .byte.b	128
    618  f663		       80		      .byte.b	128
    619  f664		       80		      .byte.b	128
    620  f665		       80		      .byte.b	128
    621  f666		       80		      .byte.b	128
    622  f667		       80		      .byte.b	128
    623  f668		       80		      .byte.b	128
    624  f669		       80		      .byte.b	128
    625  f66a		       80		      .byte.b	128
    626  f66b		       80		      .byte.b	128
    627  f66c		       80		      .byte.b	128
    628  f66d		       80		      .byte.b	128
    629  f66e		       80		      .byte.b	128
    630  f66f		       80		      .byte.b	128
    631  f670		       80		      .byte.b	128
    632  f671		       80		      .byte.b	128
    633  f672		       80		      .byte.b	128
    634  f673		       80		      .byte.b	128
    635  f674		       80		      .byte.b	128
    636  f675		       80		      .byte.b	128
    637  f676		       80		      .byte.b	128
    638  f677		       80		      .byte.b	128
    639  f678		       80		      .byte.b	128
    640  f679		       80		      .byte.b	128
    641  f67a		       80		      .byte.b	128
    642  f67b		       80		      .byte.b	128
    643  f67c		       80		      .byte.b	128
    644  f67d		       80		      .byte.b	128
    645  f67e		       80		      .byte.b	128
    646  f67f		       80		      .byte.b	128
    647  f680		       80		      .byte.b	128
    648  f681		       80		      .byte.b	128
    649  f682		       80		      .byte.b	128
    650  f683		       80		      .byte.b	128
    651  f684		       80		      .byte.b	128
    652  f685		       80		      .byte.b	128
    653  f686		       80		      .byte.b	128
    654  f687		       80		      .byte.b	128
    655  f688		       80		      .byte.b	128
    656  f689		       80		      .byte.b	128
    657  f68a		       80		      .byte.b	128
    658  f68b		       80		      .byte.b	128
    659  f68c		       80		      .byte.b	128
    660  f68d		       80		      .byte.b	128
    661  f68e		       80		      .byte.b	128
    662  f68f		       80		      .byte.b	128
    663  f690		       80		      .byte.b	128
    664  f691		       80		      .byte.b	128
    665  f692		       80		      .byte.b	128
    666  f693		       80		      .byte.b	128
    667  f694		       80		      .byte.b	128
    668  f695		       80		      .byte.b	128
    669  f696		       80		      .byte.b	128
    670  f697		       80		      .byte.b	128
    671  f698		       80		      .byte.b	128
    672  f699		       80		      .byte.b	128
    673  f69a		       80		      .byte.b	128
    674  f69b		       80		      .byte.b	128
    675  f69c		       80		      .byte.b	128
    676  f69d		       80		      .byte.b	128
    677  f69e		       80		      .byte.b	128
    678  f69f		       80		      .byte.b	128
    679  f6a0		       f0		      .byte.b	240
    680  f6a1		       80		      .byte.b	128
    681  f6a2		       80		      .byte.b	128
    682  f6a3		       80		      .byte.b	128
    683  f6a4		       80		      .byte.b	128
    684  f6a5		       80		      .byte.b	128
    685  f6a6		       80		      .byte.b	128
    686  f6a7		       80		      .byte.b	128
    687  f6a8		       80		      .byte.b	128
    688  f6a9		       80		      .byte.b	128
    689  f6aa		       80		      .byte.b	128
    690  f6ab		       80		      .byte.b	128
    691  f6ac		       80		      .byte.b	128
    692  f6ad		       80		      .byte.b	128
    693  f6ae		       80		      .byte.b	128
    694  f6af		       80		      .byte.b	128
    695  f6b0		       80		      .byte.b	128
    696  f6b1		       80		      .byte.b	128
    697  f6b2		       80		      .byte.b	128
    698  f6b3		       80		      .byte.b	128
    699  f6b4		       80		      .byte.b	128
    700  f6b5		       80		      .byte.b	128
    701  f6b6		       80		      .byte.b	128
    702  f6b7		       80		      .byte.b	128
    703  f6b8		       80		      .byte.b	128
    704  f6b9		       80		      .byte.b	128
    705  f6ba		       80		      .byte.b	128
    706  f6bb		       80		      .byte.b	128
    707  f6bc		       80		      .byte.b	128
    708  f6bd		       80		      .byte.b	128
    709  f6be		       80		      .byte.b	128
    710  f6bf		       80		      .byte.b	128
    711  f6c0		       80		      .byte.b	128
    712  f6c1		       80		      .byte.b	128
    713  f6c2		       80		      .byte.b	128
    714  f6c3		       80		      .byte.b	128
    715  f6c4		       80		      .byte.b	128
    716  f6c5		       80		      .byte.b	128
    717  f6c6		       80		      .byte.b	128
    718  f6c7		       80		      .byte.b	128
    719  f6c8		       80		      .byte.b	128
    720  f6c9		       80		      .byte.b	128
    721  f6ca		       80		      .byte.b	128
    722  f6cb		       80		      .byte.b	128
    723  f6cc		       80		      .byte.b	128
    724  f6cd		       80		      .byte.b	128
    725  f6ce		       80		      .byte.b	128
    726  f6cf		       80		      .byte.b	128
    727  f6d0		       80		      .byte.b	128
    728  f6d1		       80		      .byte.b	128
    729  f6d2		       80		      .byte.b	128
    730  f6d3		       80		      .byte.b	128
    731  f6d4		       80		      .byte.b	128
    732  f6d5		       80		      .byte.b	128
    733  f6d6		       80		      .byte.b	128
    734  f6d7		       80		      .byte.b	128
    735  f6d8		       80		      .byte.b	128
    736  f6d9		       80		      .byte.b	128
    737  f6da		       80		      .byte.b	128
    738  f6db		       80		      .byte.b	128
    739  f6dc		       80		      .byte.b	128
    740  f6dd		       80		      .byte.b	128
    741  f6de		       80		      .byte.b	128
    742  f6df		       80		      .byte.b	128
    743  f6e0		       80		      .byte.b	128
    744  f6e1		       80		      .byte.b	128
    745  f6e2		       80		      .byte.b	128
    746  f6e3		       80		      .byte.b	128
    747  f6e4		       80		      .byte.b	128
    748  f6e5		       80		      .byte.b	128
    749  f6e6		       80		      .byte.b	128
    750  f6e7		       80		      .byte.b	128
    751  f6e8		       80		      .byte.b	128
    752  f6e9		       80		      .byte.b	128
    753  f6ea		       80		      .byte.b	128
    754  f6eb		       80		      .byte.b	128
    755  f6ec		       80		      .byte.b	128
    756  f6ed		       80		      .byte.b	128
    757  f6ee		       80		      .byte.b	128
    758  f6ef		       80		      .byte.b	128
    759  f6f0		       80		      .byte.b	128
    760  f6f1		       80		      .byte.b	128
    761  f6f2		       80		      .byte.b	128
    762  f6f3		       80		      .byte.b	128
    763  f6f4		       80		      .byte.b	128
    764  f6f5		       80		      .byte.b	128
    765  f6f6		       80		      .byte.b	128
    766  f6f7		       80		      .byte.b	128
    767  f6f8		       80		      .byte.b	128
    768  f6f9		       80		      .byte.b	128
    769  f6fa		       f0		      .byte.b	240
    770  f6fb		       f0		      .byte.b	240
    771  f6fc		       f0		      .byte.b	240
    772  f6fd		       f0		      .byte.b	240
    773  f6fe		       00		      .byte.b	0
    774  f6ff		       00		      .byte.b	0
    775  f700				   MainBoard_STRIP_4
    776  f700		       00		      .byte.b	0
    777  f701		       00		      .byte.b	0
    778  f702		       ff		      .byte.b	255
    779  f703		       ff		      .byte.b	255
    780  f704		       ff		      .byte.b	255
    781  f705		       ff		      .byte.b	255
    782  f706		       00		      .byte.b	0
    783  f707		       00		      .byte.b	0
    784  f708		       00		      .byte.b	0
    785  f709		       00		      .byte.b	0
    786  f70a		       00		      .byte.b	0
    787  f70b		       00		      .byte.b	0
    788  f70c		       00		      .byte.b	0
    789  f70d		       00		      .byte.b	0
    790  f70e		       00		      .byte.b	0
    791  f70f		       00		      .byte.b	0
    792  f710		       00		      .byte.b	0
    793  f711		       00		      .byte.b	0
    794  f712		       00		      .byte.b	0
    795  f713		       00		      .byte.b	0
    796  f714		       00		      .byte.b	0
    797  f715		       00		      .byte.b	0
    798  f716		       00		      .byte.b	0
    799  f717		       00		      .byte.b	0
    800  f718		       00		      .byte.b	0
    801  f719		       00		      .byte.b	0
    802  f71a		       00		      .byte.b	0
    803  f71b		       00		      .byte.b	0
    804  f71c		       00		      .byte.b	0
    805  f71d		       00		      .byte.b	0
    806  f71e		       00		      .byte.b	0
    807  f71f		       00		      .byte.b	0
    808  f720		       00		      .byte.b	0
    809  f721		       00		      .byte.b	0
    810  f722		       00		      .byte.b	0
    811  f723		       00		      .byte.b	0
    812  f724		       00		      .byte.b	0
    813  f725		       00		      .byte.b	0
    814  f726		       00		      .byte.b	0
    815  f727		       00		      .byte.b	0
    816  f728		       00		      .byte.b	0
    817  f729		       00		      .byte.b	0
    818  f72a		       00		      .byte.b	0
    819  f72b		       00		      .byte.b	0
    820  f72c		       00		      .byte.b	0
    821  f72d		       00		      .byte.b	0
    822  f72e		       00		      .byte.b	0
    823  f72f		       00		      .byte.b	0
    824  f730		       00		      .byte.b	0
    825  f731		       00		      .byte.b	0
    826  f732		       00		      .byte.b	0
    827  f733		       00		      .byte.b	0
    828  f734		       00		      .byte.b	0
    829  f735		       00		      .byte.b	0
    830  f736		       00		      .byte.b	0
    831  f737		       00		      .byte.b	0
    832  f738		       00		      .byte.b	0
    833  f739		       00		      .byte.b	0
    834  f73a		       00		      .byte.b	0
    835  f73b		       00		      .byte.b	0
    836  f73c		       00		      .byte.b	0
    837  f73d		       00		      .byte.b	0
    838  f73e		       00		      .byte.b	0
    839  f73f		       00		      .byte.b	0
    840  f740		       00		      .byte.b	0
    841  f741		       00		      .byte.b	0
    842  f742		       00		      .byte.b	0
    843  f743		       00		      .byte.b	0
    844  f744		       00		      .byte.b	0
    845  f745		       00		      .byte.b	0
    846  f746		       00		      .byte.b	0
    847  f747		       00		      .byte.b	0
    848  f748		       00		      .byte.b	0
    849  f749		       00		      .byte.b	0
    850  f74a		       00		      .byte.b	0
    851  f74b		       00		      .byte.b	0
    852  f74c		       00		      .byte.b	0
    853  f74d		       00		      .byte.b	0
    854  f74e		       00		      .byte.b	0
    855  f74f		       00		      .byte.b	0
    856  f750		       00		      .byte.b	0
    857  f751		       00		      .byte.b	0
    858  f752		       00		      .byte.b	0
    859  f753		       00		      .byte.b	0
    860  f754		       00		      .byte.b	0
    861  f755		       00		      .byte.b	0
    862  f756		       00		      .byte.b	0
    863  f757		       00		      .byte.b	0
    864  f758		       00		      .byte.b	0
    865  f759		       00		      .byte.b	0
    866  f75a		       00		      .byte.b	0
    867  f75b		       00		      .byte.b	0
    868  f75c		       00		      .byte.b	0
    869  f75d		       00		      .byte.b	0
    870  f75e		       00		      .byte.b	0
    871  f75f		       00		      .byte.b	0
    872  f760		       00		      .byte.b	0
    873  f761		       00		      .byte.b	0
    874  f762		       00		      .byte.b	0
    875  f763		       00		      .byte.b	0
    876  f764		       00		      .byte.b	0
    877  f765		       00		      .byte.b	0
    878  f766		       00		      .byte.b	0
    879  f767		       00		      .byte.b	0
    880  f768		       00		      .byte.b	0
    881  f769		       00		      .byte.b	0
    882  f76a		       00		      .byte.b	0
    883  f76b		       00		      .byte.b	0
    884  f76c		       00		      .byte.b	0
    885  f76d		       00		      .byte.b	0
    886  f76e		       00		      .byte.b	0
    887  f76f		       00		      .byte.b	0
    888  f770		       00		      .byte.b	0
    889  f771		       00		      .byte.b	0
    890  f772		       00		      .byte.b	0
    891  f773		       00		      .byte.b	0
    892  f774		       00		      .byte.b	0
    893  f775		       00		      .byte.b	0
    894  f776		       00		      .byte.b	0
    895  f777		       00		      .byte.b	0
    896  f778		       00		      .byte.b	0
    897  f779		       00		      .byte.b	0
    898  f77a		       00		      .byte.b	0
    899  f77b		       00		      .byte.b	0
    900  f77c		       00		      .byte.b	0
    901  f77d		       00		      .byte.b	0
    902  f77e		       00		      .byte.b	0
    903  f77f		       00		      .byte.b	0
    904  f780		       00		      .byte.b	0
    905  f781		       00		      .byte.b	0
    906  f782		       00		      .byte.b	0
    907  f783		       00		      .byte.b	0
    908  f784		       00		      .byte.b	0
    909  f785		       00		      .byte.b	0
    910  f786		       00		      .byte.b	0
    911  f787		       00		      .byte.b	0
    912  f788		       00		      .byte.b	0
    913  f789		       00		      .byte.b	0
    914  f78a		       00		      .byte.b	0
    915  f78b		       00		      .byte.b	0
    916  f78c		       00		      .byte.b	0
    917  f78d		       00		      .byte.b	0
    918  f78e		       00		      .byte.b	0
    919  f78f		       00		      .byte.b	0
    920  f790		       00		      .byte.b	0
    921  f791		       00		      .byte.b	0
    922  f792		       00		      .byte.b	0
    923  f793		       00		      .byte.b	0
    924  f794		       00		      .byte.b	0
    925  f795		       00		      .byte.b	0
    926  f796		       00		      .byte.b	0
    927  f797		       00		      .byte.b	0
    928  f798		       00		      .byte.b	0
    929  f799		       00		      .byte.b	0
    930  f79a		       00		      .byte.b	0
    931  f79b		       00		      .byte.b	0
    932  f79c		       00		      .byte.b	0
    933  f79d		       00		      .byte.b	0
    934  f79e		       00		      .byte.b	0
    935  f79f		       00		      .byte.b	0
    936  f7a0		       00		      .byte.b	0
    937  f7a1		       00		      .byte.b	0
    938  f7a2		       00		      .byte.b	0
    939  f7a3		       00		      .byte.b	0
    940  f7a4		       00		      .byte.b	0
    941  f7a5		       00		      .byte.b	0
    942  f7a6		       00		      .byte.b	0
    943  f7a7		       00		      .byte.b	0
    944  f7a8		       00		      .byte.b	0
    945  f7a9		       00		      .byte.b	0
    946  f7aa		       00		      .byte.b	0
    947  f7ab		       00		      .byte.b	0
    948  f7ac		       00		      .byte.b	0
    949  f7ad		       00		      .byte.b	0
    950  f7ae		       00		      .byte.b	0
    951  f7af		       00		      .byte.b	0
    952  f7b0		       00		      .byte.b	0
    953  f7b1		       00		      .byte.b	0
    954  f7b2		       00		      .byte.b	0
    955  f7b3		       00		      .byte.b	0
    956  f7b4		       00		      .byte.b	0
    957  f7b5		       00		      .byte.b	0
    958  f7b6		       00		      .byte.b	0
    959  f7b7		       00		      .byte.b	0
    960  f7b8		       00		      .byte.b	0
    961  f7b9		       00		      .byte.b	0
    962  f7ba		       ff		      .byte.b	255
    963  f7bb		       ff		      .byte.b	255
    964  f7bc		       ff		      .byte.b	255
    965  f7bd		       ff		      .byte.b	255
    966  f7be		       00		      .byte.b	0
    967  f7bf		       00		      .byte.b	0
    968  f7c0				   MainBoard_STRIP_5
    969  f7c0		       00		      .byte.b	0
    970  f7c1		       00		      .byte.b	0
    971  f7c2		       ff		      .byte.b	255
    972  f7c3		       ff		      .byte.b	255
    973  f7c4		       ff		      .byte.b	255
    974  f7c5		       ff		      .byte.b	255
    975  f7c6		       80		      .byte.b	128
    976  f7c7		       80		      .byte.b	128
    977  f7c8		       80		      .byte.b	128
    978  f7c9		       80		      .byte.b	128
    979  f7ca		       80		      .byte.b	128
    980  f7cb		       80		      .byte.b	128
    981  f7cc		       80		      .byte.b	128
    982  f7cd		       80		      .byte.b	128
    983  f7ce		       80		      .byte.b	128
    984  f7cf		       80		      .byte.b	128
    985  f7d0		       c0		      .byte.b	192
    986  f7d1		       80		      .byte.b	128
    987  f7d2		       80		      .byte.b	128
    988  f7d3		       80		      .byte.b	128
    989  f7d4		       80		      .byte.b	128
    990  f7d5		       80		      .byte.b	128
    991  f7d6		       80		      .byte.b	128
    992  f7d7		       80		      .byte.b	128
    993  f7d8		       80		      .byte.b	128
    994  f7d9		       80		      .byte.b	128
    995  f7da		       c0		      .byte.b	192
    996  f7db		       80		      .byte.b	128
    997  f7dc		       80		      .byte.b	128
    998  f7dd		       80		      .byte.b	128
    999  f7de		       80		      .byte.b	128
   1000  f7df		       80		      .byte.b	128
   1001  f7e0		       80		      .byte.b	128
   1002  f7e1		       80		      .byte.b	128
   1003  f7e2		       80		      .byte.b	128
   1004  f7e3		       80		      .byte.b	128
   1005  f7e4		       c0		      .byte.b	192
   1006  f7e5		       80		      .byte.b	128
   1007  f7e6		       80		      .byte.b	128
   1008  f7e7		       80		      .byte.b	128
   1009  f7e8		       80		      .byte.b	128
   1010  f7e9		       80		      .byte.b	128
   1011  f7ea		       80		      .byte.b	128
   1012  f7eb		       80		      .byte.b	128
   1013  f7ec		       80		      .byte.b	128
   1014  f7ed		       80		      .byte.b	128
   1015  f7ee		       80		      .byte.b	128
   1016  f7ef		       80		      .byte.b	128
   1017  f7f0		       80		      .byte.b	128
   1018  f7f1		       80		      .byte.b	128
   1019  f7f2		       80		      .byte.b	128
   1020  f7f3		       ff		      .byte.b	255
   1021  f7f4		       ff		      .byte.b	255
   1022  f7f5		       ff		      .byte.b	255
   1023  f7f6		       ff		      .byte.b	255
   1024  f7f7		       01		      .byte.b	1
   1025  f7f8		       01		      .byte.b	1
   1026  f7f9		       01		      .byte.b	1
   1027  f7fa		       55		      .byte.b	85
   1028  f7fb		       55		      .byte.b	85
   1029  f7fc		       55		      .byte.b	85
   1030  f7fd		       01		      .byte.b	1
   1031  f7fe		       01		      .byte.b	1
   1032  f7ff		       01		      .byte.b	1
   1033  f800		       55		      .byte.b	85
   1034  f801		       55		      .byte.b	85
   1035  f802		       55		      .byte.b	85
   1036  f803		       01		      .byte.b	1
   1037  f804		       01		      .byte.b	1
   1038  f805		       01		      .byte.b	1
   1039  f806		       55		      .byte.b	85
   1040  f807		       55		      .byte.b	85
   1041  f808		       55		      .byte.b	85
   1042  f809		       01		      .byte.b	1
   1043  f80a		       01		      .byte.b	1
   1044  f80b		       01		      .byte.b	1
   1045  f80c		       55		      .byte.b	85
   1046  f80d		       55		      .byte.b	85
   1047  f80e		       55		      .byte.b	85
   1048  f80f		       01		      .byte.b	1
   1049  f810		       01		      .byte.b	1
   1050  f811		       01		      .byte.b	1
   1051  f812		       ff		      .byte.b	255
   1052  f813		       ff		      .byte.b	255
   1053  f814		       ff		      .byte.b	255
   1054  f815		       ff		      .byte.b	255
   1055  f816		       00		      .byte.b	0
   1056  f817		       00		      .byte.b	0
   1057  f818		       00		      .byte.b	0
   1058  f819		       00		      .byte.b	0
   1059  f81a		       00		      .byte.b	0
   1060  f81b		       1c		      .byte.b	28
   1061  f81c		       00		      .byte.b	0
   1062  f81d		       00		      .byte.b	0
   1063  f81e		       00		      .byte.b	0
   1064  f81f		       00		      .byte.b	0
   1065  f820		       08		      .byte.b	8
   1066  f821		       1c		      .byte.b	28
   1067  f822		       1c		      .byte.b	28
   1068  f823		       1c		      .byte.b	28
   1069  f824		       1c		      .byte.b	28
   1070  f825		       1c		      .byte.b	28
   1071  f826		       08		      .byte.b	8
   1072  f827		       00		      .byte.b	0
   1073  f828		       00		      .byte.b	0
   1074  f829		       00		      .byte.b	0
   1075  f82a		       00		      .byte.b	0
   1076  f82b		       1c		      .byte.b	28
   1077  f82c		       00		      .byte.b	0
   1078  f82d		       00		      .byte.b	0
   1079  f82e		       00		      .byte.b	0
   1080  f82f		       00		      .byte.b	0
   1081  f830		       ff		      .byte.b	255
   1082  f831		       ff		      .byte.b	255
   1083  f832		       ff		      .byte.b	255
   1084  f833		       ff		      .byte.b	255
   1085  f834		       01		      .byte.b	1
   1086  f835		       01		      .byte.b	1
   1087  f836		       01		      .byte.b	1
   1088  f837		       01		      .byte.b	1
   1089  f838		       55		      .byte.b	85
   1090  f839		       01		      .byte.b	1
   1091  f83a		       01		      .byte.b	1
   1092  f83b		       01		      .byte.b	1
   1093  f83c		       01		      .byte.b	1
   1094  f83d		       01		      .byte.b	1
   1095  f83e		       55		      .byte.b	85
   1096  f83f		       01		      .byte.b	1
   1097  f840		       01		      .byte.b	1
   1098  f841		       01		      .byte.b	1
   1099  f842		       01		      .byte.b	1
   1100  f843		       01		      .byte.b	1
   1101  f844		       55		      .byte.b	85
   1102  f845		       01		      .byte.b	1
   1103  f846		       01		      .byte.b	1
   1104  f847		       01		      .byte.b	1
   1105  f848		       01		      .byte.b	1
   1106  f849		       01		      .byte.b	1
   1107  f84a		       55		      .byte.b	85
   1108  f84b		       01		      .byte.b	1
   1109  f84c		       01		      .byte.b	1
   1110  f84d		       01		      .byte.b	1
   1111  f84e		       01		      .byte.b	1
   1112  f84f		       ff		      .byte.b	255
   1113  f850		       ff		      .byte.b	255
   1114  f851		       ff		      .byte.b	255
   1115  f852		       ff		      .byte.b	255
   1116  f853		       80		      .byte.b	128
   1117  f854		       80		      .byte.b	128
   1118  f855		       80		      .byte.b	128
   1119  f856		       80		      .byte.b	128
   1120  f857		       80		      .byte.b	128
   1121  f858		       80		      .byte.b	128
   1122  f859		       80		      .byte.b	128
   1123  f85a		       80		      .byte.b	128
   1124  f85b		       80		      .byte.b	128
   1125  f85c		       c0		      .byte.b	192
   1126  f85d		       80		      .byte.b	128
   1127  f85e		       80		      .byte.b	128
   1128  f85f		       80		      .byte.b	128
   1129  f860		       80		      .byte.b	128
   1130  f861		       80		      .byte.b	128
   1131  f862		       80		      .byte.b	128
   1132  f863		       80		      .byte.b	128
   1133  f864		       80		      .byte.b	128
   1134  f865		       80		      .byte.b	128
   1135  f866		       c0		      .byte.b	192
   1136  f867		       80		      .byte.b	128
   1137  f868		       80		      .byte.b	128
   1138  f869		       80		      .byte.b	128
   1139  f86a		       80		      .byte.b	128
   1140  f86b		       80		      .byte.b	128
   1141  f86c		       80		      .byte.b	128
   1142  f86d		       80		      .byte.b	128
   1143  f86e		       80		      .byte.b	128
   1144  f86f		       80		      .byte.b	128
   1145  f870		       c0		      .byte.b	192
   1146  f871		       80		      .byte.b	128
   1147  f872		       80		      .byte.b	128
   1148  f873		       80		      .byte.b	128
   1149  f874		       80		      .byte.b	128
   1150  f875		       80		      .byte.b	128
   1151  f876		       80		      .byte.b	128
   1152  f877		       80		      .byte.b	128
   1153  f878		       80		      .byte.b	128
   1154  f879		       80		      .byte.b	128
   1155  f87a		       ff		      .byte.b	255
   1156  f87b		       ff		      .byte.b	255
   1157  f87c		       ff		      .byte.b	255
   1158  f87d		       ff		      .byte.b	255
   1159  f87e		       00		      .byte.b	0
   1160  f87f		       00		      .byte.b	0
   1161  f880							;end
   1162  f880
------- FILE PacMan.asm
    619  f880
    620  f880							;===============================================================================
    621  f880							; free space check before page boundry
    622  f880							;===============================================================================
    623  f880
 End of MainBoard.asm is:  $f880
    624  f880					      echo	"End of MainBoard.asm is: ", *
    625  f900		       00 00 00 00*	      align	256
    626  f900
    627  f900							;==================================================================================
    628  f900							; Bottom Data
    629  f900							;==================================================================================
    630  f900
    631  f900				   BottomData
    632  f900
    633  f900							; 0
    634  f900		       00		      .byte.b	%00000000
    635  f901		       00		      .byte.b	%00000000
    636  f902		       00		      .byte.b	%00000000
    637  f903		       7e		      .byte.b	%01111110
    638  f904		       7e		      .byte.b	%01111110
    639  f905		       e7		      .byte.b	%11100111
    640  f906		       e7		      .byte.b	%11100111
    641  f907		       c3		      .byte.b	%11000011
    642  f908		       c3		      .byte.b	%11000011
    643  f909		       c3		      .byte.b	%11000011
    644  f90a		       c3		      .byte.b	%11000011
    645  f90b		       c3		      .byte.b	%11000011
    646  f90c		       c3		      .byte.b	%11000011
    647  f90d		       c3		      .byte.b	%11000011
    648  f90e		       c3		      .byte.b	%11000011
    649  f90f		       e7		      .byte.b	%11100111
    650  f910		       e7		      .byte.b	%11100111
    651  f911		       7e		      .byte.b	%01111110
    652  f912		       7e		      .byte.b	%01111110
    653  f913		       00		      .byte.b	%00000000
    654  f914
    655  f914							; 1
    656  f914		       00		      .byte.b	%00000000
    657  f915		       00		      .byte.b	%00000000
    658  f916		       00		      .byte.b	%00000000
    659  f917		       ff		      .byte.b	%11111111
    660  f918		       ff		      .byte.b	%11111111
    661  f919		       1c		      .byte.b	%00011100
    662  f91a		       1c		      .byte.b	%00011100
    663  f91b		       1c		      .byte.b	%00011100
    664  f91c		       1c		      .byte.b	%00011100
    665  f91d		       1c		      .byte.b	%00011100
    666  f91e		       1c		      .byte.b	%00011100
    667  f91f		       1c		      .byte.b	%00011100
    668  f920		       1c		      .byte.b	%00011100
    669  f921		       1c		      .byte.b	%00011100
    670  f922		       1c		      .byte.b	%00011100
    671  f923		       fc		      .byte.b	%11111100
    672  f924		       7c		      .byte.b	%01111100
    673  f925		       3c		      .byte.b	%00111100
    674  f926		       1c		      .byte.b	%00011100
    675  f927		       00		      .byte.b	%00000000
    676  f928
    677  f928							; 2
    678  f928		       00		      .byte.b	%00000000
    679  f929		       00		      .byte.b	%00000000
    680  f92a		       00		      .byte.b	%00000000
    681  f92b		       ff		      .byte.b	%11111111
    682  f92c		       ff		      .byte.b	%11111111
    683  f92d		       e0		      .byte.b	%11100000
    684  f92e		       e0		      .byte.b	%11100000
    685  f92f		       70		      .byte.b	%01110000
    686  f930		       38		      .byte.b	%00111000
    687  f931		       1c		      .byte.b	%00011100
    688  f932		       0e		      .byte.b	%00001110
    689  f933		       07		      .byte.b	%00000111
    690  f934		       03		      .byte.b	%00000011
    691  f935		       03		      .byte.b	%00000011
    692  f936		       c3		      .byte.b	%11000011
    693  f937		       c3		      .byte.b	%11000011
    694  f938		       e7		      .byte.b	%11100111
    695  f939		       7e		      .byte.b	%01111110
    696  f93a		       3c		      .byte.b	%00111100
    697  f93b		       00		      .byte.b	%00000000
    698  f93c
    699  f93c							; 3
    700  f93c		       00		      .byte.b	%00000000
    701  f93d		       00		      .byte.b	%00000000
    702  f93e		       00		      .byte.b	%00000000
    703  f93f		       3c		      .byte.b	%00111100
    704  f940		       7e		      .byte.b	%01111110
    705  f941		       ef		      .byte.b	%11101111
    706  f942		       c7		      .byte.b	%11000111
    707  f943		       07		      .byte.b	%00000111
    708  f944		       07		      .byte.b	%00000111
    709  f945		       0e		      .byte.b	%00001110
    710  f946		       1c		      .byte.b	%00011100
    711  f947		       1c		      .byte.b	%00011100
    712  f948		       0e		      .byte.b	%00001110
    713  f949		       07		      .byte.b	%00000111
    714  f94a		       07		      .byte.b	%00000111
    715  f94b		       c7		      .byte.b	%11000111
    716  f94c		       ef		      .byte.b	%11101111
    717  f94d		       7e		      .byte.b	%01111110
    718  f94e		       3c		      .byte.b	%00111100
    719  f94f		       00		      .byte.b	%00000000
    720  f950
    721  f950							; 4
    722  f950		       00		      .byte.b	%00000000
    723  f951		       00		      .byte.b	%00000000
    724  f952		       00		      .byte.b	%00000000
    725  f953		       06		      .byte.b	%00000110
    726  f954		       06		      .byte.b	%00000110
    727  f955		       06		      .byte.b	%00000110
    728  f956		       06		      .byte.b	%00000110
    729  f957		       ff		      .byte.b	%11111111
    730  f958		       ff		      .byte.b	%11111111
    731  f959		       c6		      .byte.b	%11000110
    732  f95a		       c6		      .byte.b	%11000110
    733  f95b		       66		      .byte.b	%01100110
    734  f95c		       66		      .byte.b	%01100110
    735  f95d		       36		      .byte.b	%00110110
    736  f95e		       36		      .byte.b	%00110110
    737  f95f		       1e		      .byte.b	%00011110
    738  f960		       1e		      .byte.b	%00011110
    739  f961		       0e		      .byte.b	%00001110
    740  f962		       0e		      .byte.b	%00001110
    741  f963		       00		      .byte.b	%00000000
    742  f964
    743  f964							; 5
    744  f964		       00		      .byte.b	%00000000
    745  f965		       00		      .byte.b	%00000000
    746  f966		       00		      .byte.b	%00000000
    747  f967		       f8		      .byte.b	%11111000
    748  f968		       fc		      .byte.b	%11111100
    749  f969		       fe		      .byte.b	%11111110
    750  f96a		       0f		      .byte.b	%00001111
    751  f96b		       07		      .byte.b	%00000111
    752  f96c		       07		      .byte.b	%00000111
    753  f96d		       07		      .byte.b	%00000111
    754  f96e		       0f		      .byte.b	%00001111
    755  f96f		       fe		      .byte.b	%11111110
    756  f970		       fc		      .byte.b	%11111100
    757  f971		       e0		      .byte.b	%11100000
    758  f972		       e0		      .byte.b	%11100000
    759  f973		       e0		      .byte.b	%11100000
    760  f974		       e0		      .byte.b	%11100000
    761  f975		       ff		      .byte.b	%11111111
    762  f976		       ff		      .byte.b	%11111111
    763  f977		       00		      .byte.b	%00000000
    764  f978
    765  f978							; 6
    766  f978		       00		      .byte.b	%00000000
    767  f979		       00		      .byte.b	%00000000
    768  f97a		       00		      .byte.b	%00000000
    769  f97b		       3c		      .byte.b	%00111100
    770  f97c		       7e		      .byte.b	%01111110
    771  f97d		       e7		      .byte.b	%11100111
    772  f97e		       c3		      .byte.b	%11000011
    773  f97f		       c3		      .byte.b	%11000011
    774  f980		       c3		      .byte.b	%11000011
    775  f981		       e7		      .byte.b	%11100111
    776  f982		       fe		      .byte.b	%11111110
    777  f983		       fc		      .byte.b	%11111100
    778  f984		       c0		      .byte.b	%11000000
    779  f985		       c0		      .byte.b	%11000000
    780  f986		       c0		      .byte.b	%11000000
    781  f987		       c3		      .byte.b	%11000011
    782  f988		       e7		      .byte.b	%11100111
    783  f989		       7f		      .byte.b	%01111111
    784  f98a		       3e		      .byte.b	%00111110
    785  f98b		       00		      .byte.b	%00000000
    786  f98c
    787  f98c							; 7
    788  f98c		       00		      .byte.b	%00000000
    789  f98d		       00		      .byte.b	%00000000
    790  f98e		       00		      .byte.b	%00000000
    791  f98f		       18		      .byte.b	%00011000
    792  f990		       18		      .byte.b	%00011000
    793  f991		       18		      .byte.b	%00011000
    794  f992		       18		      .byte.b	%00011000
    795  f993		       18		      .byte.b	%00011000
    796  f994		       18		      .byte.b	%00011000
    797  f995		       18		      .byte.b	%00011000
    798  f996		       18		      .byte.b	%00011000
    799  f997		       0c		      .byte.b	%00001100
    800  f998		       0c		      .byte.b	%00001100
    801  f999		       0c		      .byte.b	%00001100
    802  f99a		       c6		      .byte.b	%11000110
    803  f99b		       c7		      .byte.b	%11000111
    804  f99c		       ff		      .byte.b	%11111111
    805  f99d		       ff		      .byte.b	%11111111
    806  f99e		       ff		      .byte.b	%11111111
    807  f99f		       00		      .byte.b	%00000000
    808  f9a0
    809  f9a0							; 8
    810  f9a0		       00		      .byte.b	%00000000
    811  f9a1		       00		      .byte.b	%00000000
    812  f9a2		       00		      .byte.b	%00000000
    813  f9a3		       3c		      .byte.b	%00111100
    814  f9a4		       7e		      .byte.b	%01111110
    815  f9a5		       e7		      .byte.b	%11100111
    816  f9a6		       c3		      .byte.b	%11000011
    817  f9a7		       c3		      .byte.b	%11000011
    818  f9a8		       c3		      .byte.b	%11000011
    819  f9a9		       e7		      .byte.b	%11100111
    820  f9aa		       7e		      .byte.b	%01111110
    821  f9ab		       3c		      .byte.b	%00111100
    822  f9ac		       66		      .byte.b	%01100110
    823  f9ad		       c3		      .byte.b	%11000011
    824  f9ae		       c3		      .byte.b	%11000011
    825  f9af		       c3		      .byte.b	%11000011
    826  f9b0		       e7		      .byte.b	%11100111
    827  f9b1		       7e		      .byte.b	%01111110
    828  f9b2		       3c		      .byte.b	%00111100
    829  f9b3		       00		      .byte.b	%00000000
    830  f9b4
    831  f9b4							; 9
    832  f9b4		       00		      .byte.b	%00000000
    833  f9b5		       00		      .byte.b	%00000000
    834  f9b6		       00		      .byte.b	%00000000
    835  f9b7		       3c		      .byte.b	%00111100
    836  f9b8		       7e		      .byte.b	%01111110
    837  f9b9		       e7		      .byte.b	%11100111
    838  f9ba		       c3		      .byte.b	%11000011
    839  f9bb		       03		      .byte.b	%00000011
    840  f9bc		       03		      .byte.b	%00000011
    841  f9bd		       03		      .byte.b	%00000011
    842  f9be		       3f		      .byte.b	%00111111
    843  f9bf		       7f		      .byte.b	%01111111
    844  f9c0		       e7		      .byte.b	%11100111
    845  f9c1		       c3		      .byte.b	%11000011
    846  f9c2		       c3		      .byte.b	%11000011
    847  f9c3		       c3		      .byte.b	%11000011
    848  f9c4		       e7		      .byte.b	%11100111
    849  f9c5		       fe		      .byte.b	%11111110
    850  f9c6		       7c		      .byte.b	%01111100
    851  f9c7		       00		      .byte.b	%00000000
    852  f9c8		       00		      .byte.b	%00000000
    853  f9c9
    854  f9c9							;==================================================================================
    855  f9c9							; Interrupt Routines
    856  f9c9							;==================================================================================
    857  f9c9
    858  10000 ????				       SEG	Interrupt
    859  fffa					      ORG	$FFFA
    860  fffa
    861  fffa				   InterruptVectors
    862  fffa		       00 f0		      .word.w	Reset
    863  fffc		       00 f0		      .word.w	Reset
    864  fffe		       00 f0		      .word.w	Reset
    865  10000
    866  10000					       END
