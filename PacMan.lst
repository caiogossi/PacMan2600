------- FILE PacMan.asm LEVEL 1 PASS 2
      1  10000					       processor	6502
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       include	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.06, 06/SEP/2020
      3  10000 ????
      4  10000 ????		00 6a	    VERSION_VCS =	106
      5  10000 ????
      6  10000 ????						; THIS IS *THE* "STANDARD" VCS.H
      7  10000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  10000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  10000 ????						;
     10  10000 ????						; This file defines hardware registers and memory mapping for the
     11  10000 ????						; Atari 2600. It is distributed as a companion machine-specific support package
     12  10000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  10000 ????						; available at at https://dasm-assembler.github.io/
     14  10000 ????						;
     15  10000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     16  10000 ????						; contents, or would like ot add something, please report as an issue at...
     17  10000 ????						; https://github.com/dasm-assembler/dasm/issues
     18  10000 ????
     19  10000 ????						;
     20  10000 ????						; Latest Revisions...
     21  10000 ????						; 1.06  05/SEP/2020	 Modified header/license and links to new versions
     22  10000 ????						; 1.05  13/NOV/2003	  - Correction to 1.04 - now functions as requested by MR.
     23  10000 ????						;			  - Added VERSION_VCS equate (which will reflect 100x version #)
     24  10000 ????						;			    This will allow conditional code to verify VCS.H being
     25  10000 ????						;			    used for code assembly.
     26  10000 ????						; 1.04  12/NOV/2003	 Added TIA_BASE_WRITE_ADDRESS and TIA_BASE_READ_ADDRESS for
     27  10000 ????						;			 convenient disassembly/reassembly compatibility for hardware
     28  10000 ????						;			 mirrored reading/writing differences.	This is more a 
     29  10000 ????						;			 readability issue, and binary compatibility with disassembled
     30  10000 ????						;			 and reassembled sources.  Per Manuel Rotschkar's suggestion.
     31  10000 ????						; 1.03  12/MAY/2003	 Added SEG segment at end of file to fix old-code compatibility
     32  10000 ????						;			 which was broken by the use of segments in this file, as
     33  10000 ????						;			 reported by Manuel Polik on [stella] 11/MAY/2003
     34  10000 ????						; 1.02  22/MAR/2003	 Added TIMINT($285)
     35  10000 ????						; 1.01				Constant offset added to allow use for 3F-style bankswitching
     36  10000 ????						;						 - define TIA_BASE_ADDRESS as $40 for Tigervision carts, otherwise
     37  10000 ????						;						   it is safe to leave it undefined, and the base address will
     38  10000 ????						;						   be set to 0.  Thanks to Eckhard Stolberg for the suggestion.
     39  10000 ????						;			    Note, may use -DLABEL=EXPRESSION to define TIA_BASE_ADDRESS
     40  10000 ????						;			  - register definitions are now generated through assignment
     41  10000 ????						;			    in uninitialised segments.	This allows a changeable base
     42  10000 ????						;			    address architecture.
     43  10000 ????						; 1.0	22/MAR/2003		Initial release
     44  10000 ????
     45  10000 ????
     46  10000 ????						;-------------------------------------------------------------------------------
     47  10000 ????
     48  10000 ????						; TIA_BASE_ADDRESS
     49  10000 ????						; The TIA_BASE_ADDRESS defines the base address of access to TIA registers.
     50  10000 ????						; Normally 0, the base address should (externally, before including this file)
     51  10000 ????						; be set to $40 when creating 3F-bankswitched (and other?) cartridges.
     52  10000 ????						; The reason is that this bankswitching scheme treats any access to locations
     53  10000 ????						; < $40 as a bankswitch.
     54  10000 ????
     55  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
     56  10000 ????			   -TIA_BASE_ADDRESS =	0
     57  10000 ????				       ENDIF
     58  10000 ????
     59  10000 ????						; Note: The address may be defined on the command-line using the -D switch, eg:
     60  10000 ????						; dasm.exe code.asm -DTIA_BASE_ADDRESS=$40 -f3 -v5 -ocode.bin
     61  10000 ????						; *OR* by declaring the label before including this file, eg:
     62  10000 ????						; TIA_BASE_ADDRESS = $40
     63  10000 ????						;   include "vcs.h"
     64  10000 ????
     65  10000 ????						; Alternate read/write address capability - allows for some disassembly compatibility
     66  10000 ????						; usage ; to allow reassembly to binary perfect copies).  This is essentially catering
     67  10000 ????						; for the mirrored ROM hardware registers.
     68  10000 ????
     69  10000 ????						; Usage: As per above, define the TIA_BASE_READ_ADDRESS and/or TIA_BASE_WRITE_ADDRESS
     70  10000 ????						; using the -D command-line switch, as required.  If the addresses are not defined, 
     71  10000 ????						; they defaut to the TIA_BASE_ADDRESS.
     72  10000 ????
     73  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     74  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     75  10000 ????				       ENDIF
     76  10000 ????
     77  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     78  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     79  10000 ????				       ENDIF
     80  10000 ????
     81  10000 ????						;-------------------------------------------------------------------------------
     82  10000 ????
     83 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     84 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     85 U0000
     86 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     87 U0000
     88 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     89 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     90 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     91 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     92 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     93 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     94 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     95 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     96 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     97 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     98 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     99 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
    100 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
    101 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
    102 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
    103 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
    104 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
    105 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
    106 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
    107 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
    108 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
    109 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
    110 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
    111 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
    112 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
    113 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
    114 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
    115 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
    116 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
    117 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
    118 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
    119 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
    120 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
    121 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
    122 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
    123 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
    124 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
    125 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
    126 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
    127 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
    128 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
    129 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
    130 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
    131 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
    132 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
    133 U002d
    134 U002d							;-------------------------------------------------------------------------------
    135 U002d
    136 U000e ????				      SEG.U	TIA_REGISTERS_READ
    137 U0000					      ORG	TIA_BASE_READ_ADDRESS
    138 U0000
    139 U0000							;											bit 7	 bit 6
    140 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
    141 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
    142 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
    143 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
    144 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
    145 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
    146 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
    147 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
    148 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
    149 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
    150 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
    151 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
    152 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
    153 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
    154 U000e
    155 U000e							;-------------------------------------------------------------------------------
    156 U000e
    157 U0298 ????				      SEG.U	RIOT
    158 U0280					      ORG	$280
    159 U0280
    160 U0280							; RIOT MEMORY MAP
    161 U0280
    162 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    163 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    164 U0281
    165 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    166 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    167 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    168 U0284		       00	   INTIM      ds	1	; $284		Timer output
    169 U0285
    170 U0285		       00	   TIMINT     ds	1	; $285
    171 U0286
    172 U0286							; Unused/undefined registers ($285-$294)
    173 U0286
    174 U0286		       00		      ds	1	; $286
    175 U0287		       00		      ds	1	; $287
    176 U0288		       00		      ds	1	; $288
    177 U0289		       00		      ds	1	; $289
    178 U028a		       00		      ds	1	; $28A
    179 U028b		       00		      ds	1	; $28B
    180 U028c		       00		      ds	1	; $28C
    181 U028d		       00		      ds	1	; $28D
    182 U028e		       00		      ds	1	; $28E
    183 U028f		       00		      ds	1	; $28F
    184 U0290		       00		      ds	1	; $290
    185 U0291		       00		      ds	1	; $291
    186 U0292		       00		      ds	1	; $292
    187 U0293		       00		      ds	1	; $293
    188 U0294
    189 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    190 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    191 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    192 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    193 U0298
    194 U0298							;-------------------------------------------------------------------------------
    195 U0298							; The following required for back-compatibility with code which does not use
    196 U0298							; segments.
    197 U0298
    198  0000 ????				      SEG
    199  0000 ????
    200  0000 ????						; EOF
------- FILE PacMan.asm
------- FILE macro.h LEVEL 2 PASS 2
      0  0000 ????				      include	"macro.h"
      1  0000 ????						; MACRO.H
      2  0000 ????						; Version 1.09, 05/SEP/2020
      3  0000 ????
      4  0000 ????	       00 6d	   VERSION_MACRO =	109
      5  0000 ????
      6  0000 ????						;
      7  0000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  0000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  0000 ????						;
     10  0000 ????						; This file defines DASM macros useful for development for the Atari 2600.
     11  0000 ????						; It is distributed as a companion machine-specific support package
     12  0000 ????						; for the DASM compiler.
     13  0000 ????						;
     14  0000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     15  0000 ????						; contents, or would like ot add something, please report as an issue at...
     16  0000 ????						; https://github.com/dasm-assembler/dasm/issues
     17  0000 ????
     18  0000 ????
     19  0000 ????						; Latest Revisions...
     20  0000 ????						; 1.09  05/SEP/2020	 - updated license/links
     21  0000 ????
     22  0000 ????						; 1.08  13/JUL/2020	 - added use of LXA to CLEAN_START
     23  0000 ????						; 1.07  19/JAN/2020	 - correction to comment VERTICAL_SYNC
     24  0000 ????						; 1.06  03/SEP/2004	 - nice revision of VERTICAL_SYNC (Edwin Blink)
     25  0000 ????						; 1.05  14/NOV/2003	 - Added VERSION_MACRO equate (which will reflect 100x version #)
     26  0000 ????						;			   This will allow conditional code to verify MACRO.H being
     27  0000 ????						;			   used for code assembly.
     28  0000 ????						; 1.04  13/NOV/2003	 - SET_POINTER macro added (16-bit address load)
     29  0000 ????						;
     30  0000 ????						; 1.03  23/JUN/2003	 - CLEAN_START macro added - clears TIA, RAM, registers
     31  0000 ????						;
     32  0000 ????						; 1.02  14/JUN/2003	 - VERTICAL_SYNC macro added
     33  0000 ????						;			   (standardised macro for vertical synch code)
     34  0000 ????						; 1.01  22/MAR/2003	 - SLEEP macro added. 
     35  0000 ????						;			 - NO_ILLEGAL_OPCODES switch implemented
     36  0000 ????						; 1.0	22/MAR/2003		Initial release
     37  0000 ????
     38  0000 ????						; Note: These macros use illegal opcodes.  To disable illegal opcode usage, 
     39  0000 ????						;   define the symbol NO_ILLEGAL_OPCODES (-DNO_ILLEGAL_OPCODES=1 on command-line).
     40  0000 ????						;   If you do not allow illegal opcode usage, you must include this file 
     41  0000 ????						;   *after* including VCS.H (as the non-illegal opcodes access hardware
     42  0000 ????						;   registers and require them to be defined first).
     43  0000 ????
     44  0000 ????						; Available macros...
     45  0000 ????						;   SLEEP n		 - sleep for n cycles
     46  0000 ????						;   VERTICAL_SYNC	 - correct 3 scanline vertical synch code
     47  0000 ????						;   CLEAN_START	 - set machine to known state on startup
     48  0000 ????						;   SET_POINTER	 - load a 16-bit absolute to a 16-bit variable
     49  0000 ????
     50  0000 ????						;-------------------------------------------------------------------------------
     51  0000 ????						; SLEEP duration
     52  0000 ????						; Original author: Thomas Jentzsch
     53  0000 ????						; Inserts code which takes the specified number of cycles to execute.	This is
     54  0000 ????						; useful for code where precise timing is required.
     55  0000 ????						; ILLEGAL-OPCODE VERSION DOES NOT AFFECT FLAGS OR REGISTERS.
     56  0000 ????						; LEGAL OPCODE VERSION MAY AFFECT FLAGS
     57  0000 ????						; Uses illegal opcode (DASM 2.20.01 onwards).
     58  0000 ????
     59  0000 ????				      MAC	sleep
     60  0000 ????			   .CYCLES    SET	{1}
     61  0000 ????
     62  0000 ????				      IF	.CYCLES < 2
     63  0000 ????				      ECHO	"MACRO ERROR: 'SLEEP': Duration must be > 1"
     64  0000 ????				      ERR
     65  0000 ????				      ENDIF
     66  0000 ????
     67  0000 ????				      IF	.CYCLES & 1
     68  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
     69  0000 ????				      nop	0
     70  0000 ????				      ELSE
     71  0000 ????				      bit	VSYNC
     72  0000 ????				      ENDIF
     73  0000 ????			   .CYCLES    SET	.CYCLES - 3
     74  0000 ????				      ENDIF
     75  0000 ????
     76  0000 ????				      REPEAT	.CYCLES / 2
     77  0000 ????				      nop
     78  0000 ????				      REPEND
     79  0000 ????				      ENDM		;usage: SLEEP n (n>1)
     80  0000 ????
     81  0000 ????						;-------------------------------------------------------------------------------
     82  0000 ????						; VERTICAL_SYNC
     83  0000 ????						; revised version by Edwin Blink -- saves bytes!
     84  0000 ????						; Inserts the code required for a proper 3 scanline vertical sync sequence
     85  0000 ????						; Note: Alters the accumulator
     86  0000 ????
     87  0000 ????						; OUT: A = 0
     88  0000 ????
     89  0000 ????				      MAC	vertical_sync
     90  0000 ????				      lda	#%1110	; each '1' bits generate a VSYNC ON line (bits 1..3)
     91  0000 ????			   .VSLP1     sta	WSYNC	; 1st '0' bit resets Vsync, 2nd '0' bit exit loop
     92  0000 ????				      sta	VSYNC
     93  0000 ????				      lsr
     94  0000 ????				      bne	.VSLP1	; branch until VYSNC has been reset
     95  0000 ????				      ENDM
     96  0000 ????
     97  0000 ????						;-------------------------------------------------------------------------------
     98  0000 ????						; CLEAN_START
     99  0000 ????						; Original author: Andrew Davie
    100  0000 ????						; Standardised start-up code, clears stack, all TIA registers and RAM to 0
    101  0000 ????						; Sets stack pointer to $FF, and all registers to 0
    102  0000 ????						; Sets decimal mode off, sets interrupt flag (kind of un-necessary)
    103  0000 ????						; Use as very first section of code on boot (ie: at reset)
    104  0000 ????						; Code written to minimise total ROM usage - uses weird 6502 knowledge :)
    105  0000 ????
    106  0000 ????				      MAC	clean_start
    107  0000 ????				      sei
    108  0000 ????				      cld
    109  0000 ????
    110  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
    111  0000 ????				      lxa	#0
    112  0000 ????				      ELSE
    113  0000 ????				      ldx	#0
    114  0000 ????				      txa
    115  0000 ????				      ENDIF
    116  0000 ????				      tay
    117  0000 ????			   .CLEAR_STACK dex
    118  0000 ????				      txs
    119  0000 ????				      pha
    120  0000 ????				      bne	.CLEAR_STACK	; SP=$FF, X = A = Y = 0
    121  0000 ????
    122  0000 ????				      ENDM
    123  0000 ????
    124  0000 ????						;-------------------------------------------------------
    125  0000 ????						; SET_POINTER
    126  0000 ????						; Original author: Manuel Rotschkar
    127  0000 ????						;
    128  0000 ????						; Sets a 2 byte RAM pointer to an absolute address.
    129  0000 ????						;
    130  0000 ????						; Usage: SET_POINTER pointer, address
    131  0000 ????						; Example: SET_POINTER SpritePTR, SpriteData
    132  0000 ????						;
    133  0000 ????						; Note: Alters the accumulator, NZ flags
    134  0000 ????						; IN 1: 2 byte RAM location reserved for pointer
    135  0000 ????						; IN 2: absolute address
    136  0000 ????
    137  0000 ????				      MAC	set_pointer
    138  0000 ????			   .POINTER   SET	{1}
    139  0000 ????			   .ADDRESS   SET	{2}
    140  0000 ????
    141  0000 ????				      LDA	#<.ADDRESS	; Get Lowbyte of Address
    142  0000 ????				      STA	.POINTER	; Store in pointer
    143  0000 ????				      LDA	#>.ADDRESS	; Get Hibyte of Address
    144  0000 ????				      STA	.POINTER+1	; Store in pointer+1
    145  0000 ????
    146  0000 ????				      ENDM
    147  0000 ????
    148  0000 ????						;-------------------------------------------------------
    149  0000 ????						; BOUNDARY byte#
    150  0000 ????						; Original author: Denis Debro (borrowed from Bob Smith / Thomas)
    151  0000 ????						;
    152  0000 ????						; Push data to a certain position inside a page and keep count of how
    153  0000 ????						; many free bytes the programmer will have.
    154  0000 ????						;
    155  0000 ????						; eg: BOUNDARY 5    ; position at byte #5 in page
    156  0000 ????
    157  0000 ????			   .FREE_BYTES SET	0
    158  0000 ????				      MAC	boundary
    159  0000 ????				      REPEAT	256
    160  0000 ????				      IF	<. % {1} = 0
    161  0000 ????				      MEXIT
    162  0000 ????				      ELSE
    163  0000 ????			   .FREE_BYTES SET	.FREE_BYTES + 1
    164  0000 ????				      .byte	$00
    165  0000 ????				      ENDIF
    166  0000 ????				      REPEND
    167  0000 ????				      ENDM
    168  0000 ????
    169  0000 ????
    170  0000 ????						; EOF
------- FILE PacMan.asm
      4  0000 ????
      5  0000 ????						;==================================================================================
      6  0000 ????						; Program Definitions
      7  0000 ????						;==================================================================================
      8  0000 ????
      9  0000 ????	       00 16	   SPRITE_HEIGHT =	22
     10  0000 ????	       00 05	   TIMER_LIMIT =	5
     11  0000 ????
     12  0000 ????						;==================================================================================
     13  0000 ????						; Program Variables
     14  0000 ????						;==================================================================================
     15  0000 ????
     16 U0096 ????				      SEG.U	Variables
     17 U0080					      ORG	$80
     18 U0080
     19 U0080		       00	   PS_temp    ds	1
     20 U0081
     21 U0081		       00 00	   SpriteAddrPtr ds	2
     22 U0083		       00	   SpriteXPos ds	1
     23 U0084		       00	   SpriteYPos ds	1
     24 U0085		       00	   LastSpriteXPos ds	1
     25 U0086		       00	   LastSpriteYPos ds	1
     26 U0087		       00	   PlayerVelocityMask ds	1
     27 U0088
     28 U0088		       00 00	   SpriteGhostAddrPtr ds	2
     29 U008a		       00	   GhostSpriteXPos ds	1
     30 U008b		       00	   GhostSpriteYPos ds	1
     31 U008c
     32 U008c		       00	   SpriteAnimationIndex ds	1
     33 U008d		       00	   IsFrameGoingUp ds	1
     34 U008e
     35 U008e		       00	   ScoreTens  ds	1
     36 U008f		       00	   ScoreOnes  ds	1
     37 U0090		       00	   TensOffset ds	1
     38 U0091		       00	   OnesOffset ds	1
     39 U0092		       00	   ScoreDisplayTemp ds	1
     40 U0093
     41 U0093		       00	   TimerCounter ds	1
     42 U0094		       00	   PlayerReflectedBuffer ds	1
     43 U0095		       00	   GhostReflectedBuffer ds	1
     44 U0096
     45 U0096							;==================================================================================
     46 U0096							; Program Initialization
     47 U0096							;==================================================================================
     48 U0096
     49  fac9 ????				      SEG	Executable
     50  f000					      ORG	$F000
     51  f000
     52  f000				   Reset
     53  f000				   ClearMemory
     54  f000		       a2 00		      LDX	#0
     55  f002		       9a		      TXS
     56  f003		       48		      PHA
     57  f004		       8a		      TXA
     58  f005
     59  f005				   ClearMemoryLoop
     60  f005		       48		      PHA
     61  f006		       ca		      DEX
     62  f007		       d0 fc		      BNE	ClearMemoryLoop
     63  f009
     64  f009		       20 25 f1 	      JSR	InitVariables
     65  f00c
     66  f00c							;==================================================================================
     67  f00c							; Main Loop
     68  f00c							;==================================================================================
     69  f00c
     70  f00c				   Main
     71  f00c		       20 1b f0 	      JSR	HandleVSync
     72  f00f		       20 2a f0 	      JSR	HandleVBlank
     73  f012		       20 48 f0 	      JSR	MainKernel
     74  f015		       20 c5 f0 	      JSR	Overscan
     75  f018		       4c 0c f0 	      JMP	Main
     76  f01b
     77  f01b							;==================================================================================
     78  f01b							; HandleVSync
     79  f01b							;==================================================================================
     80  f01b
     81  f01b				   HandleVSync
     82  f01b		       a9 00		      LDA	#0
     83  f01d		       85 01		      STA	VBLANK
     84  f01f		       a9 02		      LDA	#2
     85  f021		       85 00		      STA	VSYNC
     86  f023
     87  f023				   VSyncLoop
     88  f023		       85 02		      STA	WSYNC
     89  f025		       85 02		      STA	WSYNC
     90  f027		       85 02		      STA	WSYNC
     91  f029
     92  f029		       60		      RTS
     93  f02a
     94  f02a							;==================================================================================
     95  f02a							; HandleVBlank
     96  f02a							; Handle Part of Game Logic
     97  f02a							;==================================================================================
     98  f02a
     99  f02a				   HandleVBlank
    100  f02a
    101  f02a							; Initialize TIM64T
    102  f02a		       a9 2a		      LDA	#42
    103  f02c		       8d 96 02 	      STA	TIM64T
    104  f02f
    105  f02f							; Prepare Registers for VBLANK
    106  f02f		       a9 00		      LDA	#0
    107  f031		       85 00		      STA	VSYNC
    108  f033		       a9 42		      LDA	#%01000010
    109  f035		       85 01		      STA	VBLANK
    110  f037
    111  f037							; Processing Tasks
    112  f037		       20 f4 f2 	      JSR	GetControllerInputs
    113  f03a		       20 32 f3 	      JSR	GetController2InputsDEBUG
    114  f03d		       20 d8 f1 	      JSR	UpdateEntities
    115  f040
    116  f040				   VBlankLoop
    117  f040		       ad 84 02 	      LDA	INTIM
    118  f043		       d0 fb		      BNE	VBlankLoop
    119  f045
    120  f045		       85 02		      STA	WSYNC
    121  f047		       60		      RTS
    122  f048
    123  f048							;==================================================================================
    124  f048							; MainKernel
    125  f048							;==================================================================================
    126  f048
    127  f048				   MainKernel
    128  f048		       a9 00		      LDA	#0
    129  f04a		       85 01		      STA	VBLANK
    130  f04c
    131  f04c		       20 65 f1 	      JSR	PositionSpriteX
    132  f04f		       20 9c f1 	      JSR	PositionGhostSpriteX
    133  f052
    134  f052		       a2 bf		      LDX	#191
    135  f054		       85 02		      STA	WSYNC
    136  f056
    137  f056				   MainFrameLoop
    138  f056
    139  f056							; First Line
    140  f056							; Load First Playfield
    141  f056		       bd 00 f5 	      LDA	MainBoard_STRIP_0,x	; 4  4   0
    142  f059		       85 0d		      STA	PF0	; 3  7   12
    143  f05b
    144  f05b		       bd c0 f5 	      LDA	MainBoard_STRIP_1,x	; 4  11   33
    145  f05e		       85 0e		      STA	PF1	; 3  14   42
    146  f060
    147  f060		       bd 80 f6 	      LDA	MainBoard_STRIP_2,x	; 4  18
    148  f063		       85 0f		      STA	PF2	; 3  21
    149  f065
    150  f065							; Check Vertical Drawing
    151  f065		       8a		      TXA		; 2
    152  f066		       38		      SEC		; 2
    153  f067		       e5 84		      SBC	SpriteYPos	; 3
    154  f069		       69 16		      ADC	#SPRITE_HEIGHT	; 2
    155  f06b
    156  f06b							; Load Second Playfield
    157  f06b		       bc 40 f7 	      LDY	MainBoard_STRIP_3,x	; 4  25
    158  f06e		       84 0d		      STY	PF0	; 3  28
    159  f070
    160  f070		       bc 00 f8 	      LDY	MainBoard_STRIP_4,x	; 4  32
    161  f073		       84 0e		      STY	PF1
    162  f075
    163  f075		       bc c0 f8 	      LDY	MainBoard_STRIP_5,x	; 4  39
    164  f078		       84 0f		      STY	PF2	; 3  42
    165  f07a
    166  f07a							; Load P0 Sprite Data
    167  f07a		       90 05		      BCC	SkipDrawing	; 3
    168  f07c		       a8		      TAY		; 3
    169  f07d		       b1 81		      LDA	(SpriteAddrPtr),y	; 5
    170  f07f		       85 1b		      STA	GRP0	; 3
    171  f081
    172  f081				   SkipDrawing
    173  f081							; Decrease X and Go To Next Line
    174  f081		       ca		      DEX		; 2
    175  f082		       85 02		      STA	WSYNC	; 3
    176  f084		       e0 00		      CPX	#0
    177  f086		       f0 30		      BEQ	MainFrameLoopEnd	; 2 
    178  f088
    179  f088							; Second Line
    180  f088
    181  f088							; Load First Playfield
    182  f088		       bd 00 f5 	      LDA	MainBoard_STRIP_0,x	; 4
    183  f08b		       85 0d		      STA	PF0	; 3
    184  f08d
    185  f08d		       bd c0 f5 	      LDA	MainBoard_STRIP_1,x	; 4
    186  f090		       85 0e		      STA	PF1	; 3
    187  f092
    188  f092		       bd 80 f6 	      LDA	MainBoard_STRIP_2,x	; 4
    189  f095		       85 0f		      STA	PF2	; 3
    190  f097
    191  f097							; Check Ghost Vertical Drawing
    192  f097		       8a		      TXA		; 2
    193  f098		       38		      SEC		; 2
    194  f099		       e5 8b		      SBC	GhostSpriteYPos	; 3
    195  f09b		       69 16		      ADC	#SPRITE_HEIGHT	; 2
    196  f09d
    197  f09d							; Load Second Playfield
    198  f09d		       bc 40 f7 	      LDY	MainBoard_STRIP_3,x	; 4
    199  f0a0		       84 0d		      STY	PF0	; 3
    200  f0a2
    201  f0a2		       bc 00 f8 	      LDY	MainBoard_STRIP_4,x	; 4
    202  f0a5		       84 0e		      STY	PF1	; 3
    203  f0a7
    204  f0a7		       bc c0 f8 	      LDY	MainBoard_STRIP_5,x	; 4
    205  f0aa		       84 0f		      STY	PF2	; 3
    206  f0ac
    207  f0ac							; Load Ghost Sprite Data
    208  f0ac		       90 05		      BCC	SkipGhostDrawing	; 3
    209  f0ae		       a8		      TAY		; 3
    210  f0af		       b1 88		      LDA	(SpriteGhostAddrPtr),y	; 5
    211  f0b1		       85 1c		      STA	GRP1	; 3
    212  f0b3
    213  f0b3				   SkipGhostDrawing
    214  f0b3							; Decrease X and Go To Next Line
    215  f0b3		       85 02		      STA	WSYNC	; 3
    216  f0b5		       ca		      DEX		; 2
    217  f0b6		       d0 9e		      BNE	MainFrameLoop	; 2
    218  f0b8
    219  f0b8				   MainFrameLoopEnd
    220  f0b8							; Clearing Playfield Registers
    221  f0b8		       a9 00		      LDA	#0
    222  f0ba		       85 0d		      STA	PF0
    223  f0bc		       85 0e		      STA	PF1
    224  f0be		       85 0f		      STA	PF2
    225  f0c0
    226  f0c0		       85 1b		      STA	GRP0
    227  f0c2		       85 1c		      STA	GRP1
    228  f0c4
    229  f0c4		       60		      RTS
    230  f0c5
    231  f0c5							;==================================================================================
    232  f0c5							; Overscan
    233  f0c5							;==================================================================================
    234  f0c5
    235  f0c5				   Overscan
    236  f0c5
    237  f0c5							; Prepare Registers for Overscan Drawing
    238  f0c5		       a9 00		      LDA	#0
    239  f0c7		       85 0e		      STA	PF1
    240  f0c9		       85 0b		      STA	REFP0
    241  f0cb		       85 0c		      STA	REFP1
    242  f0cd
    243  f0cd		       a9 0e		      LDA	#$0E
    244  f0cf		       85 06		      STA	COLUP0
    245  f0d1		       85 07		      STA	COLUP1
    246  f0d3
    247  f0d3							; Calculate Tens Offset
    248  f0d3		       a6 8e		      LDX	ScoreTens
    249  f0d5		       bd 9a f3 	      LDA	MultBy20,x
    250  f0d8		       85 90		      STA	TensOffset
    251  f0da
    252  f0da							; Calculate Ones Offset
    253  f0da		       a6 8f		      LDX	ScoreOnes
    254  f0dc		       bd 9a f3 	      LDA	MultBy20,x
    255  f0df		       85 91		      STA	OnesOffset
    256  f0e1
    257  f0e1							; Adjust Score Placement
    258  f0e1		       85 02		      STA	WSYNC
    259  f0e3		       20 99 f3 	      JSR	Delay12
    260  f0e6		       20 99 f3 	      JSR	Delay12
    261  f0e9		       85 10		      STA	RESP0
    262  f0eb		       85 11		      STA	RESP1
    263  f0ed
    264  f0ed		       a2 1c		      LDX	#28
    265  f0ef				   OverscanLoop
    266  f0ef
    267  f0ef							; Is it time to draw?
    268  f0ef		       e0 0a		      CPX	#10
    269  f0f1		       90 16		      BCC	SmallerThan9
    270  f0f3
    271  f0f3							; Time to draw
    272  f0f3		       8a		      TXA
    273  f0f4		       e9 09		      SBC	#9
    274  f0f6		       65 90		      ADC	TensOffset
    275  f0f8		       a8		      TAY
    276  f0f9		       b9 00 fa 	      LDA	BottomData,y
    277  f0fc		       85 1b		      STA	GRP0
    278  f0fe
    279  f0fe		       8a		      TXA
    280  f0ff		       e9 09		      SBC	#9
    281  f101		       65 91		      ADC	OnesOffset
    282  f103		       a8		      TAY
    283  f104		       b9 00 fa 	      LDA	BottomData,y
    284  f107		       85 1c		      STA	GRP1
    285  f109
    286  f109				   SmallerThan9
    287  f109		       85 02		      STA	WSYNC
    288  f10b		       ca		      DEX
    289  f10c		       d0 e1		      BNE	OverscanLoop
    290  f10e
    291  f10e							; Clear Player Registers
    292  f10e		       a9 00		      LDA	#0
    293  f110		       85 1b		      STA	GRP0
    294  f112		       85 1c		      STA	GRP1
    295  f114
    296  f114							; Return P0 Register Reflection Value
    297  f114		       a5 94		      LDA	PlayerReflectedBuffer
    298  f116		       85 0b		      STA	REFP0
    299  f118
    300  f118							; Return P1 Register Reflection Value
    301  f118		       a5 95		      LDA	GhostReflectedBuffer
    302  f11a		       85 0c		      STA	REFP1
    303  f11c
    304  f11c							; Return P0 and P1 colors
    305  f11c		       a9 1e		      LDA	#$1E
    306  f11e		       85 06		      STA	COLUP0
    307  f120		       a9 58		      LDA	#$58
    308  f122		       85 07		      STA	COLUP1
    309  f124
    310  f124		       60		      RTS
    311  f125
    312  f125							;==================================================================================
    313  f125							; InitVariables
    314  f125							;==================================================================================
    315  f125
    316  f125				   InitVariables
    317  f125							; Initialize BG Color and PF Color
    318  f125		       a9 00		      LDA	#$00
    319  f127		       85 09		      STA	COLUBK
    320  f129		       a9 72		      LDA	#$72
    321  f12b		       85 08		      STA	COLUPF
    322  f12d
    323  f12d							; Initialize Player Color and Pattern
    324  f12d		       a9 1e		      LDA	#$1E
    325  f12f		       85 06		      STA	COLUP0
    326  f131		       a9 58		      LDA	#$58
    327  f133		       85 07		      STA	COLUP1
    328  f135
    329  f135							; Initialize Variables
    330  f135
    331  f135							; SpriteXPos
    332  f135		       a9 7d		      LDA	#125
    333  f137		       85 83		      STA	SpriteXPos
    334  f139
    335  f139							; SpriteYPos
    336  f139		       a9 69		      LDA	#105
    337  f13b		       85 84		      STA	SpriteYPos
    338  f13d
    339  f13d							; SpriteGhostXPos and YPos
    340  f13d		       a9 32		      LDA	#50
    341  f13f		       85 8a		      STA	GhostSpriteXPos
    342  f141		       85 8b		      STA	GhostSpriteYPos
    343  f143
    344  f143							; Timer Counter
    345  f143		       a9 00		      LDA	#0
    346  f145		       85 93		      STA	TimerCounter
    347  f147
    348  f147							; Score
    349  f147		       85 8e		      STA	ScoreTens
    350  f149		       85 8f		      STA	ScoreOnes
    351  f14b
    352  f14b							; Set Controller Inputs
    353  f14b		       8d 81 02 	      STA	SWACNT
    354  f14e
    355  f14e							; Set SpriteAnimationIndex
    356  f14e		       85 8c		      STA	SpriteAnimationIndex
    357  f150		       85 8d		      STA	IsFrameGoingUp
    358  f152
    359  f152							; Set P0 and P1 Delays
    360  f152		       85 25		      STA	VDELP0
    361  f154
    362  f154							; PacmanSpriteDataPointer
    363  f154		       a9 00		      LDA	#<Sprite0Data
    364  f156		       85 81		      STA	SpriteAddrPtr
    365  f158		       a9 f4		      LDA	#>Sprite0Data
    366  f15a		       85 82		      STA	SpriteAddrPtr+1
    367  f15c
    368  f15c							; GhostSpriteDataPointer
    369  f15c		       a9 58		      LDA	#<SpriteGhostData
    370  f15e		       85 88		      STA	SpriteGhostAddrPtr
    371  f160		       a9 f4		      LDA	#>SpriteGhostData
    372  f162		       85 89		      STA	SpriteGhostAddrPtr+1
    373  f164
    374  f164		       60		      RTS
    375  f165
    376  f165							;==================================================================================
    377  f165							; PositionSpriteX - Subroutine to position player sprite
    378  f165							;==================================================================================
    379  f165
    380  f165				   PositionSpriteX
    381  f165		       85 02		      STA	WSYNC	; 3
    382  f167		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    383  f169
    384  f169				   PosSP
    385  f169
    386  f169		       a5 83		      LDA	SpriteXPos	; 4
    387  f16b		       a8		      TAY		; 2
    388  f16c
    389  f16c							; Divide by 16
    390  f16c		       4a		      LSR		; 2
    391  f16d		       4a		      LSR		; 2
    392  f16e		       4a		      LSR		; 2
    393  f16f		       4a		      LSR		; 2
    394  f170		       85 80		      STA	PS_temp	; 3
    395  f172
    396  f172		       98		      TYA		; 2
    397  f173		       29 0f		      AND	#15	; 2
    398  f175
    399  f175		       18		      CLC		; 2
    400  f176
    401  f176		       65 80		      ADC	PS_temp	; 3
    402  f178		       a4 80		      LDY	PS_temp	; 3
    403  f17a
    404  f17a		       c9 0f		      CMP	#15	; 2
    405  f17c		       90 03		      BCC	NH	; 3
    406  f17e		       e9 0f		      SBC	#15	; 2
    407  f180		       c8		      INY		; 2
    408  f181
    409  f181				   NH
    410  f181							; Use remainder for fine adjustment
    411  f181		       49 07		      EOR	#7	; 2
    412  f183		       0a		      ASL		; 2
    413  f184		       0a		      ASL		; 2
    414  f185		       0a		      ASL		; 2
    415  f186		       0a		      ASL		; 2
    416  f187
    417  f187		       85 20		      STA	HMP0	; fine movement	     ; 4
    418  f189		       85 02		      STA	WSYNC	; 3
    419  f18b
    420  f18b		       20 9b f1 	      JSR	Ret	; just a 12 cycle delay     ; 12
    421  f18e		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    422  f190
    423  f190
    424  f190				   Jiggle
    425  f190		       88		      DEY		; 2
    426  f191		       10 fd		      BPL	Jiggle	; 3
    427  f193
    428  f193		       85 10		      STA	RESP0	; 4
    429  f195
    430  f195		       85 02		      STA	WSYNC	; 3
    431  f197		       85 2a		      STA	HMOVE	; 3
    432  f199		       85 02		      STA	WSYNC	; 3
    433  f19b
    434  f19b				   Ret
    435  f19b		       60		      RTS		; 6
    436  f19c
    437  f19c							;==================================================================================
    438  f19c							; PositionGhostSpriteX - Subroutine to position ghost sprite
    439  f19c							;==================================================================================
    440  f19c
    441  f19c				   PositionGhostSpriteX
    442  f19c		       85 02		      STA	WSYNC	; 3
    443  f19e		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    444  f1a0
    445  f1a0		       a2 01		      LDX	#1	; sprite index 		  ; 2
    446  f1a2
    447  f1a2				   PosSP1
    448  f1a2
    449  f1a2		       b5 89		      LDA	GhostSpriteXPos-1,x	; 4
    450  f1a4		       a8		      TAY		; 2
    451  f1a5
    452  f1a5							; Divide by 16
    453  f1a5		       4a		      LSR		; 2
    454  f1a6		       4a		      LSR		; 2
    455  f1a7		       4a		      LSR		; 2
    456  f1a8		       4a		      LSR		; 2
    457  f1a9		       85 80		      STA	PS_temp	; 3
    458  f1ab
    459  f1ab		       98		      TYA		; 2
    460  f1ac		       29 0f		      AND	#15	; 2
    461  f1ae
    462  f1ae		       18		      CLC		; 2
    463  f1af
    464  f1af		       65 80		      ADC	PS_temp	; 3
    465  f1b1		       a4 80		      LDY	PS_temp	; 3
    466  f1b3
    467  f1b3		       c9 0f		      CMP	#15	; 2
    468  f1b5		       90 03		      BCC	NH1	; 3
    469  f1b7		       e9 0f		      SBC	#15	; 2
    470  f1b9		       c8		      INY		; 2
    471  f1ba
    472  f1ba				   NH1
    473  f1ba							; Use remainder for fine adjustment
    474  f1ba		       49 07		      EOR	#7	; 2
    475  f1bc		       0a		      ASL		; 2
    476  f1bd		       0a		      ASL		; 2
    477  f1be		       0a		      ASL		; 2
    478  f1bf		       0a		      ASL		; 2
    479  f1c0
    480  f1c0		       95 20		      STA	HMP1-1,x	; fine movement	     ; 4
    481  f1c2		       85 02		      STA	WSYNC	; 3
    482  f1c4
    483  f1c4		       20 d7 f1 	      JSR	Ret1	; just a 12 cycle delay     ; 12
    484  f1c7		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    485  f1c9
    486  f1c9
    487  f1c9				   Jiggle1
    488  f1c9		       88		      DEY		; 2
    489  f1ca		       10 fd		      BPL	Jiggle1	; 3
    490  f1cc
    491  f1cc		       95 10		      STA	RESP1-1,x	; 4
    492  f1ce
    493  f1ce		       ca		      DEX		; 2
    494  f1cf		       d0 d1		      BNE	PosSP1	; 3
    495  f1d1
    496  f1d1		       85 02		      STA	WSYNC	; 3
    497  f1d3		       85 2a		      STA	HMOVE	; 3
    498  f1d5		       85 02		      STA	WSYNC	; 3
    499  f1d7
    500  f1d7				   Ret1
    501  f1d7		       60		      RTS		; 6
    502  f1d8
    503  f1d8							;==================================================================================
    504  f1d8							; UpdateEntities - Update Game Logic
    505  f1d8							;==================================================================================
    506  f1d8
    507  f1d8				   UpdateEntities
    508  f1d8							; Check Player Collision
    509  f1d8		       20 ed f1 	      JSR	CheckPlayerCollision
    510  f1db
    511  f1db							; Update Sprite Pos According to Velocity Mask
    512  f1db		       20 42 f2 	      JSR	UpdatePlayerPosition
    513  f1de
    514  f1de							; Remove Collisions After Checks
    515  f1de		       85 2c		      STA	CXCLR
    516  f1e0
    517  f1e0							; Update Timer
    518  f1e0		       20 6a f3 	      JSR	UpdateTimer
    519  f1e3
    520  f1e3							; Increase Score
    521  f1e3		       20 7a f3 	      JSR	UpdateScore
    522  f1e6
    523  f1e6							; Change Animation Frame
    524  f1e6		       20 93 f2 	      JSR	ChangeAnimationFrame
    525  f1e9
    526  f1e9							; Apply Animation Frame
    527  f1e9		       20 b6 f2 	      JSR	ApplyAnimationFrame
    528  f1ec
    529  f1ec		       60		      RTS
    530  f1ed
    531  f1ed							;==================================================================================
    532  f1ed							; CheckPlayerCollision - Verify for Player Collision with PF and Update Velocity Mask
    533  f1ed							;==================================================================================
    534  f1ed
    535  f1ed				   CheckPlayerCollision
    536  f1ed							; Verify P0PF Collision Bit
    537  f1ed		       a5 02		      LDA	CXP0FB
    538  f1ef		       29 80		      AND	#%10000000
    539  f1f1		       f0 4e		      BEQ	PlayerPFCollisionNotDetected
    540  f1f3
    541  f1f3							; Check Where Player Was Going
    542  f1f3		       a6 87		      LDX	PlayerVelocityMask
    543  f1f5
    544  f1f5							; Return Player to Previous Spot Before Zeoring Velocity
    545  f1f5		       8a		      TXA
    546  f1f6		       29 08		      AND	#%1000
    547  f1f8		       d0 1a		      BNE	WasGoingRight
    548  f1fa
    549  f1fa		       8a		      TXA
    550  f1fb		       29 04		      AND	#%0100
    551  f1fd		       d0 20		      BNE	WasGoingLeft
    552  f1ff
    553  f1ff		       8a		      TXA
    554  f200		       29 02		      AND	#%0010
    555  f202		       d0 26		      BNE	WasGoingDown
    556  f204
    557  f204		       8a		      TXA
    558  f205		       29 01		      AND	#%0001
    559  f207		       d0 2c		      BNE	WasGoingUp
    560  f209
    561  f209							; Return X and Y in case Player isnt moving and is still stuck
    562  f209		       a5 85		      LDA	LastSpriteXPos
    563  f20b		       85 83		      STA	SpriteXPos
    564  f20d		       a5 86		      LDA	LastSpriteYPos
    565  f20f		       85 84		      STA	SpriteYPos
    566  f211
    567  f211		       4c 3d f2 	      JMP	ZeroPlayerVelocity
    568  f214
    569  f214				   WasGoingRight
    570  f214		       a5 85		      LDA	LastSpriteXPos
    571  f216		       85 83		      STA	SpriteXPos
    572  f218
    573  f218		       c6 83		      DEC	SpriteXPos
    574  f21a		       c6 83		      DEC	SpriteXPos
    575  f21c
    576  f21c		       4c 3d f2 	      JMP	ZeroPlayerVelocity
    577  f21f
    578  f21f				   WasGoingLeft
    579  f21f		       a5 85		      LDA	LastSpriteXPos
    580  f221		       85 83		      STA	SpriteXPos
    581  f223
    582  f223		       e6 83		      INC	SpriteXPos
    583  f225		       e6 83		      INC	SpriteXPos
    584  f227
    585  f227		       4c 3d f2 	      JMP	ZeroPlayerVelocity
    586  f22a
    587  f22a				   WasGoingDown
    588  f22a		       a5 86		      LDA	LastSpriteYPos
    589  f22c		       85 84		      STA	SpriteYPos
    590  f22e
    591  f22e		       e6 84		      INC	SpriteYPos
    592  f230		       e6 84		      INC	SpriteYPos
    593  f232
    594  f232		       4c 3d f2 	      JMP	ZeroPlayerVelocity
    595  f235
    596  f235				   WasGoingUp
    597  f235		       a5 86		      LDA	LastSpriteYPos
    598  f237		       85 84		      STA	SpriteYPos
    599  f239
    600  f239		       c6 84		      DEC	SpriteYPos
    601  f23b		       c6 84		      DEC	SpriteYPos
    602  f23d
    603  f23d				   ZeroPlayerVelocity
    604  f23d		       a9 00		      LDA	#0
    605  f23f		       85 87		      STA	PlayerVelocityMask
    606  f241
    607  f241				   PlayerPFCollisionNotDetected
    608  f241		       60		      RTS
    609  f242
    610  f242							;==================================================================================
    611  f242							; UpdatePlayerPosition - Update Player Position According to Velocity Mask
    612  f242							;==================================================================================
    613  f242
    614  f242				   UpdatePlayerPosition
    615  f242							; Verify Collision and Refuse to Move in case is colliding
    616  f242		       a5 02		      LDA	CXP0FB
    617  f244		       29 80		      AND	#%10000000
    618  f246		       d0 4a		      BNE	UpdatePlayerPositionRet
    619  f248
    620  f248		       a6 87		      LDX	PlayerVelocityMask
    621  f24a
    622  f24a		       8a		      TXA
    623  f24b		       29 08		      AND	#%1000
    624  f24d		       d0 12		      BNE	GoRight
    625  f24f
    626  f24f		       8a		      TXA
    627  f250		       29 04		      AND	#%0100
    628  f252		       d0 1a		      BNE	GoLeft
    629  f254
    630  f254		       8a		      TXA
    631  f255		       29 02		      AND	#%0010
    632  f257		       d0 22		      BNE	GoDown
    633  f259
    634  f259		       8a		      TXA
    635  f25a		       29 01		      AND	#%0001
    636  f25c		       d0 2a		      BNE	GoUp
    637  f25e
    638  f25e		       4c 92 f2 	      JMP	UpdatePlayerPositionRet
    639  f261
    640  f261				   GoRight
    641  f261		       a5 83		      LDA	SpriteXPos
    642  f263		       85 85		      STA	LastSpriteXPos
    643  f265		       a5 84		      LDA	SpriteYPos
    644  f267		       85 86		      STA	LastSpriteYPos
    645  f269		       e6 83		      INC	SpriteXPos
    646  f26b		       4c 92 f2 	      JMP	UpdatePlayerPositionRet
    647  f26e
    648  f26e				   GoLeft
    649  f26e		       a5 83		      LDA	SpriteXPos
    650  f270		       85 85		      STA	LastSpriteXPos
    651  f272		       a5 84		      LDA	SpriteYPos
    652  f274		       85 86		      STA	LastSpriteYPos
    653  f276		       c6 83		      DEC	SpriteXPos
    654  f278		       4c 92 f2 	      JMP	UpdatePlayerPositionRet
    655  f27b
    656  f27b				   GoDown
    657  f27b		       a5 83		      LDA	SpriteXPos
    658  f27d		       85 85		      STA	LastSpriteXPos
    659  f27f		       a5 84		      LDA	SpriteYPos
    660  f281		       85 86		      STA	LastSpriteYPos
    661  f283		       c6 84		      DEC	SpriteYPos
    662  f285		       4c 92 f2 	      JMP	UpdatePlayerPositionRet
    663  f288
    664  f288				   GoUp
    665  f288		       a5 83		      LDA	SpriteXPos
    666  f28a		       85 85		      STA	LastSpriteXPos
    667  f28c		       a5 84		      LDA	SpriteYPos
    668  f28e		       85 86		      STA	LastSpriteYPos
    669  f290		       e6 84		      INC	SpriteYPos
    670  f292
    671  f292				   UpdatePlayerPositionRet
    672  f292		       60		      RTS
    673  f293
    674  f293							;==================================================================================
    675  f293							; ChangeAnimationFrame
    676  f293							;==================================================================================
    677  f293
    678  f293				   ChangeAnimationFrame
    679  f293							; Verify Counter
    680  f293		       a5 93		      LDA	TimerCounter
    681  f295		       d0 1e		      BNE	DontChangeFrame
    682  f297
    683  f297							; Load Current Frame Index
    684  f297		       a4 8c		      LDY	SpriteAnimationIndex
    685  f299
    686  f299							; Verify Next Frame
    687  f299		       a6 8d		      LDX	IsFrameGoingUp
    688  f29b		       f0 04		      BEQ	FrameIsGoingUp
    689  f29d
    690  f29d				   FrameIsGoingDown
    691  f29d		       88		      DEY
    692  f29e		       4c a2 f2 	      JMP	FrameChanged
    693  f2a1
    694  f2a1				   FrameIsGoingUp
    695  f2a1		       c8		      INY
    696  f2a2
    697  f2a2				   FrameChanged
    698  f2a2							; Check if Index is Either 0 or 2
    699  f2a2		       84 8c		      STY	SpriteAnimationIndex
    700  f2a4		       c0 03		      CPY	#3
    701  f2a6		       f0 07		      BEQ	ChangeDirection
    702  f2a8		       c0 00		      CPY	#0
    703  f2aa		       f0 03		      BEQ	ChangeDirection
    704  f2ac
    705  f2ac							; If not
    706  f2ac		       4c b5 f2 	      JMP	FrameChangeReturn
    707  f2af
    708  f2af				   ChangeDirection
    709  f2af		       a5 8d		      LDA	IsFrameGoingUp
    710  f2b1		       49 01		      EOR	#1
    711  f2b3		       85 8d		      STA	IsFrameGoingUp
    712  f2b5
    713  f2b5				   DontRestartFrame
    714  f2b5				   DontChangeFrame
    715  f2b5				   FrameChangeReturn
    716  f2b5		       60		      RTS
    717  f2b6
    718  f2b6							;==================================================================================
    719  f2b6							; ApplyAnimationFrame
    720  f2b6							;==================================================================================
    721  f2b6
    722  f2b6				   ApplyAnimationFrame
    723  f2b6							; Check Counter
    724  f2b6		       a5 93		      LDA	TimerCounter
    725  f2b8		       d0 39		      BNE	ApplyAnimationFrameRet
    726  f2ba
    727  f2ba		       a5 8c		      LDA	SpriteAnimationIndex
    728  f2bc		       f0 0c		      BEQ	Animation0
    729  f2be		       c9 01		      CMP	#1
    730  f2c0		       f0 13		      BEQ	Animation1
    731  f2c2		       c9 02		      CMP	#2
    732  f2c4		       f0 1a		      BEQ	Animation2
    733  f2c6		       c9 03		      CMP	#3
    734  f2c8		       f0 21		      BEQ	Animation3
    735  f2ca
    736  f2ca				   Animation0
    737  f2ca		       a9 00		      LDA	#<Sprite0Data
    738  f2cc		       85 81		      STA	SpriteAddrPtr
    739  f2ce		       a9 f4		      LDA	#>Sprite0Data
    740  f2d0		       85 82		      STA	SpriteAddrPtr+1
    741  f2d2		       4c f3 f2 	      JMP	ApplyAnimationFrameRet
    742  f2d5
    743  f2d5				   Animation1
    744  f2d5		       a9 16		      LDA	#<Sprite1Data
    745  f2d7		       85 81		      STA	SpriteAddrPtr
    746  f2d9		       a9 f4		      LDA	#>Sprite1Data
    747  f2db		       85 82		      STA	SpriteAddrPtr+1
    748  f2dd		       4c f3 f2 	      JMP	ApplyAnimationFrameRet
    749  f2e0
    750  f2e0				   Animation2
    751  f2e0		       a9 2c		      LDA	#<Sprite2Data
    752  f2e2		       85 81		      STA	SpriteAddrPtr
    753  f2e4		       a9 f4		      LDA	#>Sprite2Data
    754  f2e6		       85 82		      STA	SpriteAddrPtr+1
    755  f2e8		       4c f3 f2 	      JMP	ApplyAnimationFrameRet
    756  f2eb
    757  f2eb				   Animation3
    758  f2eb		       a9 42		      LDA	#<Sprite3Data
    759  f2ed		       85 81		      STA	SpriteAddrPtr
    760  f2ef		       a9 f4		      LDA	#>Sprite3Data
    761  f2f1		       85 82		      STA	SpriteAddrPtr+1
    762  f2f3
    763  f2f3				   ApplyAnimationFrameRet
    764  f2f3		       60		      RTS
    765  f2f4
    766  f2f4							;==================================================================================
    767  f2f4							; GetControllerInputs - Update Player Velocity Mask According to Inputs
    768  f2f4							;==================================================================================
    769  f2f4
    770  f2f4				   GetControllerInputs
    771  f2f4		       ae 80 02 	      LDX	SWCHA
    772  f2f7
    773  f2f7							; Check Right Input
    774  f2f7		       8a		      TXA
    775  f2f8		       29 80		      AND	#%10000000
    776  f2fa		       f0 12		      BEQ	RightInput
    777  f2fc
    778  f2fc							; Check Left Input
    779  f2fc		       8a		      TXA
    780  f2fd		       29 40		      AND	#%01000000
    781  f2ff		       f0 18		      BEQ	LeftInput
    782  f301
    783  f301							; Check Down Input
    784  f301		       8a		      TXA
    785  f302		       29 20		      AND	#%00100000
    786  f304		       f0 20		      BEQ	DownInput
    787  f306
    788  f306							; Check Up Input
    789  f306		       8a		      TXA
    790  f307		       29 10		      AND	#%00010000
    791  f309		       f0 22		      BEQ	UpInput
    792  f30b
    793  f30b							; No Input Detected
    794  f30b		       4c 31 f3 	      JMP	ControllerRet
    795  f30e
    796  f30e				   RightInput
    797  f30e		       a9 08		      LDA	#%1000
    798  f310		       85 0b		      STA	REFP0
    799  f312		       85 94		      STA	PlayerReflectedBuffer
    800  f314
    801  f314		       85 87		      STA	PlayerVelocityMask
    802  f316		       4c 31 f3 	      JMP	ControllerRet
    803  f319
    804  f319				   LeftInput
    805  f319		       a9 00		      LDA	#0
    806  f31b		       85 0b		      STA	REFP0
    807  f31d		       85 94		      STA	PlayerReflectedBuffer
    808  f31f
    809  f31f		       a9 04		      LDA	#%0100
    810  f321		       85 87		      STA	PlayerVelocityMask
    811  f323		       4c 31 f3 	      JMP	ControllerRet
    812  f326
    813  f326				   DownInput
    814  f326		       a9 02		      LDA	#%0010
    815  f328		       85 87		      STA	PlayerVelocityMask
    816  f32a		       4c 31 f3 	      JMP	ControllerRet
    817  f32d
    818  f32d				   UpInput
    819  f32d		       a9 01		      LDA	#%0001
    820  f32f		       85 87		      STA	PlayerVelocityMask
    821  f331
    822  f331				   ControllerRet
    823  f331		       60		      RTS
    824  f332
    825  f332							;==================================================================================
    826  f332							; GetController2Inputs - DEBUG - Controls Ghost
    827  f332							;==================================================================================
    828  f332
    829  f332				   GetController2InputsDEBUG
    830  f332		       ae 80 02 	      LDX	SWCHA
    831  f335
    832  f335							; Check Right Input
    833  f335		       8a		      TXA
    834  f336		       29 08		      AND	#%00001000
    835  f338		       f0 12		      BEQ	RightInputGhost
    836  f33a
    837  f33a							; Check Left Input
    838  f33a		       8a		      TXA
    839  f33b		       29 04		      AND	#%00000100
    840  f33d		       f0 18		      BEQ	LeftInputGhost
    841  f33f
    842  f33f							; Check Down Input
    843  f33f		       8a		      TXA
    844  f340		       29 02		      AND	#%00000010
    845  f342		       f0 1e		      BEQ	DownInputGhost
    846  f344
    847  f344							; Check Up Input
    848  f344		       8a		      TXA
    849  f345		       29 01		      AND	#%00000001
    850  f347		       f0 1e		      BEQ	UpInputGhost
    851  f349
    852  f349							; No Input Detected
    853  f349		       4c 69 f3 	      JMP	ControllerRetGhost
    854  f34c
    855  f34c				   RightInputGhost
    856  f34c		       e6 8a		      INC	GhostSpriteXPos
    857  f34e		       a9 08		      LDA	#%1000
    858  f350		       85 0c		      STA	REFP1
    859  f352		       85 95		      STA	GhostReflectedBuffer
    860  f354		       4c 69 f3 	      JMP	ControllerRetGhost
    861  f357
    862  f357				   LeftInputGhost
    863  f357		       c6 8a		      DEC	GhostSpriteXPos
    864  f359		       a9 00		      LDA	#0
    865  f35b		       85 0c		      STA	REFP1
    866  f35d		       85 95		      STA	GhostReflectedBuffer
    867  f35f		       4c 69 f3 	      JMP	ControllerRetGhost
    868  f362
    869  f362				   DownInputGhost
    870  f362		       c6 8b		      DEC	GhostSpriteYPos
    871  f364		       4c 69 f3 	      JMP	ControllerRetGhost
    872  f367
    873  f367				   UpInputGhost
    874  f367		       e6 8b		      INC	GhostSpriteYPos
    875  f369
    876  f369				   ControllerRetGhost
    877  f369		       60		      RTS
    878  f36a
    879  f36a							;==================================================================================
    880  f36a							; UpdateTimer
    881  f36a							;==================================================================================
    882  f36a
    883  f36a				   UpdateTimer
    884  f36a		       a5 93		      LDA	TimerCounter
    885  f36c		       c9 00		      CMP	#0
    886  f36e		       d0 07		      BNE	DidntReachLimit
    887  f370
    888  f370				   ReachedLimit
    889  f370		       a9 05		      LDA	#TIMER_LIMIT
    890  f372		       85 93		      STA	TimerCounter
    891  f374		       4c 79 f3 	      JMP	TimerRet
    892  f377
    893  f377				   DidntReachLimit
    894  f377		       c6 93		      DEC	TimerCounter
    895  f379
    896  f379				   TimerRet
    897  f379		       60		      RTS
    898  f37a
    899  f37a							;==================================================================================
    900  f37a							; UpdateScore
    901  f37a							;==================================================================================
    902  f37a
    903  f37a				   UpdateScore
    904  f37a							; Check If Timer == 0
    905  f37a		       a5 93		      LDA	TimerCounter
    906  f37c		       c9 00		      CMP	#0
    907  f37e		       d0 18		      BNE	NotYet10
    908  f380
    909  f380							; Increase Ones
    910  f380		       e6 8f		      INC	ScoreOnes
    911  f382
    912  f382							; Check if Ones reached 10
    913  f382		       a6 8f		      LDX	ScoreOnes
    914  f384		       e0 0a		      CPX	#10
    915  f386		       d0 10		      BNE	NotYet10
    916  f388
    917  f388				   OnesReached10
    918  f388							; Reset Ones and Increase Tens
    919  f388		       a2 00		      LDX	#0
    920  f38a		       86 8f		      STX	ScoreOnes
    921  f38c		       e6 8e		      INC	ScoreTens
    922  f38e
    923  f38e							; Check if Tens reached 10
    924  f38e		       a6 8e		      LDX	ScoreTens
    925  f390		       e0 0a		      CPX	#10
    926  f392		       d0 04		      BNE	NotYet10
    927  f394
    928  f394				   TensReached10
    929  f394							; Reset Tens
    930  f394		       a2 00		      LDX	#0
    931  f396		       86 8e		      STX	ScoreTens
    932  f398
    933  f398				   NotYet10
    934  f398		       60		      RTS
    935  f399
    936  f399							;==================================================================================
    937  f399							; Delay12 - Waste 12 cycles of CPU
    938  f399							;==================================================================================
    939  f399
    940  f399				   Delay12
    941  f399		       60		      RTS
    942  f39a
    943  f39a							;==================================================================================
    944  f39a							; MultBy20
    945  f39a							;==================================================================================
    946  f39a
    947  f39a				   MultBy20
    948  f39a		       00 14 28 3c*	      .byte.b	0,20,40,60,80,100,120,140,160,180,200
    949  f3a5
    950  f3a5							;==================================================================================
    951  f3a5							; Control Page Boundry
    952  f3a5							;==================================================================================
    953  f3a5
    954  f3a5		       00 01 02 03*	      .byte.b	0,1,2,3,4,5,6,7,8,9,10
    955  f3b0		       00 01		      .byte.b	0,1
    956  f3b2
    957  f3b2							;===============================================================================
    958  f3b2							; free space check before page boundry
    959  f3b2							;===============================================================================
    960  f3b2
 Start of Sprite0Data is:  $f3b2
    961  f3b2					      echo	"Start of Sprite0Data is: ", *
    962  f400		       00 00 00 00*	      align	256
    963  f400
    964  f400							;==================================================================================
    965  f400							; Sprite Data - Pacman
    966  f400							;==================================================================================
    967  f400
    968  f400				   Sprite0Data
    969  f400							; Frame 0
    970  f400		       00		      .byte.b	#%00000000
    971  f401		       00		      .byte.b	#%00000000
    972  f402		       18		      .byte.b	#%00011000
    973  f403		       18		      .byte.b	#%00011000
    974  f404		       7e		      .byte.b	#%01111110
    975  f405		       7e		      .byte.b	#%01111110
    976  f406		       3f		      .byte.b	#%00111111
    977  f407		       3f		      .byte.b	#%00111111
    978  f408		       0f		      .byte.b	#%00001111
    979  f409		       0f		      .byte.b	#%00001111
    980  f40a		       07		      .byte.b	#%00000111
    981  f40b		       07		      .byte.b	#%00000111
    982  f40c		       0f		      .byte.b	#%00001111
    983  f40d		       0f		      .byte.b	#%00001111
    984  f40e		       3f		      .byte.b	#%00111111
    985  f40f		       3f		      .byte.b	#%00111111
    986  f410		       7e		      .byte.b	#%01111110
    987  f411		       7e		      .byte.b	#%01111110
    988  f412		       18		      .byte.b	#%00011000
    989  f413		       18		      .byte.b	#%00011000
    990  f414		       00		      .byte.b	#%00000000
    991  f415		       00		      .byte.b	#%00000000
    992  f416
    993  f416				   Sprite1Data
    994  f416							; Frame 0
    995  f416		       00		      .byte.b	#%00000000
    996  f417		       00		      .byte.b	#%00000000
    997  f418		       18		      .byte.b	#%00011000
    998  f419		       18		      .byte.b	#%00011000
    999  f41a		       7e		      .byte.b	#%01111110
   1000  f41b		       7e		      .byte.b	#%01111110
   1001  f41c		       ff		      .byte.b	#%11111111
   1002  f41d		       ff		      .byte.b	#%11111111
   1003  f41e		       3f		      .byte.b	#%00111111
   1004  f41f		       3f		      .byte.b	#%00111111
   1005  f420		       0f		      .byte.b	#%00001111
   1006  f421		       0f		      .byte.b	#%00001111
   1007  f422		       3f		      .byte.b	#%00111111
   1008  f423		       3f		      .byte.b	#%00111111
   1009  f424		       ff		      .byte.b	#%11111111
   1010  f425		       ff		      .byte.b	#%11111111
   1011  f426		       7e		      .byte.b	#%01111110
   1012  f427		       7e		      .byte.b	#%01111110
   1013  f428		       18		      .byte.b	#%00011000
   1014  f429		       18		      .byte.b	#%00011000
   1015  f42a		       00		      .byte.b	#%00000000
   1016  f42b		       00		      .byte.b	#%00000000
   1017  f42c
   1018  f42c				   Sprite2Data
   1019  f42c							; Frame 1
   1020  f42c		       00		      .byte.b	#%00000000
   1021  f42d		       00		      .byte.b	#%00000000
   1022  f42e		       18		      .byte.b	#%00011000
   1023  f42f		       18		      .byte.b	#%00011000
   1024  f430		       7e		      .byte.b	#%01111110
   1025  f431		       7e		      .byte.b	#%01111110
   1026  f432		       ff		      .byte.b	#%11111111
   1027  f433		       ff		      .byte.b	#%11111111
   1028  f434		       ff		      .byte.b	#%11111111
   1029  f435		       ff		      .byte.b	#%11111111
   1030  f436		       0f		      .byte.b	#%00001111
   1031  f437		       0f		      .byte.b	#%00001111
   1032  f438		       ff		      .byte.b	#%11111111
   1033  f439		       ff		      .byte.b	#%11111111
   1034  f43a		       ff		      .byte.b	#%11111111
   1035  f43b		       ff		      .byte.b	#%11111111
   1036  f43c		       7e		      .byte.b	#%01111110
   1037  f43d		       7e		      .byte.b	#%01111110
   1038  f43e		       18		      .byte.b	#%00011000
   1039  f43f		       18		      .byte.b	#%00011000
   1040  f440		       00		      .byte.b	#%00000000
   1041  f441		       00		      .byte.b	#%00000000
   1042  f442
   1043  f442				   Sprite3Data
   1044  f442							; Frame 2
   1045  f442		       00		      .byte.b	#%00000000
   1046  f443		       00		      .byte.b	#%00000000
   1047  f444		       18		      .byte.b	#%00011000
   1048  f445		       18		      .byte.b	#%00011000
   1049  f446		       7e		      .byte.b	#%01111110
   1050  f447		       7e		      .byte.b	#%01111110
   1051  f448		       ff		      .byte.b	#%11111111
   1052  f449		       ff		      .byte.b	#%11111111
   1053  f44a		       ff		      .byte.b	#%11111111
   1054  f44b		       ff		      .byte.b	#%11111111
   1055  f44c		       ff		      .byte.b	#%11111111
   1056  f44d		       ff		      .byte.b	#%11111111
   1057  f44e		       ff		      .byte.b	#%11111111
   1058  f44f		       ff		      .byte.b	#%11111111
   1059  f450		       ff		      .byte.b	#%11111111
   1060  f451		       ff		      .byte.b	#%11111111
   1061  f452		       7e		      .byte.b	#%01111110
   1062  f453		       7e		      .byte.b	#%01111110
   1063  f454		       18		      .byte.b	#%00011000
   1064  f455		       18		      .byte.b	#%00011000
   1065  f456		       00		      .byte.b	#%00000000
   1066  f457		       00		      .byte.b	#%00000000
   1067  f458
   1068  f458							;==================================================================================
   1069  f458							; Sprite Data - Ghost
   1070  f458							;==================================================================================
   1071  f458
   1072  f458				   SpriteGhostData
   1073  f458		       00		      .byte.b	#%00000000
   1074  f459		       00		      .byte.b	#%00000000
   1075  f45a		       55		      .byte.b	#%01010101
   1076  f45b		       55		      .byte.b	#%01010101
   1077  f45c		       ff		      .byte.b	#%11111111
   1078  f45d		       ff		      .byte.b	#%11111111
   1079  f45e		       ff		      .byte.b	#%11111111
   1080  f45f		       ff		      .byte.b	#%11111111
   1081  f460		       ff		      .byte.b	#%11111111
   1082  f461		       99		      .byte.b	#%10011001
   1083  f462		       99		      .byte.b	#%10011001
   1084  f463		       bb		      .byte.b	#%10111011
   1085  f464		       bb		      .byte.b	#%10111011
   1086  f465		       ff		      .byte.b	#%11111111
   1087  f466		       7e		      .byte.b	#%01111110
   1088  f467		       7e		      .byte.b	#%01111110
   1089  f468		       7e		      .byte.b	#%01111110
   1090  f469		       7e		      .byte.b	#%01111110
   1091  f46a		       3c		      .byte.b	#%00111100
   1092  f46b		       3c		      .byte.b	#%00111100
   1093  f46c		       00		      .byte.b	#%00000000
   1094  f46d		       00		      .byte.b	#%00000000
   1095  f46e
   1096  f46e							;==================================================================================
   1097  f46e							; free space check before page boundry
   1098  f46e							;==================================================================================
   1099  f46e
 End of Sprite0Data is:  $f46e
   1100  f46e					      echo	"End of Sprite0Data is: ", *
   1101  f500		       00 00 00 00*	      align	256
   1102  f500
   1103  f500							;==================================================================================
   1104  f500							; Board Data
   1105  f500							;==================================================================================
   1106  f500
------- FILE MainBoard.asm LEVEL 2 PASS 2
      0  f500					      include	"MainBoard.asm"
      1  f500				   MainBoard
      2  f500
      3  f500				   MainBoard_STRIP_0
      4  f500		       50		      .byte.b	80
      5  f501		       00		      .byte.b	0
      6  f502		       f0		      .byte.b	240
      7  f503		       f0		      .byte.b	240
      8  f504		       f0		      .byte.b	240
      9  f505		       f0		      .byte.b	240
     10  f506		       10		      .byte.b	16
     11  f507		       10		      .byte.b	16
     12  f508		       10		      .byte.b	16
     13  f509		       10		      .byte.b	16
     14  f50a		       10		      .byte.b	16
     15  f50b		       10		      .byte.b	16
     16  f50c		       10		      .byte.b	16
     17  f50d		       10		      .byte.b	16
     18  f50e		       10		      .byte.b	16
     19  f50f		       10		      .byte.b	16
     20  f510		       10		      .byte.b	16
     21  f511		       10		      .byte.b	16
     22  f512		       10		      .byte.b	16
     23  f513		       10		      .byte.b	16
     24  f514		       10		      .byte.b	16
     25  f515		       10		      .byte.b	16
     26  f516		       10		      .byte.b	16
     27  f517		       10		      .byte.b	16
     28  f518		       10		      .byte.b	16
     29  f519		       10		      .byte.b	16
     30  f51a		       10		      .byte.b	16
     31  f51b		       10		      .byte.b	16
     32  f51c		       10		      .byte.b	16
     33  f51d		       10		      .byte.b	16
     34  f51e		       10		      .byte.b	16
     35  f51f		       10		      .byte.b	16
     36  f520		       10		      .byte.b	16
     37  f521		       10		      .byte.b	16
     38  f522		       10		      .byte.b	16
     39  f523		       10		      .byte.b	16
     40  f524		       10		      .byte.b	16
     41  f525		       10		      .byte.b	16
     42  f526		       10		      .byte.b	16
     43  f527		       10		      .byte.b	16
     44  f528		       10		      .byte.b	16
     45  f529		       10		      .byte.b	16
     46  f52a		       10		      .byte.b	16
     47  f52b		       10		      .byte.b	16
     48  f52c		       10		      .byte.b	16
     49  f52d		       10		      .byte.b	16
     50  f52e		       10		      .byte.b	16
     51  f52f		       10		      .byte.b	16
     52  f530		       10		      .byte.b	16
     53  f531		       10		      .byte.b	16
     54  f532		       10		      .byte.b	16
     55  f533		       10		      .byte.b	16
     56  f534		       10		      .byte.b	16
     57  f535		       10		      .byte.b	16
     58  f536		       10		      .byte.b	16
     59  f537		       10		      .byte.b	16
     60  f538		       10		      .byte.b	16
     61  f539		       10		      .byte.b	16
     62  f53a		       10		      .byte.b	16
     63  f53b		       10		      .byte.b	16
     64  f53c		       10		      .byte.b	16
     65  f53d		       10		      .byte.b	16
     66  f53e		       10		      .byte.b	16
     67  f53f		       10		      .byte.b	16
     68  f540		       10		      .byte.b	16
     69  f541		       10		      .byte.b	16
     70  f542		       10		      .byte.b	16
     71  f543		       10		      .byte.b	16
     72  f544		       10		      .byte.b	16
     73  f545		       10		      .byte.b	16
     74  f546		       10		      .byte.b	16
     75  f547		       10		      .byte.b	16
     76  f548		       10		      .byte.b	16
     77  f549		       10		      .byte.b	16
     78  f54a		       10		      .byte.b	16
     79  f54b		       10		      .byte.b	16
     80  f54c		       10		      .byte.b	16
     81  f54d		       10		      .byte.b	16
     82  f54e		       10		      .byte.b	16
     83  f54f		       10		      .byte.b	16
     84  f550		       10		      .byte.b	16
     85  f551		       10		      .byte.b	16
     86  f552		       10		      .byte.b	16
     87  f553		       10		      .byte.b	16
     88  f554		       10		      .byte.b	16
     89  f555		       10		      .byte.b	16
     90  f556		       10		      .byte.b	16
     91  f557		       10		      .byte.b	16
     92  f558		       10		      .byte.b	16
     93  f559		       10		      .byte.b	16
     94  f55a		       10		      .byte.b	16
     95  f55b		       10		      .byte.b	16
     96  f55c		       10		      .byte.b	16
     97  f55d		       10		      .byte.b	16
     98  f55e		       10		      .byte.b	16
     99  f55f		       10		      .byte.b	16
    100  f560		       f0		      .byte.b	240
    101  f561		       10		      .byte.b	16
    102  f562		       10		      .byte.b	16
    103  f563		       10		      .byte.b	16
    104  f564		       10		      .byte.b	16
    105  f565		       10		      .byte.b	16
    106  f566		       10		      .byte.b	16
    107  f567		       10		      .byte.b	16
    108  f568		       10		      .byte.b	16
    109  f569		       10		      .byte.b	16
    110  f56a		       10		      .byte.b	16
    111  f56b		       10		      .byte.b	16
    112  f56c		       10		      .byte.b	16
    113  f56d		       10		      .byte.b	16
    114  f56e		       10		      .byte.b	16
    115  f56f		       10		      .byte.b	16
    116  f570		       10		      .byte.b	16
    117  f571		       10		      .byte.b	16
    118  f572		       10		      .byte.b	16
    119  f573		       10		      .byte.b	16
    120  f574		       10		      .byte.b	16
    121  f575		       10		      .byte.b	16
    122  f576		       10		      .byte.b	16
    123  f577		       10		      .byte.b	16
    124  f578		       10		      .byte.b	16
    125  f579		       10		      .byte.b	16
    126  f57a		       10		      .byte.b	16
    127  f57b		       10		      .byte.b	16
    128  f57c		       10		      .byte.b	16
    129  f57d		       10		      .byte.b	16
    130  f57e		       10		      .byte.b	16
    131  f57f		       10		      .byte.b	16
    132  f580		       10		      .byte.b	16
    133  f581		       10		      .byte.b	16
    134  f582		       10		      .byte.b	16
    135  f583		       10		      .byte.b	16
    136  f584		       f0		      .byte.b	240
    137  f585		       10		      .byte.b	16
    138  f586		       10		      .byte.b	16
    139  f587		       10		      .byte.b	16
    140  f588		       10		      .byte.b	16
    141  f589		       10		      .byte.b	16
    142  f58a		       10		      .byte.b	16
    143  f58b		       10		      .byte.b	16
    144  f58c		       10		      .byte.b	16
    145  f58d		       10		      .byte.b	16
    146  f58e		       10		      .byte.b	16
    147  f58f		       10		      .byte.b	16
    148  f590		       10		      .byte.b	16
    149  f591		       10		      .byte.b	16
    150  f592		       10		      .byte.b	16
    151  f593		       10		      .byte.b	16
    152  f594		       10		      .byte.b	16
    153  f595		       10		      .byte.b	16
    154  f596		       10		      .byte.b	16
    155  f597		       10		      .byte.b	16
    156  f598		       10		      .byte.b	16
    157  f599		       10		      .byte.b	16
    158  f59a		       10		      .byte.b	16
    159  f59b		       10		      .byte.b	16
    160  f59c		       10		      .byte.b	16
    161  f59d		       10		      .byte.b	16
    162  f59e		       10		      .byte.b	16
    163  f59f		       f0		      .byte.b	240
    164  f5a0		       10		      .byte.b	16
    165  f5a1		       10		      .byte.b	16
    166  f5a2		       10		      .byte.b	16
    167  f5a3		       10		      .byte.b	16
    168  f5a4		       10		      .byte.b	16
    169  f5a5		       10		      .byte.b	16
    170  f5a6		       10		      .byte.b	16
    171  f5a7		       10		      .byte.b	16
    172  f5a8		       10		      .byte.b	16
    173  f5a9		       10		      .byte.b	16
    174  f5aa		       10		      .byte.b	16
    175  f5ab		       10		      .byte.b	16
    176  f5ac		       10		      .byte.b	16
    177  f5ad		       10		      .byte.b	16
    178  f5ae		       10		      .byte.b	16
    179  f5af		       10		      .byte.b	16
    180  f5b0		       10		      .byte.b	16
    181  f5b1		       10		      .byte.b	16
    182  f5b2		       10		      .byte.b	16
    183  f5b3		       10		      .byte.b	16
    184  f5b4		       10		      .byte.b	16
    185  f5b5		       10		      .byte.b	16
    186  f5b6		       10		      .byte.b	16
    187  f5b7		       10		      .byte.b	16
    188  f5b8		       10		      .byte.b	16
    189  f5b9		       10		      .byte.b	16
    190  f5ba		       f0		      .byte.b	240
    191  f5bb		       f0		      .byte.b	240
    192  f5bc		       f0		      .byte.b	240
    193  f5bd		       f0		      .byte.b	240
    194  f5be		       00		      .byte.b	0
    195  f5bf		       00		      .byte.b	0
    196  f5c0				   MainBoard_STRIP_1
    197  f5c0		       aa		      .byte.b	170
    198  f5c1		       00		      .byte.b	0
    199  f5c2		       ff		      .byte.b	255
    200  f5c3		       ff		      .byte.b	255
    201  f5c4		       ff		      .byte.b	255
    202  f5c5		       ff		      .byte.b	255
    203  f5c6		       10		      .byte.b	16
    204  f5c7		       10		      .byte.b	16
    205  f5c8		       10		      .byte.b	16
    206  f5c9		       10		      .byte.b	16
    207  f5ca		       10		      .byte.b	16
    208  f5cb		       10		      .byte.b	16
    209  f5cc		       10		      .byte.b	16
    210  f5cd		       10		      .byte.b	16
    211  f5ce		       10		      .byte.b	16
    212  f5cf		       10		      .byte.b	16
    213  f5d0		       10		      .byte.b	16
    214  f5d1		       10		      .byte.b	16
    215  f5d2		       10		      .byte.b	16
    216  f5d3		       10		      .byte.b	16
    217  f5d4		       10		      .byte.b	16
    218  f5d5		       10		      .byte.b	16
    219  f5d6		       10		      .byte.b	16
    220  f5d7		       10		      .byte.b	16
    221  f5d8		       10		      .byte.b	16
    222  f5d9		       10		      .byte.b	16
    223  f5da		       10		      .byte.b	16
    224  f5db		       10		      .byte.b	16
    225  f5dc		       10		      .byte.b	16
    226  f5dd		       10		      .byte.b	16
    227  f5de		       10		      .byte.b	16
    228  f5df		       10		      .byte.b	16
    229  f5e0		       10		      .byte.b	16
    230  f5e1		       10		      .byte.b	16
    231  f5e2		       10		      .byte.b	16
    232  f5e3		       10		      .byte.b	16
    233  f5e4		       10		      .byte.b	16
    234  f5e5		       10		      .byte.b	16
    235  f5e6		       10		      .byte.b	16
    236  f5e7		       10		      .byte.b	16
    237  f5e8		       10		      .byte.b	16
    238  f5e9		       10		      .byte.b	16
    239  f5ea		       10		      .byte.b	16
    240  f5eb		       10		      .byte.b	16
    241  f5ec		       10		      .byte.b	16
    242  f5ed		       10		      .byte.b	16
    243  f5ee		       10		      .byte.b	16
    244  f5ef		       10		      .byte.b	16
    245  f5f0		       10		      .byte.b	16
    246  f5f1		       10		      .byte.b	16
    247  f5f2		       10		      .byte.b	16
    248  f5f3		       10		      .byte.b	16
    249  f5f4		       10		      .byte.b	16
    250  f5f5		       10		      .byte.b	16
    251  f5f6		       10		      .byte.b	16
    252  f5f7		       10		      .byte.b	16
    253  f5f8		       10		      .byte.b	16
    254  f5f9		       10		      .byte.b	16
    255  f5fa		       10		      .byte.b	16
    256  f5fb		       10		      .byte.b	16
    257  f5fc		       10		      .byte.b	16
    258  f5fd		       10		      .byte.b	16
    259  f5fe		       10		      .byte.b	16
    260  f5ff		       10		      .byte.b	16
    261  f600		       10		      .byte.b	16
    262  f601		       10		      .byte.b	16
    263  f602		       10		      .byte.b	16
    264  f603		       10		      .byte.b	16
    265  f604		       10		      .byte.b	16
    266  f605		       10		      .byte.b	16
    267  f606		       10		      .byte.b	16
    268  f607		       10		      .byte.b	16
    269  f608		       10		      .byte.b	16
    270  f609		       10		      .byte.b	16
    271  f60a		       10		      .byte.b	16
    272  f60b		       10		      .byte.b	16
    273  f60c		       10		      .byte.b	16
    274  f60d		       10		      .byte.b	16
    275  f60e		       10		      .byte.b	16
    276  f60f		       10		      .byte.b	16
    277  f610		       10		      .byte.b	16
    278  f611		       10		      .byte.b	16
    279  f612		       10		      .byte.b	16
    280  f613		       10		      .byte.b	16
    281  f614		       10		      .byte.b	16
    282  f615		       10		      .byte.b	16
    283  f616		       10		      .byte.b	16
    284  f617		       10		      .byte.b	16
    285  f618		       10		      .byte.b	16
    286  f619		       10		      .byte.b	16
    287  f61a		       10		      .byte.b	16
    288  f61b		       10		      .byte.b	16
    289  f61c		       10		      .byte.b	16
    290  f61d		       10		      .byte.b	16
    291  f61e		       10		      .byte.b	16
    292  f61f		       10		      .byte.b	16
    293  f620		       ff		      .byte.b	255
    294  f621		       10		      .byte.b	16
    295  f622		       10		      .byte.b	16
    296  f623		       10		      .byte.b	16
    297  f624		       10		      .byte.b	16
    298  f625		       10		      .byte.b	16
    299  f626		       10		      .byte.b	16
    300  f627		       10		      .byte.b	16
    301  f628		       10		      .byte.b	16
    302  f629		       10		      .byte.b	16
    303  f62a		       10		      .byte.b	16
    304  f62b		       10		      .byte.b	16
    305  f62c		       10		      .byte.b	16
    306  f62d		       10		      .byte.b	16
    307  f62e		       10		      .byte.b	16
    308  f62f		       10		      .byte.b	16
    309  f630		       10		      .byte.b	16
    310  f631		       10		      .byte.b	16
    311  f632		       10		      .byte.b	16
    312  f633		       10		      .byte.b	16
    313  f634		       10		      .byte.b	16
    314  f635		       10		      .byte.b	16
    315  f636		       10		      .byte.b	16
    316  f637		       10		      .byte.b	16
    317  f638		       10		      .byte.b	16
    318  f639		       10		      .byte.b	16
    319  f63a		       10		      .byte.b	16
    320  f63b		       10		      .byte.b	16
    321  f63c		       10		      .byte.b	16
    322  f63d		       10		      .byte.b	16
    323  f63e		       10		      .byte.b	16
    324  f63f		       10		      .byte.b	16
    325  f640		       10		      .byte.b	16
    326  f641		       10		      .byte.b	16
    327  f642		       10		      .byte.b	16
    328  f643		       10		      .byte.b	16
    329  f644		       ff		      .byte.b	255
    330  f645		       10		      .byte.b	16
    331  f646		       10		      .byte.b	16
    332  f647		       10		      .byte.b	16
    333  f648		       10		      .byte.b	16
    334  f649		       10		      .byte.b	16
    335  f64a		       10		      .byte.b	16
    336  f64b		       10		      .byte.b	16
    337  f64c		       10		      .byte.b	16
    338  f64d		       10		      .byte.b	16
    339  f64e		       10		      .byte.b	16
    340  f64f		       10		      .byte.b	16
    341  f650		       10		      .byte.b	16
    342  f651		       10		      .byte.b	16
    343  f652		       10		      .byte.b	16
    344  f653		       10		      .byte.b	16
    345  f654		       10		      .byte.b	16
    346  f655		       10		      .byte.b	16
    347  f656		       10		      .byte.b	16
    348  f657		       10		      .byte.b	16
    349  f658		       10		      .byte.b	16
    350  f659		       10		      .byte.b	16
    351  f65a		       10		      .byte.b	16
    352  f65b		       10		      .byte.b	16
    353  f65c		       10		      .byte.b	16
    354  f65d		       10		      .byte.b	16
    355  f65e		       10		      .byte.b	16
    356  f65f		       ff		      .byte.b	255
    357  f660		       10		      .byte.b	16
    358  f661		       10		      .byte.b	16
    359  f662		       10		      .byte.b	16
    360  f663		       10		      .byte.b	16
    361  f664		       10		      .byte.b	16
    362  f665		       10		      .byte.b	16
    363  f666		       10		      .byte.b	16
    364  f667		       10		      .byte.b	16
    365  f668		       10		      .byte.b	16
    366  f669		       10		      .byte.b	16
    367  f66a		       10		      .byte.b	16
    368  f66b		       10		      .byte.b	16
    369  f66c		       10		      .byte.b	16
    370  f66d		       10		      .byte.b	16
    371  f66e		       10		      .byte.b	16
    372  f66f		       10		      .byte.b	16
    373  f670		       10		      .byte.b	16
    374  f671		       10		      .byte.b	16
    375  f672		       10		      .byte.b	16
    376  f673		       10		      .byte.b	16
    377  f674		       10		      .byte.b	16
    378  f675		       10		      .byte.b	16
    379  f676		       10		      .byte.b	16
    380  f677		       10		      .byte.b	16
    381  f678		       10		      .byte.b	16
    382  f679		       10		      .byte.b	16
    383  f67a		       ff		      .byte.b	255
    384  f67b		       ff		      .byte.b	255
    385  f67c		       ff		      .byte.b	255
    386  f67d		       ff		      .byte.b	255
    387  f67e		       00		      .byte.b	0
    388  f67f		       00		      .byte.b	0
    389  f680				   MainBoard_STRIP_2
    390  f680		       00		      .byte.b	0
    391  f681		       00		      .byte.b	0
    392  f682		       ff		      .byte.b	255
    393  f683		       ff		      .byte.b	255
    394  f684		       ff		      .byte.b	255
    395  f685		       ff		      .byte.b	255
    396  f686		       08		      .byte.b	8
    397  f687		       08		      .byte.b	8
    398  f688		       08		      .byte.b	8
    399  f689		       08		      .byte.b	8
    400  f68a		       08		      .byte.b	8
    401  f68b		       08		      .byte.b	8
    402  f68c		       08		      .byte.b	8
    403  f68d		       08		      .byte.b	8
    404  f68e		       08		      .byte.b	8
    405  f68f		       08		      .byte.b	8
    406  f690		       08		      .byte.b	8
    407  f691		       08		      .byte.b	8
    408  f692		       08		      .byte.b	8
    409  f693		       08		      .byte.b	8
    410  f694		       08		      .byte.b	8
    411  f695		       08		      .byte.b	8
    412  f696		       08		      .byte.b	8
    413  f697		       08		      .byte.b	8
    414  f698		       08		      .byte.b	8
    415  f699		       08		      .byte.b	8
    416  f69a		       08		      .byte.b	8
    417  f69b		       08		      .byte.b	8
    418  f69c		       08		      .byte.b	8
    419  f69d		       08		      .byte.b	8
    420  f69e		       08		      .byte.b	8
    421  f69f		       08		      .byte.b	8
    422  f6a0		       08		      .byte.b	8
    423  f6a1		       08		      .byte.b	8
    424  f6a2		       08		      .byte.b	8
    425  f6a3		       08		      .byte.b	8
    426  f6a4		       08		      .byte.b	8
    427  f6a5		       08		      .byte.b	8
    428  f6a6		       08		      .byte.b	8
    429  f6a7		       08		      .byte.b	8
    430  f6a8		       08		      .byte.b	8
    431  f6a9		       08		      .byte.b	8
    432  f6aa		       08		      .byte.b	8
    433  f6ab		       08		      .byte.b	8
    434  f6ac		       08		      .byte.b	8
    435  f6ad		       08		      .byte.b	8
    436  f6ae		       08		      .byte.b	8
    437  f6af		       08		      .byte.b	8
    438  f6b0		       08		      .byte.b	8
    439  f6b1		       08		      .byte.b	8
    440  f6b2		       08		      .byte.b	8
    441  f6b3		       08		      .byte.b	8
    442  f6b4		       08		      .byte.b	8
    443  f6b5		       08		      .byte.b	8
    444  f6b6		       08		      .byte.b	8
    445  f6b7		       08		      .byte.b	8
    446  f6b8		       08		      .byte.b	8
    447  f6b9		       08		      .byte.b	8
    448  f6ba		       08		      .byte.b	8
    449  f6bb		       08		      .byte.b	8
    450  f6bc		       08		      .byte.b	8
    451  f6bd		       08		      .byte.b	8
    452  f6be		       08		      .byte.b	8
    453  f6bf		       08		      .byte.b	8
    454  f6c0		       08		      .byte.b	8
    455  f6c1		       08		      .byte.b	8
    456  f6c2		       08		      .byte.b	8
    457  f6c3		       08		      .byte.b	8
    458  f6c4		       08		      .byte.b	8
    459  f6c5		       08		      .byte.b	8
    460  f6c6		       08		      .byte.b	8
    461  f6c7		       08		      .byte.b	8
    462  f6c8		       08		      .byte.b	8
    463  f6c9		       08		      .byte.b	8
    464  f6ca		       08		      .byte.b	8
    465  f6cb		       08		      .byte.b	8
    466  f6cc		       08		      .byte.b	8
    467  f6cd		       08		      .byte.b	8
    468  f6ce		       08		      .byte.b	8
    469  f6cf		       08		      .byte.b	8
    470  f6d0		       08		      .byte.b	8
    471  f6d1		       08		      .byte.b	8
    472  f6d2		       08		      .byte.b	8
    473  f6d3		       08		      .byte.b	8
    474  f6d4		       08		      .byte.b	8
    475  f6d5		       08		      .byte.b	8
    476  f6d6		       08		      .byte.b	8
    477  f6d7		       08		      .byte.b	8
    478  f6d8		       08		      .byte.b	8
    479  f6d9		       08		      .byte.b	8
    480  f6da		       08		      .byte.b	8
    481  f6db		       08		      .byte.b	8
    482  f6dc		       08		      .byte.b	8
    483  f6dd		       08		      .byte.b	8
    484  f6de		       08		      .byte.b	8
    485  f6df		       08		      .byte.b	8
    486  f6e0		       ff		      .byte.b	255
    487  f6e1		       08		      .byte.b	8
    488  f6e2		       08		      .byte.b	8
    489  f6e3		       08		      .byte.b	8
    490  f6e4		       08		      .byte.b	8
    491  f6e5		       08		      .byte.b	8
    492  f6e6		       08		      .byte.b	8
    493  f6e7		       08		      .byte.b	8
    494  f6e8		       08		      .byte.b	8
    495  f6e9		       08		      .byte.b	8
    496  f6ea		       08		      .byte.b	8
    497  f6eb		       08		      .byte.b	8
    498  f6ec		       08		      .byte.b	8
    499  f6ed		       08		      .byte.b	8
    500  f6ee		       08		      .byte.b	8
    501  f6ef		       08		      .byte.b	8
    502  f6f0		       08		      .byte.b	8
    503  f6f1		       08		      .byte.b	8
    504  f6f2		       08		      .byte.b	8
    505  f6f3		       08		      .byte.b	8
    506  f6f4		       08		      .byte.b	8
    507  f6f5		       08		      .byte.b	8
    508  f6f6		       08		      .byte.b	8
    509  f6f7		       08		      .byte.b	8
    510  f6f8		       08		      .byte.b	8
    511  f6f9		       08		      .byte.b	8
    512  f6fa		       08		      .byte.b	8
    513  f6fb		       08		      .byte.b	8
    514  f6fc		       08		      .byte.b	8
    515  f6fd		       08		      .byte.b	8
    516  f6fe		       08		      .byte.b	8
    517  f6ff		       08		      .byte.b	8
    518  f700		       08		      .byte.b	8
    519  f701		       08		      .byte.b	8
    520  f702		       08		      .byte.b	8
    521  f703		       08		      .byte.b	8
    522  f704		       ff		      .byte.b	255
    523  f705		       08		      .byte.b	8
    524  f706		       08		      .byte.b	8
    525  f707		       08		      .byte.b	8
    526  f708		       08		      .byte.b	8
    527  f709		       08		      .byte.b	8
    528  f70a		       08		      .byte.b	8
    529  f70b		       08		      .byte.b	8
    530  f70c		       08		      .byte.b	8
    531  f70d		       08		      .byte.b	8
    532  f70e		       08		      .byte.b	8
    533  f70f		       08		      .byte.b	8
    534  f710		       08		      .byte.b	8
    535  f711		       08		      .byte.b	8
    536  f712		       08		      .byte.b	8
    537  f713		       08		      .byte.b	8
    538  f714		       08		      .byte.b	8
    539  f715		       08		      .byte.b	8
    540  f716		       08		      .byte.b	8
    541  f717		       08		      .byte.b	8
    542  f718		       08		      .byte.b	8
    543  f719		       08		      .byte.b	8
    544  f71a		       08		      .byte.b	8
    545  f71b		       08		      .byte.b	8
    546  f71c		       08		      .byte.b	8
    547  f71d		       08		      .byte.b	8
    548  f71e		       08		      .byte.b	8
    549  f71f		       ff		      .byte.b	255
    550  f720		       08		      .byte.b	8
    551  f721		       08		      .byte.b	8
    552  f722		       08		      .byte.b	8
    553  f723		       08		      .byte.b	8
    554  f724		       08		      .byte.b	8
    555  f725		       08		      .byte.b	8
    556  f726		       08		      .byte.b	8
    557  f727		       08		      .byte.b	8
    558  f728		       08		      .byte.b	8
    559  f729		       08		      .byte.b	8
    560  f72a		       08		      .byte.b	8
    561  f72b		       08		      .byte.b	8
    562  f72c		       08		      .byte.b	8
    563  f72d		       08		      .byte.b	8
    564  f72e		       08		      .byte.b	8
    565  f72f		       08		      .byte.b	8
    566  f730		       08		      .byte.b	8
    567  f731		       08		      .byte.b	8
    568  f732		       08		      .byte.b	8
    569  f733		       08		      .byte.b	8
    570  f734		       08		      .byte.b	8
    571  f735		       08		      .byte.b	8
    572  f736		       08		      .byte.b	8
    573  f737		       08		      .byte.b	8
    574  f738		       08		      .byte.b	8
    575  f739		       08		      .byte.b	8
    576  f73a		       ff		      .byte.b	255
    577  f73b		       ff		      .byte.b	255
    578  f73c		       ff		      .byte.b	255
    579  f73d		       ff		      .byte.b	255
    580  f73e		       00		      .byte.b	0
    581  f73f		       00		      .byte.b	0
    582  f740				   MainBoard_STRIP_3
    583  f740		       00		      .byte.b	0
    584  f741		       00		      .byte.b	0
    585  f742		       f0		      .byte.b	240
    586  f743		       f0		      .byte.b	240
    587  f744		       f0		      .byte.b	240
    588  f745		       f0		      .byte.b	240
    589  f746		       80		      .byte.b	128
    590  f747		       80		      .byte.b	128
    591  f748		       80		      .byte.b	128
    592  f749		       80		      .byte.b	128
    593  f74a		       80		      .byte.b	128
    594  f74b		       80		      .byte.b	128
    595  f74c		       80		      .byte.b	128
    596  f74d		       80		      .byte.b	128
    597  f74e		       80		      .byte.b	128
    598  f74f		       80		      .byte.b	128
    599  f750		       80		      .byte.b	128
    600  f751		       80		      .byte.b	128
    601  f752		       80		      .byte.b	128
    602  f753		       80		      .byte.b	128
    603  f754		       80		      .byte.b	128
    604  f755		       80		      .byte.b	128
    605  f756		       80		      .byte.b	128
    606  f757		       80		      .byte.b	128
    607  f758		       80		      .byte.b	128
    608  f759		       80		      .byte.b	128
    609  f75a		       80		      .byte.b	128
    610  f75b		       80		      .byte.b	128
    611  f75c		       80		      .byte.b	128
    612  f75d		       80		      .byte.b	128
    613  f75e		       80		      .byte.b	128
    614  f75f		       80		      .byte.b	128
    615  f760		       80		      .byte.b	128
    616  f761		       80		      .byte.b	128
    617  f762		       80		      .byte.b	128
    618  f763		       80		      .byte.b	128
    619  f764		       80		      .byte.b	128
    620  f765		       80		      .byte.b	128
    621  f766		       80		      .byte.b	128
    622  f767		       80		      .byte.b	128
    623  f768		       80		      .byte.b	128
    624  f769		       80		      .byte.b	128
    625  f76a		       80		      .byte.b	128
    626  f76b		       80		      .byte.b	128
    627  f76c		       80		      .byte.b	128
    628  f76d		       80		      .byte.b	128
    629  f76e		       80		      .byte.b	128
    630  f76f		       80		      .byte.b	128
    631  f770		       80		      .byte.b	128
    632  f771		       80		      .byte.b	128
    633  f772		       80		      .byte.b	128
    634  f773		       80		      .byte.b	128
    635  f774		       80		      .byte.b	128
    636  f775		       80		      .byte.b	128
    637  f776		       80		      .byte.b	128
    638  f777		       80		      .byte.b	128
    639  f778		       80		      .byte.b	128
    640  f779		       80		      .byte.b	128
    641  f77a		       80		      .byte.b	128
    642  f77b		       80		      .byte.b	128
    643  f77c		       80		      .byte.b	128
    644  f77d		       80		      .byte.b	128
    645  f77e		       80		      .byte.b	128
    646  f77f		       80		      .byte.b	128
    647  f780		       80		      .byte.b	128
    648  f781		       80		      .byte.b	128
    649  f782		       80		      .byte.b	128
    650  f783		       80		      .byte.b	128
    651  f784		       80		      .byte.b	128
    652  f785		       80		      .byte.b	128
    653  f786		       80		      .byte.b	128
    654  f787		       80		      .byte.b	128
    655  f788		       80		      .byte.b	128
    656  f789		       80		      .byte.b	128
    657  f78a		       80		      .byte.b	128
    658  f78b		       80		      .byte.b	128
    659  f78c		       80		      .byte.b	128
    660  f78d		       80		      .byte.b	128
    661  f78e		       80		      .byte.b	128
    662  f78f		       80		      .byte.b	128
    663  f790		       80		      .byte.b	128
    664  f791		       80		      .byte.b	128
    665  f792		       80		      .byte.b	128
    666  f793		       80		      .byte.b	128
    667  f794		       80		      .byte.b	128
    668  f795		       80		      .byte.b	128
    669  f796		       80		      .byte.b	128
    670  f797		       80		      .byte.b	128
    671  f798		       80		      .byte.b	128
    672  f799		       80		      .byte.b	128
    673  f79a		       80		      .byte.b	128
    674  f79b		       80		      .byte.b	128
    675  f79c		       80		      .byte.b	128
    676  f79d		       80		      .byte.b	128
    677  f79e		       80		      .byte.b	128
    678  f79f		       80		      .byte.b	128
    679  f7a0		       f0		      .byte.b	240
    680  f7a1		       80		      .byte.b	128
    681  f7a2		       80		      .byte.b	128
    682  f7a3		       80		      .byte.b	128
    683  f7a4		       80		      .byte.b	128
    684  f7a5		       80		      .byte.b	128
    685  f7a6		       80		      .byte.b	128
    686  f7a7		       80		      .byte.b	128
    687  f7a8		       80		      .byte.b	128
    688  f7a9		       80		      .byte.b	128
    689  f7aa		       80		      .byte.b	128
    690  f7ab		       80		      .byte.b	128
    691  f7ac		       80		      .byte.b	128
    692  f7ad		       80		      .byte.b	128
    693  f7ae		       80		      .byte.b	128
    694  f7af		       80		      .byte.b	128
    695  f7b0		       80		      .byte.b	128
    696  f7b1		       80		      .byte.b	128
    697  f7b2		       80		      .byte.b	128
    698  f7b3		       80		      .byte.b	128
    699  f7b4		       80		      .byte.b	128
    700  f7b5		       80		      .byte.b	128
    701  f7b6		       80		      .byte.b	128
    702  f7b7		       80		      .byte.b	128
    703  f7b8		       80		      .byte.b	128
    704  f7b9		       80		      .byte.b	128
    705  f7ba		       80		      .byte.b	128
    706  f7bb		       80		      .byte.b	128
    707  f7bc		       80		      .byte.b	128
    708  f7bd		       80		      .byte.b	128
    709  f7be		       80		      .byte.b	128
    710  f7bf		       80		      .byte.b	128
    711  f7c0		       80		      .byte.b	128
    712  f7c1		       80		      .byte.b	128
    713  f7c2		       80		      .byte.b	128
    714  f7c3		       80		      .byte.b	128
    715  f7c4		       f0		      .byte.b	240
    716  f7c5		       80		      .byte.b	128
    717  f7c6		       80		      .byte.b	128
    718  f7c7		       80		      .byte.b	128
    719  f7c8		       80		      .byte.b	128
    720  f7c9		       80		      .byte.b	128
    721  f7ca		       80		      .byte.b	128
    722  f7cb		       80		      .byte.b	128
    723  f7cc		       80		      .byte.b	128
    724  f7cd		       80		      .byte.b	128
    725  f7ce		       80		      .byte.b	128
    726  f7cf		       80		      .byte.b	128
    727  f7d0		       80		      .byte.b	128
    728  f7d1		       80		      .byte.b	128
    729  f7d2		       80		      .byte.b	128
    730  f7d3		       80		      .byte.b	128
    731  f7d4		       80		      .byte.b	128
    732  f7d5		       80		      .byte.b	128
    733  f7d6		       80		      .byte.b	128
    734  f7d7		       80		      .byte.b	128
    735  f7d8		       80		      .byte.b	128
    736  f7d9		       80		      .byte.b	128
    737  f7da		       80		      .byte.b	128
    738  f7db		       80		      .byte.b	128
    739  f7dc		       80		      .byte.b	128
    740  f7dd		       80		      .byte.b	128
    741  f7de		       80		      .byte.b	128
    742  f7df		       f0		      .byte.b	240
    743  f7e0		       80		      .byte.b	128
    744  f7e1		       80		      .byte.b	128
    745  f7e2		       80		      .byte.b	128
    746  f7e3		       80		      .byte.b	128
    747  f7e4		       80		      .byte.b	128
    748  f7e5		       80		      .byte.b	128
    749  f7e6		       80		      .byte.b	128
    750  f7e7		       80		      .byte.b	128
    751  f7e8		       80		      .byte.b	128
    752  f7e9		       80		      .byte.b	128
    753  f7ea		       80		      .byte.b	128
    754  f7eb		       80		      .byte.b	128
    755  f7ec		       80		      .byte.b	128
    756  f7ed		       80		      .byte.b	128
    757  f7ee		       80		      .byte.b	128
    758  f7ef		       80		      .byte.b	128
    759  f7f0		       80		      .byte.b	128
    760  f7f1		       80		      .byte.b	128
    761  f7f2		       80		      .byte.b	128
    762  f7f3		       80		      .byte.b	128
    763  f7f4		       80		      .byte.b	128
    764  f7f5		       80		      .byte.b	128
    765  f7f6		       80		      .byte.b	128
    766  f7f7		       80		      .byte.b	128
    767  f7f8		       80		      .byte.b	128
    768  f7f9		       80		      .byte.b	128
    769  f7fa		       f0		      .byte.b	240
    770  f7fb		       f0		      .byte.b	240
    771  f7fc		       f0		      .byte.b	240
    772  f7fd		       f0		      .byte.b	240
    773  f7fe		       00		      .byte.b	0
    774  f7ff		       00		      .byte.b	0
    775  f800				   MainBoard_STRIP_4
    776  f800		       00		      .byte.b	0
    777  f801		       00		      .byte.b	0
    778  f802		       ff		      .byte.b	255
    779  f803		       ff		      .byte.b	255
    780  f804		       ff		      .byte.b	255
    781  f805		       ff		      .byte.b	255
    782  f806		       00		      .byte.b	0
    783  f807		       00		      .byte.b	0
    784  f808		       00		      .byte.b	0
    785  f809		       00		      .byte.b	0
    786  f80a		       00		      .byte.b	0
    787  f80b		       00		      .byte.b	0
    788  f80c		       00		      .byte.b	0
    789  f80d		       00		      .byte.b	0
    790  f80e		       00		      .byte.b	0
    791  f80f		       00		      .byte.b	0
    792  f810		       00		      .byte.b	0
    793  f811		       00		      .byte.b	0
    794  f812		       00		      .byte.b	0
    795  f813		       00		      .byte.b	0
    796  f814		       00		      .byte.b	0
    797  f815		       00		      .byte.b	0
    798  f816		       00		      .byte.b	0
    799  f817		       00		      .byte.b	0
    800  f818		       00		      .byte.b	0
    801  f819		       00		      .byte.b	0
    802  f81a		       00		      .byte.b	0
    803  f81b		       00		      .byte.b	0
    804  f81c		       00		      .byte.b	0
    805  f81d		       00		      .byte.b	0
    806  f81e		       00		      .byte.b	0
    807  f81f		       00		      .byte.b	0
    808  f820		       00		      .byte.b	0
    809  f821		       00		      .byte.b	0
    810  f822		       00		      .byte.b	0
    811  f823		       00		      .byte.b	0
    812  f824		       00		      .byte.b	0
    813  f825		       00		      .byte.b	0
    814  f826		       00		      .byte.b	0
    815  f827		       00		      .byte.b	0
    816  f828		       00		      .byte.b	0
    817  f829		       00		      .byte.b	0
    818  f82a		       00		      .byte.b	0
    819  f82b		       00		      .byte.b	0
    820  f82c		       00		      .byte.b	0
    821  f82d		       00		      .byte.b	0
    822  f82e		       00		      .byte.b	0
    823  f82f		       00		      .byte.b	0
    824  f830		       00		      .byte.b	0
    825  f831		       00		      .byte.b	0
    826  f832		       00		      .byte.b	0
    827  f833		       00		      .byte.b	0
    828  f834		       00		      .byte.b	0
    829  f835		       00		      .byte.b	0
    830  f836		       00		      .byte.b	0
    831  f837		       00		      .byte.b	0
    832  f838		       00		      .byte.b	0
    833  f839		       00		      .byte.b	0
    834  f83a		       00		      .byte.b	0
    835  f83b		       00		      .byte.b	0
    836  f83c		       00		      .byte.b	0
    837  f83d		       00		      .byte.b	0
    838  f83e		       00		      .byte.b	0
    839  f83f		       00		      .byte.b	0
    840  f840		       00		      .byte.b	0
    841  f841		       00		      .byte.b	0
    842  f842		       00		      .byte.b	0
    843  f843		       00		      .byte.b	0
    844  f844		       00		      .byte.b	0
    845  f845		       00		      .byte.b	0
    846  f846		       00		      .byte.b	0
    847  f847		       00		      .byte.b	0
    848  f848		       00		      .byte.b	0
    849  f849		       00		      .byte.b	0
    850  f84a		       00		      .byte.b	0
    851  f84b		       00		      .byte.b	0
    852  f84c		       00		      .byte.b	0
    853  f84d		       00		      .byte.b	0
    854  f84e		       00		      .byte.b	0
    855  f84f		       00		      .byte.b	0
    856  f850		       00		      .byte.b	0
    857  f851		       00		      .byte.b	0
    858  f852		       00		      .byte.b	0
    859  f853		       00		      .byte.b	0
    860  f854		       00		      .byte.b	0
    861  f855		       00		      .byte.b	0
    862  f856		       00		      .byte.b	0
    863  f857		       00		      .byte.b	0
    864  f858		       00		      .byte.b	0
    865  f859		       00		      .byte.b	0
    866  f85a		       00		      .byte.b	0
    867  f85b		       00		      .byte.b	0
    868  f85c		       00		      .byte.b	0
    869  f85d		       00		      .byte.b	0
    870  f85e		       00		      .byte.b	0
    871  f85f		       00		      .byte.b	0
    872  f860		       00		      .byte.b	0
    873  f861		       00		      .byte.b	0
    874  f862		       00		      .byte.b	0
    875  f863		       00		      .byte.b	0
    876  f864		       00		      .byte.b	0
    877  f865		       00		      .byte.b	0
    878  f866		       00		      .byte.b	0
    879  f867		       00		      .byte.b	0
    880  f868		       00		      .byte.b	0
    881  f869		       00		      .byte.b	0
    882  f86a		       00		      .byte.b	0
    883  f86b		       00		      .byte.b	0
    884  f86c		       00		      .byte.b	0
    885  f86d		       00		      .byte.b	0
    886  f86e		       00		      .byte.b	0
    887  f86f		       00		      .byte.b	0
    888  f870		       00		      .byte.b	0
    889  f871		       00		      .byte.b	0
    890  f872		       00		      .byte.b	0
    891  f873		       00		      .byte.b	0
    892  f874		       00		      .byte.b	0
    893  f875		       00		      .byte.b	0
    894  f876		       00		      .byte.b	0
    895  f877		       00		      .byte.b	0
    896  f878		       00		      .byte.b	0
    897  f879		       00		      .byte.b	0
    898  f87a		       00		      .byte.b	0
    899  f87b		       00		      .byte.b	0
    900  f87c		       00		      .byte.b	0
    901  f87d		       00		      .byte.b	0
    902  f87e		       00		      .byte.b	0
    903  f87f		       00		      .byte.b	0
    904  f880		       00		      .byte.b	0
    905  f881		       00		      .byte.b	0
    906  f882		       00		      .byte.b	0
    907  f883		       00		      .byte.b	0
    908  f884		       00		      .byte.b	0
    909  f885		       00		      .byte.b	0
    910  f886		       00		      .byte.b	0
    911  f887		       00		      .byte.b	0
    912  f888		       00		      .byte.b	0
    913  f889		       00		      .byte.b	0
    914  f88a		       00		      .byte.b	0
    915  f88b		       00		      .byte.b	0
    916  f88c		       00		      .byte.b	0
    917  f88d		       00		      .byte.b	0
    918  f88e		       00		      .byte.b	0
    919  f88f		       00		      .byte.b	0
    920  f890		       00		      .byte.b	0
    921  f891		       00		      .byte.b	0
    922  f892		       00		      .byte.b	0
    923  f893		       00		      .byte.b	0
    924  f894		       00		      .byte.b	0
    925  f895		       00		      .byte.b	0
    926  f896		       00		      .byte.b	0
    927  f897		       00		      .byte.b	0
    928  f898		       00		      .byte.b	0
    929  f899		       0f		      .byte.b	15
    930  f89a		       0f		      .byte.b	15
    931  f89b		       0f		      .byte.b	15
    932  f89c		       0f		      .byte.b	15
    933  f89d		       0f		      .byte.b	15
    934  f89e		       0f		      .byte.b	15
    935  f89f		       0f		      .byte.b	15
    936  f8a0		       00		      .byte.b	0
    937  f8a1		       00		      .byte.b	0
    938  f8a2		       00		      .byte.b	0
    939  f8a3		       00		      .byte.b	0
    940  f8a4		       00		      .byte.b	0
    941  f8a5		       00		      .byte.b	0
    942  f8a6		       00		      .byte.b	0
    943  f8a7		       00		      .byte.b	0
    944  f8a8		       00		      .byte.b	0
    945  f8a9		       00		      .byte.b	0
    946  f8aa		       00		      .byte.b	0
    947  f8ab		       00		      .byte.b	0
    948  f8ac		       00		      .byte.b	0
    949  f8ad		       00		      .byte.b	0
    950  f8ae		       00		      .byte.b	0
    951  f8af		       00		      .byte.b	0
    952  f8b0		       00		      .byte.b	0
    953  f8b1		       00		      .byte.b	0
    954  f8b2		       00		      .byte.b	0
    955  f8b3		       00		      .byte.b	0
    956  f8b4		       00		      .byte.b	0
    957  f8b5		       00		      .byte.b	0
    958  f8b6		       00		      .byte.b	0
    959  f8b7		       00		      .byte.b	0
    960  f8b8		       00		      .byte.b	0
    961  f8b9		       00		      .byte.b	0
    962  f8ba		       ff		      .byte.b	255
    963  f8bb		       ff		      .byte.b	255
    964  f8bc		       ff		      .byte.b	255
    965  f8bd		       ff		      .byte.b	255
    966  f8be		       00		      .byte.b	0
    967  f8bf		       00		      .byte.b	0
    968  f8c0				   MainBoard_STRIP_5
    969  f8c0		       00		      .byte.b	0
    970  f8c1		       00		      .byte.b	0
    971  f8c2		       ff		      .byte.b	255
    972  f8c3		       ff		      .byte.b	255
    973  f8c4		       ff		      .byte.b	255
    974  f8c5		       ff		      .byte.b	255
    975  f8c6		       80		      .byte.b	128
    976  f8c7		       80		      .byte.b	128
    977  f8c8		       80		      .byte.b	128
    978  f8c9		       80		      .byte.b	128
    979  f8ca		       80		      .byte.b	128
    980  f8cb		       80		      .byte.b	128
    981  f8cc		       80		      .byte.b	128
    982  f8cd		       80		      .byte.b	128
    983  f8ce		       80		      .byte.b	128
    984  f8cf		       80		      .byte.b	128
    985  f8d0		       c0		      .byte.b	192
    986  f8d1		       80		      .byte.b	128
    987  f8d2		       80		      .byte.b	128
    988  f8d3		       80		      .byte.b	128
    989  f8d4		       80		      .byte.b	128
    990  f8d5		       80		      .byte.b	128
    991  f8d6		       80		      .byte.b	128
    992  f8d7		       80		      .byte.b	128
    993  f8d8		       80		      .byte.b	128
    994  f8d9		       80		      .byte.b	128
    995  f8da		       c0		      .byte.b	192
    996  f8db		       80		      .byte.b	128
    997  f8dc		       80		      .byte.b	128
    998  f8dd		       80		      .byte.b	128
    999  f8de		       80		      .byte.b	128
   1000  f8df		       80		      .byte.b	128
   1001  f8e0		       80		      .byte.b	128
   1002  f8e1		       80		      .byte.b	128
   1003  f8e2		       80		      .byte.b	128
   1004  f8e3		       80		      .byte.b	128
   1005  f8e4		       c0		      .byte.b	192
   1006  f8e5		       80		      .byte.b	128
   1007  f8e6		       80		      .byte.b	128
   1008  f8e7		       80		      .byte.b	128
   1009  f8e8		       80		      .byte.b	128
   1010  f8e9		       80		      .byte.b	128
   1011  f8ea		       80		      .byte.b	128
   1012  f8eb		       80		      .byte.b	128
   1013  f8ec		       80		      .byte.b	128
   1014  f8ed		       80		      .byte.b	128
   1015  f8ee		       80		      .byte.b	128
   1016  f8ef		       80		      .byte.b	128
   1017  f8f0		       80		      .byte.b	128
   1018  f8f1		       80		      .byte.b	128
   1019  f8f2		       80		      .byte.b	128
   1020  f8f3		       ff		      .byte.b	255
   1021  f8f4		       ff		      .byte.b	255
   1022  f8f5		       ff		      .byte.b	255
   1023  f8f6		       ff		      .byte.b	255
   1024  f8f7		       01		      .byte.b	1
   1025  f8f8		       01		      .byte.b	1
   1026  f8f9		       01		      .byte.b	1
   1027  f8fa		       55		      .byte.b	85
   1028  f8fb		       55		      .byte.b	85
   1029  f8fc		       55		      .byte.b	85
   1030  f8fd		       01		      .byte.b	1
   1031  f8fe		       01		      .byte.b	1
   1032  f8ff		       01		      .byte.b	1
   1033  f900		       55		      .byte.b	85
   1034  f901		       55		      .byte.b	85
   1035  f902		       55		      .byte.b	85
   1036  f903		       01		      .byte.b	1
   1037  f904		       01		      .byte.b	1
   1038  f905		       01		      .byte.b	1
   1039  f906		       55		      .byte.b	85
   1040  f907		       55		      .byte.b	85
   1041  f908		       55		      .byte.b	85
   1042  f909		       01		      .byte.b	1
   1043  f90a		       01		      .byte.b	1
   1044  f90b		       01		      .byte.b	1
   1045  f90c		       55		      .byte.b	85
   1046  f90d		       55		      .byte.b	85
   1047  f90e		       55		      .byte.b	85
   1048  f90f		       01		      .byte.b	1
   1049  f910		       01		      .byte.b	1
   1050  f911		       01		      .byte.b	1
   1051  f912		       ff		      .byte.b	255
   1052  f913		       ff		      .byte.b	255
   1053  f914		       ff		      .byte.b	255
   1054  f915		       ff		      .byte.b	255
   1055  f916		       00		      .byte.b	0
   1056  f917		       00		      .byte.b	0
   1057  f918		       00		      .byte.b	0
   1058  f919		       00		      .byte.b	0
   1059  f91a		       00		      .byte.b	0
   1060  f91b		       1c		      .byte.b	28
   1061  f91c		       00		      .byte.b	0
   1062  f91d		       00		      .byte.b	0
   1063  f91e		       00		      .byte.b	0
   1064  f91f		       80		      .byte.b	128
   1065  f920		       08		      .byte.b	8
   1066  f921		       1c		      .byte.b	28
   1067  f922		       1c		      .byte.b	28
   1068  f923		       1c		      .byte.b	28
   1069  f924		       1c		      .byte.b	28
   1070  f925		       1c		      .byte.b	28
   1071  f926		       08		      .byte.b	8
   1072  f927		       00		      .byte.b	0
   1073  f928		       00		      .byte.b	0
   1074  f929		       80		      .byte.b	128
   1075  f92a		       00		      .byte.b	0
   1076  f92b		       1c		      .byte.b	28
   1077  f92c		       00		      .byte.b	0
   1078  f92d		       00		      .byte.b	0
   1079  f92e		       00		      .byte.b	0
   1080  f92f		       00		      .byte.b	0
   1081  f930		       f0		      .byte.b	240
   1082  f931		       f0		      .byte.b	240
   1083  f932		       f0		      .byte.b	240
   1084  f933		       f0		      .byte.b	240
   1085  f934		       10		      .byte.b	16
   1086  f935		       10		      .byte.b	16
   1087  f936		       10		      .byte.b	16
   1088  f937		       10		      .byte.b	16
   1089  f938		       50		      .byte.b	80
   1090  f939		       10		      .byte.b	16
   1091  f93a		       10		      .byte.b	16
   1092  f93b		       10		      .byte.b	16
   1093  f93c		       10		      .byte.b	16
   1094  f93d		       10		      .byte.b	16
   1095  f93e		       50		      .byte.b	80
   1096  f93f		       10		      .byte.b	16
   1097  f940		       10		      .byte.b	16
   1098  f941		       10		      .byte.b	16
   1099  f942		       10		      .byte.b	16
   1100  f943		       10		      .byte.b	16
   1101  f944		       f0		      .byte.b	240
   1102  f945		       80		      .byte.b	128
   1103  f946		       80		      .byte.b	128
   1104  f947		       80		      .byte.b	128
   1105  f948		       80		      .byte.b	128
   1106  f949		       80		      .byte.b	128
   1107  f94a		       80		      .byte.b	128
   1108  f94b		       00		      .byte.b	0
   1109  f94c		       80		      .byte.b	128
   1110  f94d		       80		      .byte.b	128
   1111  f94e		       80		      .byte.b	128
   1112  f94f		       80		      .byte.b	128
   1113  f950		       80		      .byte.b	128
   1114  f951		       80		      .byte.b	128
   1115  f952		       80		      .byte.b	128
   1116  f953		       80		      .byte.b	128
   1117  f954		       80		      .byte.b	128
   1118  f955		       00		      .byte.b	0
   1119  f956		       80		      .byte.b	128
   1120  f957		       80		      .byte.b	128
   1121  f958		       80		      .byte.b	128
   1122  f959		       87		      .byte.b	135
   1123  f95a		       87		      .byte.b	135
   1124  f95b		       87		      .byte.b	135
   1125  f95c		       87		      .byte.b	135
   1126  f95d		       87		      .byte.b	135
   1127  f95e		       87		      .byte.b	135
   1128  f95f		       87		      .byte.b	135
   1129  f960		       80		      .byte.b	128
   1130  f961		       80		      .byte.b	128
   1131  f962		       80		      .byte.b	128
   1132  f963		       80		      .byte.b	128
   1133  f964		       80		      .byte.b	128
   1134  f965		       80		      .byte.b	128
   1135  f966		       00		      .byte.b	0
   1136  f967		       80		      .byte.b	128
   1137  f968		       80		      .byte.b	128
   1138  f969		       80		      .byte.b	128
   1139  f96a		       80		      .byte.b	128
   1140  f96b		       80		      .byte.b	128
   1141  f96c		       80		      .byte.b	128
   1142  f96d		       80		      .byte.b	128
   1143  f96e		       80		      .byte.b	128
   1144  f96f		       80		      .byte.b	128
   1145  f970		       00		      .byte.b	0
   1146  f971		       80		      .byte.b	128
   1147  f972		       80		      .byte.b	128
   1148  f973		       80		      .byte.b	128
   1149  f974		       80		      .byte.b	128
   1150  f975		       80		      .byte.b	128
   1151  f976		       80		      .byte.b	128
   1152  f977		       80		      .byte.b	128
   1153  f978		       80		      .byte.b	128
   1154  f979		       80		      .byte.b	128
   1155  f97a		       ff		      .byte.b	255
   1156  f97b		       ff		      .byte.b	255
   1157  f97c		       ff		      .byte.b	255
   1158  f97d		       ff		      .byte.b	255
   1159  f97e		       00		      .byte.b	0
   1160  f97f		       00		      .byte.b	0
   1161  f980							;end
   1162  f980
------- FILE PacMan.asm
   1108  f980
   1109  f980							;===============================================================================
   1110  f980							; free space check before page boundry
   1111  f980							;===============================================================================
   1112  f980
 End of MainBoard.asm is:  $f980
   1113  f980					      echo	"End of MainBoard.asm is: ", *
   1114  fa00		       00 00 00 00*	      align	256
   1115  fa00
   1116  fa00							;==================================================================================
   1117  fa00							; Bottom Data
   1118  fa00							;==================================================================================
   1119  fa00
   1120  fa00				   BottomData
   1121  fa00
   1122  fa00							; 0
   1123  fa00		       00		      .byte.b	%00000000
   1124  fa01		       00		      .byte.b	%00000000
   1125  fa02		       00		      .byte.b	%00000000
   1126  fa03		       7e		      .byte.b	%01111110
   1127  fa04		       7e		      .byte.b	%01111110
   1128  fa05		       e7		      .byte.b	%11100111
   1129  fa06		       e7		      .byte.b	%11100111
   1130  fa07		       c3		      .byte.b	%11000011
   1131  fa08		       c3		      .byte.b	%11000011
   1132  fa09		       c3		      .byte.b	%11000011
   1133  fa0a		       c3		      .byte.b	%11000011
   1134  fa0b		       c3		      .byte.b	%11000011
   1135  fa0c		       c3		      .byte.b	%11000011
   1136  fa0d		       c3		      .byte.b	%11000011
   1137  fa0e		       c3		      .byte.b	%11000011
   1138  fa0f		       e7		      .byte.b	%11100111
   1139  fa10		       e7		      .byte.b	%11100111
   1140  fa11		       7e		      .byte.b	%01111110
   1141  fa12		       7e		      .byte.b	%01111110
   1142  fa13		       00		      .byte.b	%00000000
   1143  fa14
   1144  fa14							; 1
   1145  fa14		       00		      .byte.b	%00000000
   1146  fa15		       00		      .byte.b	%00000000
   1147  fa16		       00		      .byte.b	%00000000
   1148  fa17		       ff		      .byte.b	%11111111
   1149  fa18		       ff		      .byte.b	%11111111
   1150  fa19		       1c		      .byte.b	%00011100
   1151  fa1a		       1c		      .byte.b	%00011100
   1152  fa1b		       1c		      .byte.b	%00011100
   1153  fa1c		       1c		      .byte.b	%00011100
   1154  fa1d		       1c		      .byte.b	%00011100
   1155  fa1e		       1c		      .byte.b	%00011100
   1156  fa1f		       1c		      .byte.b	%00011100
   1157  fa20		       1c		      .byte.b	%00011100
   1158  fa21		       1c		      .byte.b	%00011100
   1159  fa22		       1c		      .byte.b	%00011100
   1160  fa23		       fc		      .byte.b	%11111100
   1161  fa24		       7c		      .byte.b	%01111100
   1162  fa25		       3c		      .byte.b	%00111100
   1163  fa26		       1c		      .byte.b	%00011100
   1164  fa27		       00		      .byte.b	%00000000
   1165  fa28
   1166  fa28							; 2
   1167  fa28		       00		      .byte.b	%00000000
   1168  fa29		       00		      .byte.b	%00000000
   1169  fa2a		       00		      .byte.b	%00000000
   1170  fa2b		       ff		      .byte.b	%11111111
   1171  fa2c		       ff		      .byte.b	%11111111
   1172  fa2d		       e0		      .byte.b	%11100000
   1173  fa2e		       e0		      .byte.b	%11100000
   1174  fa2f		       70		      .byte.b	%01110000
   1175  fa30		       38		      .byte.b	%00111000
   1176  fa31		       1c		      .byte.b	%00011100
   1177  fa32		       0e		      .byte.b	%00001110
   1178  fa33		       07		      .byte.b	%00000111
   1179  fa34		       03		      .byte.b	%00000011
   1180  fa35		       03		      .byte.b	%00000011
   1181  fa36		       c3		      .byte.b	%11000011
   1182  fa37		       c3		      .byte.b	%11000011
   1183  fa38		       e7		      .byte.b	%11100111
   1184  fa39		       7e		      .byte.b	%01111110
   1185  fa3a		       3c		      .byte.b	%00111100
   1186  fa3b		       00		      .byte.b	%00000000
   1187  fa3c
   1188  fa3c							; 3
   1189  fa3c		       00		      .byte.b	%00000000
   1190  fa3d		       00		      .byte.b	%00000000
   1191  fa3e		       00		      .byte.b	%00000000
   1192  fa3f		       3c		      .byte.b	%00111100
   1193  fa40		       7e		      .byte.b	%01111110
   1194  fa41		       ef		      .byte.b	%11101111
   1195  fa42		       c7		      .byte.b	%11000111
   1196  fa43		       07		      .byte.b	%00000111
   1197  fa44		       07		      .byte.b	%00000111
   1198  fa45		       0e		      .byte.b	%00001110
   1199  fa46		       1c		      .byte.b	%00011100
   1200  fa47		       1c		      .byte.b	%00011100
   1201  fa48		       0e		      .byte.b	%00001110
   1202  fa49		       07		      .byte.b	%00000111
   1203  fa4a		       07		      .byte.b	%00000111
   1204  fa4b		       c7		      .byte.b	%11000111
   1205  fa4c		       ef		      .byte.b	%11101111
   1206  fa4d		       7e		      .byte.b	%01111110
   1207  fa4e		       3c		      .byte.b	%00111100
   1208  fa4f		       00		      .byte.b	%00000000
   1209  fa50
   1210  fa50							; 4
   1211  fa50		       00		      .byte.b	%00000000
   1212  fa51		       00		      .byte.b	%00000000
   1213  fa52		       00		      .byte.b	%00000000
   1214  fa53		       06		      .byte.b	%00000110
   1215  fa54		       06		      .byte.b	%00000110
   1216  fa55		       06		      .byte.b	%00000110
   1217  fa56		       06		      .byte.b	%00000110
   1218  fa57		       ff		      .byte.b	%11111111
   1219  fa58		       ff		      .byte.b	%11111111
   1220  fa59		       c6		      .byte.b	%11000110
   1221  fa5a		       c6		      .byte.b	%11000110
   1222  fa5b		       66		      .byte.b	%01100110
   1223  fa5c		       66		      .byte.b	%01100110
   1224  fa5d		       36		      .byte.b	%00110110
   1225  fa5e		       36		      .byte.b	%00110110
   1226  fa5f		       1e		      .byte.b	%00011110
   1227  fa60		       1e		      .byte.b	%00011110
   1228  fa61		       0e		      .byte.b	%00001110
   1229  fa62		       0e		      .byte.b	%00001110
   1230  fa63		       00		      .byte.b	%00000000
   1231  fa64
   1232  fa64							; 5
   1233  fa64		       00		      .byte.b	%00000000
   1234  fa65		       00		      .byte.b	%00000000
   1235  fa66		       00		      .byte.b	%00000000
   1236  fa67		       f8		      .byte.b	%11111000
   1237  fa68		       fc		      .byte.b	%11111100
   1238  fa69		       fe		      .byte.b	%11111110
   1239  fa6a		       0f		      .byte.b	%00001111
   1240  fa6b		       07		      .byte.b	%00000111
   1241  fa6c		       07		      .byte.b	%00000111
   1242  fa6d		       07		      .byte.b	%00000111
   1243  fa6e		       0f		      .byte.b	%00001111
   1244  fa6f		       fe		      .byte.b	%11111110
   1245  fa70		       fc		      .byte.b	%11111100
   1246  fa71		       e0		      .byte.b	%11100000
   1247  fa72		       e0		      .byte.b	%11100000
   1248  fa73		       e0		      .byte.b	%11100000
   1249  fa74		       e0		      .byte.b	%11100000
   1250  fa75		       ff		      .byte.b	%11111111
   1251  fa76		       ff		      .byte.b	%11111111
   1252  fa77		       00		      .byte.b	%00000000
   1253  fa78
   1254  fa78							; 6
   1255  fa78		       00		      .byte.b	%00000000
   1256  fa79		       00		      .byte.b	%00000000
   1257  fa7a		       00		      .byte.b	%00000000
   1258  fa7b		       3c		      .byte.b	%00111100
   1259  fa7c		       7e		      .byte.b	%01111110
   1260  fa7d		       e7		      .byte.b	%11100111
   1261  fa7e		       c3		      .byte.b	%11000011
   1262  fa7f		       c3		      .byte.b	%11000011
   1263  fa80		       c3		      .byte.b	%11000011
   1264  fa81		       e7		      .byte.b	%11100111
   1265  fa82		       fe		      .byte.b	%11111110
   1266  fa83		       fc		      .byte.b	%11111100
   1267  fa84		       c0		      .byte.b	%11000000
   1268  fa85		       c0		      .byte.b	%11000000
   1269  fa86		       c0		      .byte.b	%11000000
   1270  fa87		       c3		      .byte.b	%11000011
   1271  fa88		       e7		      .byte.b	%11100111
   1272  fa89		       7f		      .byte.b	%01111111
   1273  fa8a		       3e		      .byte.b	%00111110
   1274  fa8b		       00		      .byte.b	%00000000
   1275  fa8c
   1276  fa8c							; 7
   1277  fa8c		       00		      .byte.b	%00000000
   1278  fa8d		       00		      .byte.b	%00000000
   1279  fa8e		       00		      .byte.b	%00000000
   1280  fa8f		       18		      .byte.b	%00011000
   1281  fa90		       18		      .byte.b	%00011000
   1282  fa91		       18		      .byte.b	%00011000
   1283  fa92		       18		      .byte.b	%00011000
   1284  fa93		       18		      .byte.b	%00011000
   1285  fa94		       18		      .byte.b	%00011000
   1286  fa95		       18		      .byte.b	%00011000
   1287  fa96		       18		      .byte.b	%00011000
   1288  fa97		       0c		      .byte.b	%00001100
   1289  fa98		       0c		      .byte.b	%00001100
   1290  fa99		       0c		      .byte.b	%00001100
   1291  fa9a		       c6		      .byte.b	%11000110
   1292  fa9b		       c7		      .byte.b	%11000111
   1293  fa9c		       ff		      .byte.b	%11111111
   1294  fa9d		       ff		      .byte.b	%11111111
   1295  fa9e		       ff		      .byte.b	%11111111
   1296  fa9f		       00		      .byte.b	%00000000
   1297  faa0
   1298  faa0							; 8
   1299  faa0		       00		      .byte.b	%00000000
   1300  faa1		       00		      .byte.b	%00000000
   1301  faa2		       00		      .byte.b	%00000000
   1302  faa3		       3c		      .byte.b	%00111100
   1303  faa4		       7e		      .byte.b	%01111110
   1304  faa5		       e7		      .byte.b	%11100111
   1305  faa6		       c3		      .byte.b	%11000011
   1306  faa7		       c3		      .byte.b	%11000011
   1307  faa8		       c3		      .byte.b	%11000011
   1308  faa9		       e7		      .byte.b	%11100111
   1309  faaa		       7e		      .byte.b	%01111110
   1310  faab		       3c		      .byte.b	%00111100
   1311  faac		       66		      .byte.b	%01100110
   1312  faad		       c3		      .byte.b	%11000011
   1313  faae		       c3		      .byte.b	%11000011
   1314  faaf		       c3		      .byte.b	%11000011
   1315  fab0		       e7		      .byte.b	%11100111
   1316  fab1		       7e		      .byte.b	%01111110
   1317  fab2		       3c		      .byte.b	%00111100
   1318  fab3		       00		      .byte.b	%00000000
   1319  fab4
   1320  fab4							; 9
   1321  fab4		       00		      .byte.b	%00000000
   1322  fab5		       00		      .byte.b	%00000000
   1323  fab6		       00		      .byte.b	%00000000
   1324  fab7		       3c		      .byte.b	%00111100
   1325  fab8		       7e		      .byte.b	%01111110
   1326  fab9		       e7		      .byte.b	%11100111
   1327  faba		       c3		      .byte.b	%11000011
   1328  fabb		       03		      .byte.b	%00000011
   1329  fabc		       03		      .byte.b	%00000011
   1330  fabd		       03		      .byte.b	%00000011
   1331  fabe		       3f		      .byte.b	%00111111
   1332  fabf		       7f		      .byte.b	%01111111
   1333  fac0		       e7		      .byte.b	%11100111
   1334  fac1		       c3		      .byte.b	%11000011
   1335  fac2		       c3		      .byte.b	%11000011
   1336  fac3		       c3		      .byte.b	%11000011
   1337  fac4		       e7		      .byte.b	%11100111
   1338  fac5		       fe		      .byte.b	%11111110
   1339  fac6		       7c		      .byte.b	%01111100
   1340  fac7		       00		      .byte.b	%00000000
   1341  fac8		       00		      .byte.b	%00000000
   1342  fac9
   1343  fac9							;==================================================================================
   1344  fac9							; Interrupt Routines
   1345  fac9							;==================================================================================
   1346  fac9
   1347  10000 ????				       SEG	Interrupt
   1348  fffa					      ORG	$FFFA
   1349  fffa
   1350  fffa				   InterruptVectors
   1351  fffa		       00 f0		      .word.w	Reset
   1352  fffc		       00 f0		      .word.w	Reset
   1353  fffe		       00 f0		      .word.w	Reset
   1354  10000
   1355  10000					       END
