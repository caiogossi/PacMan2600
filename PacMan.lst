------- FILE PacMan.asm LEVEL 1 PASS 2
      1  10000					       processor	6502
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       include	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.06, 06/SEP/2020
      3  10000 ????
      4  10000 ????		00 6a	    VERSION_VCS =	106
      5  10000 ????
      6  10000 ????						; THIS IS *THE* "STANDARD" VCS.H
      7  10000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  10000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  10000 ????						;
     10  10000 ????						; This file defines hardware registers and memory mapping for the
     11  10000 ????						; Atari 2600. It is distributed as a companion machine-specific support package
     12  10000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  10000 ????						; available at at https://dasm-assembler.github.io/
     14  10000 ????						;
     15  10000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     16  10000 ????						; contents, or would like ot add something, please report as an issue at...
     17  10000 ????						; https://github.com/dasm-assembler/dasm/issues
     18  10000 ????
     19  10000 ????						;
     20  10000 ????						; Latest Revisions...
     21  10000 ????						; 1.06  05/SEP/2020	 Modified header/license and links to new versions
     22  10000 ????						; 1.05  13/NOV/2003	  - Correction to 1.04 - now functions as requested by MR.
     23  10000 ????						;			  - Added VERSION_VCS equate (which will reflect 100x version #)
     24  10000 ????						;			    This will allow conditional code to verify VCS.H being
     25  10000 ????						;			    used for code assembly.
     26  10000 ????						; 1.04  12/NOV/2003	 Added TIA_BASE_WRITE_ADDRESS and TIA_BASE_READ_ADDRESS for
     27  10000 ????						;			 convenient disassembly/reassembly compatibility for hardware
     28  10000 ????						;			 mirrored reading/writing differences.	This is more a 
     29  10000 ????						;			 readability issue, and binary compatibility with disassembled
     30  10000 ????						;			 and reassembled sources.  Per Manuel Rotschkar's suggestion.
     31  10000 ????						; 1.03  12/MAY/2003	 Added SEG segment at end of file to fix old-code compatibility
     32  10000 ????						;			 which was broken by the use of segments in this file, as
     33  10000 ????						;			 reported by Manuel Polik on [stella] 11/MAY/2003
     34  10000 ????						; 1.02  22/MAR/2003	 Added TIMINT($285)
     35  10000 ????						; 1.01				Constant offset added to allow use for 3F-style bankswitching
     36  10000 ????						;						 - define TIA_BASE_ADDRESS as $40 for Tigervision carts, otherwise
     37  10000 ????						;						   it is safe to leave it undefined, and the base address will
     38  10000 ????						;						   be set to 0.  Thanks to Eckhard Stolberg for the suggestion.
     39  10000 ????						;			    Note, may use -DLABEL=EXPRESSION to define TIA_BASE_ADDRESS
     40  10000 ????						;			  - register definitions are now generated through assignment
     41  10000 ????						;			    in uninitialised segments.	This allows a changeable base
     42  10000 ????						;			    address architecture.
     43  10000 ????						; 1.0	22/MAR/2003		Initial release
     44  10000 ????
     45  10000 ????
     46  10000 ????						;-------------------------------------------------------------------------------
     47  10000 ????
     48  10000 ????						; TIA_BASE_ADDRESS
     49  10000 ????						; The TIA_BASE_ADDRESS defines the base address of access to TIA registers.
     50  10000 ????						; Normally 0, the base address should (externally, before including this file)
     51  10000 ????						; be set to $40 when creating 3F-bankswitched (and other?) cartridges.
     52  10000 ????						; The reason is that this bankswitching scheme treats any access to locations
     53  10000 ????						; < $40 as a bankswitch.
     54  10000 ????
     55  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
     56  10000 ????			   -TIA_BASE_ADDRESS =	0
     57  10000 ????				       ENDIF
     58  10000 ????
     59  10000 ????						; Note: The address may be defined on the command-line using the -D switch, eg:
     60  10000 ????						; dasm.exe code.asm -DTIA_BASE_ADDRESS=$40 -f3 -v5 -ocode.bin
     61  10000 ????						; *OR* by declaring the label before including this file, eg:
     62  10000 ????						; TIA_BASE_ADDRESS = $40
     63  10000 ????						;   include "vcs.h"
     64  10000 ????
     65  10000 ????						; Alternate read/write address capability - allows for some disassembly compatibility
     66  10000 ????						; usage ; to allow reassembly to binary perfect copies).  This is essentially catering
     67  10000 ????						; for the mirrored ROM hardware registers.
     68  10000 ????
     69  10000 ????						; Usage: As per above, define the TIA_BASE_READ_ADDRESS and/or TIA_BASE_WRITE_ADDRESS
     70  10000 ????						; using the -D command-line switch, as required.  If the addresses are not defined, 
     71  10000 ????						; they defaut to the TIA_BASE_ADDRESS.
     72  10000 ????
     73  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     74  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     75  10000 ????				       ENDIF
     76  10000 ????
     77  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     78  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     79  10000 ????				       ENDIF
     80  10000 ????
     81  10000 ????						;-------------------------------------------------------------------------------
     82  10000 ????
     83 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     84 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     85 U0000
     86 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     87 U0000
     88 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     89 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     90 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     91 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     92 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     93 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     94 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     95 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     96 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     97 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     98 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     99 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
    100 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
    101 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
    102 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
    103 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
    104 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
    105 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
    106 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
    107 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
    108 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
    109 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
    110 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
    111 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
    112 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
    113 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
    114 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
    115 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
    116 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
    117 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
    118 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
    119 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
    120 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
    121 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
    122 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
    123 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
    124 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
    125 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
    126 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
    127 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
    128 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
    129 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
    130 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
    131 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
    132 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
    133 U002d
    134 U002d							;-------------------------------------------------------------------------------
    135 U002d
    136 U000e ????				      SEG.U	TIA_REGISTERS_READ
    137 U0000					      ORG	TIA_BASE_READ_ADDRESS
    138 U0000
    139 U0000							;											bit 7	 bit 6
    140 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
    141 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
    142 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
    143 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
    144 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
    145 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
    146 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
    147 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
    148 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
    149 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
    150 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
    151 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
    152 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
    153 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
    154 U000e
    155 U000e							;-------------------------------------------------------------------------------
    156 U000e
    157 U0298 ????				      SEG.U	RIOT
    158 U0280					      ORG	$280
    159 U0280
    160 U0280							; RIOT MEMORY MAP
    161 U0280
    162 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    163 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    164 U0281
    165 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    166 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    167 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    168 U0284		       00	   INTIM      ds	1	; $284		Timer output
    169 U0285
    170 U0285		       00	   TIMINT     ds	1	; $285
    171 U0286
    172 U0286							; Unused/undefined registers ($285-$294)
    173 U0286
    174 U0286		       00		      ds	1	; $286
    175 U0287		       00		      ds	1	; $287
    176 U0288		       00		      ds	1	; $288
    177 U0289		       00		      ds	1	; $289
    178 U028a		       00		      ds	1	; $28A
    179 U028b		       00		      ds	1	; $28B
    180 U028c		       00		      ds	1	; $28C
    181 U028d		       00		      ds	1	; $28D
    182 U028e		       00		      ds	1	; $28E
    183 U028f		       00		      ds	1	; $28F
    184 U0290		       00		      ds	1	; $290
    185 U0291		       00		      ds	1	; $291
    186 U0292		       00		      ds	1	; $292
    187 U0293		       00		      ds	1	; $293
    188 U0294
    189 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    190 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    191 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    192 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    193 U0298
    194 U0298							;-------------------------------------------------------------------------------
    195 U0298							; The following required for back-compatibility with code which does not use
    196 U0298							; segments.
    197 U0298
    198  0000 ????				      SEG
    199  0000 ????
    200  0000 ????						; EOF
------- FILE PacMan.asm
------- FILE macro.h LEVEL 2 PASS 2
      0  0000 ????				      include	"macro.h"
      1  0000 ????						; MACRO.H
      2  0000 ????						; Version 1.09, 05/SEP/2020
      3  0000 ????
      4  0000 ????	       00 6d	   VERSION_MACRO =	109
      5  0000 ????
      6  0000 ????						;
      7  0000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  0000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  0000 ????						;
     10  0000 ????						; This file defines DASM macros useful for development for the Atari 2600.
     11  0000 ????						; It is distributed as a companion machine-specific support package
     12  0000 ????						; for the DASM compiler.
     13  0000 ????						;
     14  0000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     15  0000 ????						; contents, or would like ot add something, please report as an issue at...
     16  0000 ????						; https://github.com/dasm-assembler/dasm/issues
     17  0000 ????
     18  0000 ????
     19  0000 ????						; Latest Revisions...
     20  0000 ????						; 1.09  05/SEP/2020	 - updated license/links
     21  0000 ????
     22  0000 ????						; 1.08  13/JUL/2020	 - added use of LXA to CLEAN_START
     23  0000 ????						; 1.07  19/JAN/2020	 - correction to comment VERTICAL_SYNC
     24  0000 ????						; 1.06  03/SEP/2004	 - nice revision of VERTICAL_SYNC (Edwin Blink)
     25  0000 ????						; 1.05  14/NOV/2003	 - Added VERSION_MACRO equate (which will reflect 100x version #)
     26  0000 ????						;			   This will allow conditional code to verify MACRO.H being
     27  0000 ????						;			   used for code assembly.
     28  0000 ????						; 1.04  13/NOV/2003	 - SET_POINTER macro added (16-bit address load)
     29  0000 ????						;
     30  0000 ????						; 1.03  23/JUN/2003	 - CLEAN_START macro added - clears TIA, RAM, registers
     31  0000 ????						;
     32  0000 ????						; 1.02  14/JUN/2003	 - VERTICAL_SYNC macro added
     33  0000 ????						;			   (standardised macro for vertical synch code)
     34  0000 ????						; 1.01  22/MAR/2003	 - SLEEP macro added. 
     35  0000 ????						;			 - NO_ILLEGAL_OPCODES switch implemented
     36  0000 ????						; 1.0	22/MAR/2003		Initial release
     37  0000 ????
     38  0000 ????						; Note: These macros use illegal opcodes.  To disable illegal opcode usage, 
     39  0000 ????						;   define the symbol NO_ILLEGAL_OPCODES (-DNO_ILLEGAL_OPCODES=1 on command-line).
     40  0000 ????						;   If you do not allow illegal opcode usage, you must include this file 
     41  0000 ????						;   *after* including VCS.H (as the non-illegal opcodes access hardware
     42  0000 ????						;   registers and require them to be defined first).
     43  0000 ????
     44  0000 ????						; Available macros...
     45  0000 ????						;   SLEEP n		 - sleep for n cycles
     46  0000 ????						;   VERTICAL_SYNC	 - correct 3 scanline vertical synch code
     47  0000 ????						;   CLEAN_START	 - set machine to known state on startup
     48  0000 ????						;   SET_POINTER	 - load a 16-bit absolute to a 16-bit variable
     49  0000 ????
     50  0000 ????						;-------------------------------------------------------------------------------
     51  0000 ????						; SLEEP duration
     52  0000 ????						; Original author: Thomas Jentzsch
     53  0000 ????						; Inserts code which takes the specified number of cycles to execute.	This is
     54  0000 ????						; useful for code where precise timing is required.
     55  0000 ????						; ILLEGAL-OPCODE VERSION DOES NOT AFFECT FLAGS OR REGISTERS.
     56  0000 ????						; LEGAL OPCODE VERSION MAY AFFECT FLAGS
     57  0000 ????						; Uses illegal opcode (DASM 2.20.01 onwards).
     58  0000 ????
     59  0000 ????				      MAC	sleep
     60  0000 ????			   .CYCLES    SET	{1}
     61  0000 ????
     62  0000 ????				      IF	.CYCLES < 2
     63  0000 ????				      ECHO	"MACRO ERROR: 'SLEEP': Duration must be > 1"
     64  0000 ????				      ERR
     65  0000 ????				      ENDIF
     66  0000 ????
     67  0000 ????				      IF	.CYCLES & 1
     68  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
     69  0000 ????				      nop	0
     70  0000 ????				      ELSE
     71  0000 ????				      bit	VSYNC
     72  0000 ????				      ENDIF
     73  0000 ????			   .CYCLES    SET	.CYCLES - 3
     74  0000 ????				      ENDIF
     75  0000 ????
     76  0000 ????				      REPEAT	.CYCLES / 2
     77  0000 ????				      nop
     78  0000 ????				      REPEND
     79  0000 ????				      ENDM		;usage: SLEEP n (n>1)
     80  0000 ????
     81  0000 ????						;-------------------------------------------------------------------------------
     82  0000 ????						; VERTICAL_SYNC
     83  0000 ????						; revised version by Edwin Blink -- saves bytes!
     84  0000 ????						; Inserts the code required for a proper 3 scanline vertical sync sequence
     85  0000 ????						; Note: Alters the accumulator
     86  0000 ????
     87  0000 ????						; OUT: A = 0
     88  0000 ????
     89  0000 ????				      MAC	vertical_sync
     90  0000 ????				      lda	#%1110	; each '1' bits generate a VSYNC ON line (bits 1..3)
     91  0000 ????			   .VSLP1     sta	WSYNC	; 1st '0' bit resets Vsync, 2nd '0' bit exit loop
     92  0000 ????				      sta	VSYNC
     93  0000 ????				      lsr
     94  0000 ????				      bne	.VSLP1	; branch until VYSNC has been reset
     95  0000 ????				      ENDM
     96  0000 ????
     97  0000 ????						;-------------------------------------------------------------------------------
     98  0000 ????						; CLEAN_START
     99  0000 ????						; Original author: Andrew Davie
    100  0000 ????						; Standardised start-up code, clears stack, all TIA registers and RAM to 0
    101  0000 ????						; Sets stack pointer to $FF, and all registers to 0
    102  0000 ????						; Sets decimal mode off, sets interrupt flag (kind of un-necessary)
    103  0000 ????						; Use as very first section of code on boot (ie: at reset)
    104  0000 ????						; Code written to minimise total ROM usage - uses weird 6502 knowledge :)
    105  0000 ????
    106  0000 ????				      MAC	clean_start
    107  0000 ????				      sei
    108  0000 ????				      cld
    109  0000 ????
    110  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
    111  0000 ????				      lxa	#0
    112  0000 ????				      ELSE
    113  0000 ????				      ldx	#0
    114  0000 ????				      txa
    115  0000 ????				      ENDIF
    116  0000 ????				      tay
    117  0000 ????			   .CLEAR_STACK dex
    118  0000 ????				      txs
    119  0000 ????				      pha
    120  0000 ????				      bne	.CLEAR_STACK	; SP=$FF, X = A = Y = 0
    121  0000 ????
    122  0000 ????				      ENDM
    123  0000 ????
    124  0000 ????						;-------------------------------------------------------
    125  0000 ????						; SET_POINTER
    126  0000 ????						; Original author: Manuel Rotschkar
    127  0000 ????						;
    128  0000 ????						; Sets a 2 byte RAM pointer to an absolute address.
    129  0000 ????						;
    130  0000 ????						; Usage: SET_POINTER pointer, address
    131  0000 ????						; Example: SET_POINTER SpritePTR, SpriteData
    132  0000 ????						;
    133  0000 ????						; Note: Alters the accumulator, NZ flags
    134  0000 ????						; IN 1: 2 byte RAM location reserved for pointer
    135  0000 ????						; IN 2: absolute address
    136  0000 ????
    137  0000 ????				      MAC	set_pointer
    138  0000 ????			   .POINTER   SET	{1}
    139  0000 ????			   .ADDRESS   SET	{2}
    140  0000 ????
    141  0000 ????				      LDA	#<.ADDRESS	; Get Lowbyte of Address
    142  0000 ????				      STA	.POINTER	; Store in pointer
    143  0000 ????				      LDA	#>.ADDRESS	; Get Hibyte of Address
    144  0000 ????				      STA	.POINTER+1	; Store in pointer+1
    145  0000 ????
    146  0000 ????				      ENDM
    147  0000 ????
    148  0000 ????						;-------------------------------------------------------
    149  0000 ????						; BOUNDARY byte#
    150  0000 ????						; Original author: Denis Debro (borrowed from Bob Smith / Thomas)
    151  0000 ????						;
    152  0000 ????						; Push data to a certain position inside a page and keep count of how
    153  0000 ????						; many free bytes the programmer will have.
    154  0000 ????						;
    155  0000 ????						; eg: BOUNDARY 5    ; position at byte #5 in page
    156  0000 ????
    157  0000 ????			   .FREE_BYTES SET	0
    158  0000 ????				      MAC	boundary
    159  0000 ????				      REPEAT	256
    160  0000 ????				      IF	<. % {1} = 0
    161  0000 ????				      MEXIT
    162  0000 ????				      ELSE
    163  0000 ????			   .FREE_BYTES SET	.FREE_BYTES + 1
    164  0000 ????				      .byte	$00
    165  0000 ????				      ENDIF
    166  0000 ????				      REPEND
    167  0000 ????				      ENDM
    168  0000 ????
    169  0000 ????
    170  0000 ????						; EOF
------- FILE PacMan.asm
      4  0000 ????
      5  0000 ????						;==================================================================================
      6  0000 ????						; Program Definitions
      7  0000 ????						;==================================================================================
      8  0000 ????
      9  0000 ????	       00 12	   SPRITE_HEIGHT =	18
     10  0000 ????	       00 05	   TIMER_LIMIT =	5
     11  0000 ????
     12  0000 ????						;==================================================================================
     13  0000 ????						; Program Variables
     14  0000 ????						;==================================================================================
     15  0000 ????
     16 U0096 ????				      SEG.U	Variables
     17 U0080					      ORG	$80
     18 U0080
     19 U0080		       00	   PS_temp    ds	1
     20 U0081
     21 U0081		       00 00	   SpriteAddrPtr ds	2
     22 U0083		       00	   SpriteXPos ds	1
     23 U0084		       00	   SpriteYPos ds	1
     24 U0085		       00	   LastSpriteXPos ds	1
     25 U0086		       00	   LastSpriteYPos ds	1
     26 U0087		       00	   PlayerVelocityMask ds	1
     27 U0088
     28 U0088		       00 00	   SpriteGhostAddrPtr ds	2
     29 U008a		       00	   GhostSpriteXPos ds	1
     30 U008b		       00	   GhostSpriteYPos ds	1
     31 U008c
     32 U008c		       00	   SpriteAnimationIndex ds	1
     33 U008d		       00	   IsFrameGoingUp ds	1
     34 U008e
     35 U008e		       00	   ScoreTens  ds	1
     36 U008f		       00	   ScoreOnes  ds	1
     37 U0090		       00	   TensOffset ds	1
     38 U0091		       00	   OnesOffset ds	1
     39 U0092		       00	   ScoreDisplayTemp ds	1
     40 U0093
     41 U0093		       00	   TimerCounter ds	1
     42 U0094		       00	   PlayerReflectedBuffer ds	1
     43 U0095		       00	   GhostReflectedBuffer ds	1
     44 U0096
     45 U0096							;==================================================================================
     46 U0096							; Program Initialization
     47 U0096							;==================================================================================
     48 U0096
     49  fac9 ????				      SEG	Executable
     50  f000					      ORG	$F000
     51  f000
     52  f000				   Reset
     53  f000				   ClearMemory
     54  f000		       a2 00		      LDX	#0
     55  f002		       9a		      TXS
     56  f003		       48		      PHA
     57  f004		       8a		      TXA
     58  f005
     59  f005				   ClearMemoryLoop
     60  f005		       48		      PHA
     61  f006		       ca		      DEX
     62  f007		       d0 fc		      BNE	ClearMemoryLoop
     63  f009
     64  f009		       20 25 f1 	      JSR	InitVariables
     65  f00c
     66  f00c							;==================================================================================
     67  f00c							; Main Loop
     68  f00c							;==================================================================================
     69  f00c
     70  f00c				   Main
     71  f00c		       20 1b f0 	      JSR	HandleVSync
     72  f00f		       20 2a f0 	      JSR	HandleVBlank
     73  f012		       20 48 f0 	      JSR	MainKernel
     74  f015		       20 c5 f0 	      JSR	Overscan
     75  f018		       4c 0c f0 	      JMP	Main
     76  f01b
     77  f01b							;==================================================================================
     78  f01b							; HandleVSync
     79  f01b							;==================================================================================
     80  f01b
     81  f01b				   HandleVSync
     82  f01b		       a9 00		      LDA	#0
     83  f01d		       85 01		      STA	VBLANK
     84  f01f		       a9 02		      LDA	#2
     85  f021		       85 00		      STA	VSYNC
     86  f023
     87  f023				   VSyncLoop
     88  f023		       85 02		      STA	WSYNC
     89  f025		       85 02		      STA	WSYNC
     90  f027		       85 02		      STA	WSYNC
     91  f029
     92  f029		       60		      RTS
     93  f02a
     94  f02a							;==================================================================================
     95  f02a							; HandleVBlank
     96  f02a							; Handle Part of Game Logic
     97  f02a							;==================================================================================
     98  f02a
     99  f02a				   HandleVBlank
    100  f02a
    101  f02a							; Initialize TIM64T
    102  f02a		       a9 2a		      LDA	#42
    103  f02c		       8d 96 02 	      STA	TIM64T
    104  f02f
    105  f02f							; Prepare Registers for VBLANK
    106  f02f		       a9 00		      LDA	#0
    107  f031		       85 00		      STA	VSYNC
    108  f033		       a9 42		      LDA	#%01000010
    109  f035		       85 01		      STA	VBLANK
    110  f037
    111  f037							; Processing Tasks
    112  f037		       20 0a f3 	      JSR	GetControllerInputs
    113  f03a		       20 48 f3 	      JSR	GetController2InputsDEBUG
    114  f03d		       20 da f1 	      JSR	UpdateEntities
    115  f040
    116  f040				   VBlankLoop
    117  f040		       ad 84 02 	      LDA	INTIM
    118  f043		       d0 fb		      BNE	VBlankLoop
    119  f045
    120  f045		       85 02		      STA	WSYNC
    121  f047		       60		      RTS
    122  f048
    123  f048							;==================================================================================
    124  f048							; MainKernel
    125  f048							;==================================================================================
    126  f048
    127  f048				   MainKernel
    128  f048		       a9 00		      LDA	#0
    129  f04a		       85 01		      STA	VBLANK
    130  f04c
    131  f04c		       20 67 f1 	      JSR	PositionSpriteX
    132  f04f		       20 9e f1 	      JSR	PositionGhostSpriteX
    133  f052
    134  f052		       a2 bf		      LDX	#191
    135  f054		       85 02		      STA	WSYNC
    136  f056
    137  f056				   MainFrameLoop
    138  f056
    139  f056							; First Line
    140  f056							; Load First Playfield
    141  f056		       bd 00 f5 	      LDA	MainBoard_STRIP_0,x	; 4  4   0
    142  f059		       85 0d		      STA	PF0	; 3  7   12
    143  f05b
    144  f05b		       bd c0 f5 	      LDA	MainBoard_STRIP_1,x	; 4  11   33
    145  f05e		       85 0e		      STA	PF1	; 3  14   42
    146  f060
    147  f060		       bd 80 f6 	      LDA	MainBoard_STRIP_2,x	; 4  18
    148  f063		       85 0f		      STA	PF2	; 3  21
    149  f065
    150  f065							; Check Vertical Drawing
    151  f065		       8a		      TXA		; 2
    152  f066		       38		      SEC		; 2
    153  f067		       e5 84		      SBC	SpriteYPos	; 3
    154  f069		       69 12		      ADC	#SPRITE_HEIGHT	; 2
    155  f06b
    156  f06b							; Load Second Playfield
    157  f06b		       bc 40 f7 	      LDY	MainBoard_STRIP_3,x	; 4  25
    158  f06e		       84 0d		      STY	PF0	; 3  28
    159  f070
    160  f070		       bc 00 f8 	      LDY	MainBoard_STRIP_4,x	; 4  32
    161  f073		       84 0e		      STY	PF1
    162  f075
    163  f075		       bc c0 f8 	      LDY	MainBoard_STRIP_5,x	; 4  39
    164  f078		       84 0f		      STY	PF2	; 3  42
    165  f07a
    166  f07a							; Load P0 Sprite Data
    167  f07a		       90 05		      BCC	SkipDrawing	; 3
    168  f07c		       a8		      TAY		; 3
    169  f07d		       b1 81		      LDA	(SpriteAddrPtr),y	; 5
    170  f07f		       85 1b		      STA	GRP0	; 3
    171  f081
    172  f081				   SkipDrawing
    173  f081							; Decrease X and Go To Next Line
    174  f081		       ca		      DEX		; 2
    175  f082		       85 02		      STA	WSYNC	; 3
    176  f084		       e0 00		      CPX	#0
    177  f086		       f0 30		      BEQ	MainFrameLoopEnd	; 2 
    178  f088
    179  f088							; Second Line
    180  f088
    181  f088							; Load First Playfield
    182  f088		       bd 00 f5 	      LDA	MainBoard_STRIP_0,x	; 4
    183  f08b		       85 0d		      STA	PF0	; 3
    184  f08d
    185  f08d		       bd c0 f5 	      LDA	MainBoard_STRIP_1,x	; 4
    186  f090		       85 0e		      STA	PF1	; 3
    187  f092
    188  f092		       bd 80 f6 	      LDA	MainBoard_STRIP_2,x	; 4
    189  f095		       85 0f		      STA	PF2	; 3
    190  f097
    191  f097							; Check Ghost Vertical Drawing
    192  f097		       8a		      TXA		; 2
    193  f098		       38		      SEC		; 2
    194  f099		       e5 8b		      SBC	GhostSpriteYPos	; 3
    195  f09b		       69 12		      ADC	#SPRITE_HEIGHT	; 2
    196  f09d
    197  f09d							; Load Second Playfield
    198  f09d		       bc 40 f7 	      LDY	MainBoard_STRIP_3,x	; 4
    199  f0a0		       84 0d		      STY	PF0	; 3
    200  f0a2
    201  f0a2		       bc 00 f8 	      LDY	MainBoard_STRIP_4,x	; 4
    202  f0a5		       84 0e		      STY	PF1	; 3
    203  f0a7
    204  f0a7		       bc c0 f8 	      LDY	MainBoard_STRIP_5,x	; 4
    205  f0aa		       84 0f		      STY	PF2	; 3
    206  f0ac
    207  f0ac							; Load Ghost Sprite Data
    208  f0ac		       90 05		      BCC	SkipGhostDrawing	; 3
    209  f0ae		       a8		      TAY		; 3
    210  f0af		       b1 88		      LDA	(SpriteGhostAddrPtr),y	; 5
    211  f0b1		       85 1c		      STA	GRP1	; 3
    212  f0b3
    213  f0b3				   SkipGhostDrawing
    214  f0b3							; Decrease X and Go To Next Line
    215  f0b3		       85 02		      STA	WSYNC	; 3
    216  f0b5		       ca		      DEX		; 2
    217  f0b6		       d0 9e		      BNE	MainFrameLoop	; 2
    218  f0b8
    219  f0b8				   MainFrameLoopEnd
    220  f0b8							; Clearing Playfield Registers
    221  f0b8		       a9 00		      LDA	#0
    222  f0ba		       85 0d		      STA	PF0
    223  f0bc		       85 0e		      STA	PF1
    224  f0be		       85 0f		      STA	PF2
    225  f0c0
    226  f0c0		       85 1b		      STA	GRP0
    227  f0c2		       85 1c		      STA	GRP1
    228  f0c4
    229  f0c4		       60		      RTS
    230  f0c5
    231  f0c5							;==================================================================================
    232  f0c5							; Overscan
    233  f0c5							;==================================================================================
    234  f0c5
    235  f0c5				   Overscan
    236  f0c5
    237  f0c5							; Prepare Registers for Overscan Drawing
    238  f0c5		       a9 00		      LDA	#0
    239  f0c7		       85 0e		      STA	PF1
    240  f0c9		       85 0b		      STA	REFP0
    241  f0cb		       85 0c		      STA	REFP1
    242  f0cd
    243  f0cd		       a9 0e		      LDA	#$0E
    244  f0cf		       85 06		      STA	COLUP0
    245  f0d1		       85 07		      STA	COLUP1
    246  f0d3
    247  f0d3							; Calculate Tens Offset
    248  f0d3		       a6 8e		      LDX	ScoreTens
    249  f0d5		       bd b0 f3 	      LDA	MultBy20,x
    250  f0d8		       85 90		      STA	TensOffset
    251  f0da
    252  f0da							; Calculate Ones Offset
    253  f0da		       a6 8f		      LDX	ScoreOnes
    254  f0dc		       bd b0 f3 	      LDA	MultBy20,x
    255  f0df		       85 91		      STA	OnesOffset
    256  f0e1
    257  f0e1							; Adjust Score Placement
    258  f0e1		       85 02		      STA	WSYNC
    259  f0e3		       20 af f3 	      JSR	Delay12
    260  f0e6		       20 af f3 	      JSR	Delay12
    261  f0e9		       85 10		      STA	RESP0
    262  f0eb		       85 11		      STA	RESP1
    263  f0ed
    264  f0ed		       a2 1c		      LDX	#28
    265  f0ef				   OverscanLoop
    266  f0ef
    267  f0ef							; Is it time to draw?
    268  f0ef		       e0 0a		      CPX	#10
    269  f0f1		       90 16		      BCC	SmallerThan9
    270  f0f3
    271  f0f3							; Time to draw
    272  f0f3		       8a		      TXA
    273  f0f4		       e9 09		      SBC	#9
    274  f0f6		       65 90		      ADC	TensOffset
    275  f0f8		       a8		      TAY
    276  f0f9		       b9 00 fa 	      LDA	BottomData,y
    277  f0fc		       85 1b		      STA	GRP0
    278  f0fe
    279  f0fe		       8a		      TXA
    280  f0ff		       e9 09		      SBC	#9
    281  f101		       65 91		      ADC	OnesOffset
    282  f103		       a8		      TAY
    283  f104		       b9 00 fa 	      LDA	BottomData,y
    284  f107		       85 1c		      STA	GRP1
    285  f109
    286  f109				   SmallerThan9
    287  f109		       85 02		      STA	WSYNC
    288  f10b		       ca		      DEX
    289  f10c		       d0 e1		      BNE	OverscanLoop
    290  f10e
    291  f10e							; Clear Player Registers
    292  f10e		       a9 00		      LDA	#0
    293  f110		       85 1b		      STA	GRP0
    294  f112		       85 1c		      STA	GRP1
    295  f114
    296  f114							; Return P0 Register Reflection Value
    297  f114		       a5 94		      LDA	PlayerReflectedBuffer
    298  f116		       85 0b		      STA	REFP0
    299  f118
    300  f118							; Return P1 Register Reflection Value
    301  f118		       a5 95		      LDA	GhostReflectedBuffer
    302  f11a		       85 0c		      STA	REFP1
    303  f11c
    304  f11c							; Return P0 and P1 colors
    305  f11c		       a9 1e		      LDA	#$1E
    306  f11e		       85 06		      STA	COLUP0
    307  f120		       a9 58		      LDA	#$58
    308  f122		       85 07		      STA	COLUP1
    309  f124
    310  f124		       60		      RTS
    311  f125
    312  f125							;==================================================================================
    313  f125							; InitVariables
    314  f125							;==================================================================================
    315  f125
    316  f125				   InitVariables
    317  f125							; Initialize BG Color and PF Color
    318  f125		       a9 00		      LDA	#$00
    319  f127		       85 09		      STA	COLUBK
    320  f129		       a9 72		      LDA	#$72
    321  f12b		       85 08		      STA	COLUPF
    322  f12d
    323  f12d							; Initialize Player Color and Pattern
    324  f12d		       a9 1e		      LDA	#$1E
    325  f12f		       85 06		      STA	COLUP0
    326  f131		       a9 58		      LDA	#$58
    327  f133		       85 07		      STA	COLUP1
    328  f135
    329  f135							; Initialize Variables
    330  f135
    331  f135							; SpriteXPos
    332  f135		       a9 50		      LDA	#80
    333  f137		       85 83		      STA	SpriteXPos
    334  f139
    335  f139							; SpriteYPos
    336  f139		       a9 6b		      LDA	#107
    337  f13b		       85 84		      STA	SpriteYPos
    338  f13d
    339  f13d							; SpriteGhostXPos and YPos
    340  f13d		       a9 4d		      LDA	#77
    341  f13f		       85 8a		      STA	GhostSpriteXPos
    342  f141		       a9 82		      LDA	#130
    343  f143		       85 8b		      STA	GhostSpriteYPos
    344  f145
    345  f145							; Timer Counter
    346  f145		       a9 00		      LDA	#0
    347  f147		       85 93		      STA	TimerCounter
    348  f149
    349  f149							; Score
    350  f149		       85 8e		      STA	ScoreTens
    351  f14b		       85 8f		      STA	ScoreOnes
    352  f14d
    353  f14d							; Set Controller Inputs
    354  f14d		       8d 81 02 	      STA	SWACNT
    355  f150
    356  f150							; Set SpriteAnimationIndex
    357  f150		       85 8c		      STA	SpriteAnimationIndex
    358  f152		       85 8d		      STA	IsFrameGoingUp
    359  f154
    360  f154							; Set P0 and P1 Delays
    361  f154		       85 25		      STA	VDELP0
    362  f156
    363  f156							; PacmanSpriteDataPointer
    364  f156		       a9 00		      LDA	#<Sprite0Data
    365  f158		       85 81		      STA	SpriteAddrPtr
    366  f15a		       a9 f4		      LDA	#>Sprite0Data
    367  f15c		       85 82		      STA	SpriteAddrPtr+1
    368  f15e
    369  f15e							; GhostSpriteDataPointer
    370  f15e		       a9 48		      LDA	#<SpriteGhostData
    371  f160		       85 88		      STA	SpriteGhostAddrPtr
    372  f162		       a9 f4		      LDA	#>SpriteGhostData
    373  f164		       85 89		      STA	SpriteGhostAddrPtr+1
    374  f166
    375  f166		       60		      RTS
    376  f167
    377  f167							;==================================================================================
    378  f167							; PositionSpriteX - Subroutine to position player sprite
    379  f167							;==================================================================================
    380  f167
    381  f167				   PositionSpriteX
    382  f167		       85 02		      STA	WSYNC	; 3
    383  f169		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    384  f16b
    385  f16b				   PosSP
    386  f16b
    387  f16b		       a5 83		      LDA	SpriteXPos	; 4
    388  f16d		       a8		      TAY		; 2
    389  f16e
    390  f16e							; Divide by 16
    391  f16e		       4a		      LSR		; 2
    392  f16f		       4a		      LSR		; 2
    393  f170		       4a		      LSR		; 2
    394  f171		       4a		      LSR		; 2
    395  f172		       85 80		      STA	PS_temp	; 3
    396  f174
    397  f174		       98		      TYA		; 2
    398  f175		       29 0f		      AND	#15	; 2
    399  f177
    400  f177		       18		      CLC		; 2
    401  f178
    402  f178		       65 80		      ADC	PS_temp	; 3
    403  f17a		       a4 80		      LDY	PS_temp	; 3
    404  f17c
    405  f17c		       c9 0f		      CMP	#15	; 2
    406  f17e		       90 03		      BCC	NH	; 3
    407  f180		       e9 0f		      SBC	#15	; 2
    408  f182		       c8		      INY		; 2
    409  f183
    410  f183				   NH
    411  f183							; Use remainder for fine adjustment
    412  f183		       49 07		      EOR	#7	; 2
    413  f185		       0a		      ASL		; 2
    414  f186		       0a		      ASL		; 2
    415  f187		       0a		      ASL		; 2
    416  f188		       0a		      ASL		; 2
    417  f189
    418  f189		       85 20		      STA	HMP0	; fine movement	     ; 4
    419  f18b		       85 02		      STA	WSYNC	; 3
    420  f18d
    421  f18d		       20 9d f1 	      JSR	Ret	; just a 12 cycle delay     ; 12
    422  f190		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    423  f192
    424  f192
    425  f192				   Jiggle
    426  f192		       88		      DEY		; 2
    427  f193		       10 fd		      BPL	Jiggle	; 3
    428  f195
    429  f195		       85 10		      STA	RESP0	; 4
    430  f197
    431  f197		       85 02		      STA	WSYNC	; 3
    432  f199		       85 2a		      STA	HMOVE	; 3
    433  f19b		       85 02		      STA	WSYNC	; 3
    434  f19d
    435  f19d				   Ret
    436  f19d		       60		      RTS		; 6
    437  f19e
    438  f19e							;==================================================================================
    439  f19e							; PositionGhostSpriteX - Subroutine to position ghost sprite
    440  f19e							;==================================================================================
    441  f19e
    442  f19e				   PositionGhostSpriteX
    443  f19e		       85 02		      STA	WSYNC	; 3
    444  f1a0		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    445  f1a2
    446  f1a2		       a2 01		      LDX	#1	; sprite index 		  ; 2
    447  f1a4
    448  f1a4				   PosSP1
    449  f1a4
    450  f1a4		       b5 89		      LDA	GhostSpriteXPos-1,x	; 4
    451  f1a6		       a8		      TAY		; 2
    452  f1a7
    453  f1a7							; Divide by 16
    454  f1a7		       4a		      LSR		; 2
    455  f1a8		       4a		      LSR		; 2
    456  f1a9		       4a		      LSR		; 2
    457  f1aa		       4a		      LSR		; 2
    458  f1ab		       85 80		      STA	PS_temp	; 3
    459  f1ad
    460  f1ad		       98		      TYA		; 2
    461  f1ae		       29 0f		      AND	#15	; 2
    462  f1b0
    463  f1b0		       18		      CLC		; 2
    464  f1b1
    465  f1b1		       65 80		      ADC	PS_temp	; 3
    466  f1b3		       a4 80		      LDY	PS_temp	; 3
    467  f1b5
    468  f1b5		       c9 0f		      CMP	#15	; 2
    469  f1b7		       90 03		      BCC	NH1	; 3
    470  f1b9		       e9 0f		      SBC	#15	; 2
    471  f1bb		       c8		      INY		; 2
    472  f1bc
    473  f1bc				   NH1
    474  f1bc							; Use remainder for fine adjustment
    475  f1bc		       49 07		      EOR	#7	; 2
    476  f1be		       0a		      ASL		; 2
    477  f1bf		       0a		      ASL		; 2
    478  f1c0		       0a		      ASL		; 2
    479  f1c1		       0a		      ASL		; 2
    480  f1c2
    481  f1c2		       95 20		      STA	HMP1-1,x	; fine movement	     ; 4
    482  f1c4		       85 02		      STA	WSYNC	; 3
    483  f1c6
    484  f1c6		       20 d9 f1 	      JSR	Ret1	; just a 12 cycle delay     ; 12
    485  f1c9		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    486  f1cb
    487  f1cb
    488  f1cb				   Jiggle1
    489  f1cb		       88		      DEY		; 2
    490  f1cc		       10 fd		      BPL	Jiggle1	; 3
    491  f1ce
    492  f1ce		       95 10		      STA	RESP1-1,x	; 4
    493  f1d0
    494  f1d0		       ca		      DEX		; 2
    495  f1d1		       d0 d1		      BNE	PosSP1	; 3
    496  f1d3
    497  f1d3		       85 02		      STA	WSYNC	; 3
    498  f1d5		       85 2a		      STA	HMOVE	; 3
    499  f1d7		       85 02		      STA	WSYNC	; 3
    500  f1d9
    501  f1d9				   Ret1
    502  f1d9		       60		      RTS		; 6
    503  f1da
    504  f1da							;==================================================================================
    505  f1da							; UpdateEntities - Update Game Logic
    506  f1da							;==================================================================================
    507  f1da
    508  f1da				   UpdateEntities
    509  f1da							; Check Player Collision
    510  f1da		       20 ef f1 	      JSR	CheckPlayerCollision
    511  f1dd
    512  f1dd							; Update Sprite Pos According to Velocity Mask
    513  f1dd		       20 44 f2 	      JSR	UpdatePlayerPosition
    514  f1e0
    515  f1e0							; Remove Collisions After Checks
    516  f1e0		       85 2c		      STA	CXCLR
    517  f1e2
    518  f1e2							; Update Timer
    519  f1e2		       20 80 f3 	      JSR	UpdateTimer
    520  f1e5
    521  f1e5							; Increase Score
    522  f1e5		       20 90 f3 	      JSR	UpdateScore
    523  f1e8
    524  f1e8							; Change Animation Frame
    525  f1e8		       20 a9 f2 	      JSR	ChangeAnimationFrame
    526  f1eb
    527  f1eb							; Apply Animation Frame
    528  f1eb		       20 cc f2 	      JSR	ApplyAnimationFrame
    529  f1ee
    530  f1ee		       60		      RTS
    531  f1ef
    532  f1ef							;==================================================================================
    533  f1ef							; CheckPlayerCollision - Verify for Player Collision with PF and Update Velocity Mask
    534  f1ef							;==================================================================================
    535  f1ef
    536  f1ef				   CheckPlayerCollision
    537  f1ef							; Verify P0PF Collision Bit
    538  f1ef		       a5 02		      LDA	CXP0FB
    539  f1f1		       29 80		      AND	#%10000000
    540  f1f3		       f0 4e		      BEQ	PlayerPFCollisionNotDetected
    541  f1f5
    542  f1f5							; Check Where Player Was Going
    543  f1f5		       a6 87		      LDX	PlayerVelocityMask
    544  f1f7
    545  f1f7							; Return Player to Previous Spot Before Zeoring Velocity
    546  f1f7		       8a		      TXA
    547  f1f8		       29 08		      AND	#%1000
    548  f1fa		       d0 1a		      BNE	WasGoingRight
    549  f1fc
    550  f1fc		       8a		      TXA
    551  f1fd		       29 04		      AND	#%0100
    552  f1ff		       d0 20		      BNE	WasGoingLeft
    553  f201
    554  f201		       8a		      TXA
    555  f202		       29 02		      AND	#%0010
    556  f204		       d0 26		      BNE	WasGoingDown
    557  f206
    558  f206		       8a		      TXA
    559  f207		       29 01		      AND	#%0001
    560  f209		       d0 2c		      BNE	WasGoingUp
    561  f20b
    562  f20b							; Return X and Y in case Player isnt moving and is still stuck
    563  f20b		       a5 85		      LDA	LastSpriteXPos
    564  f20d		       85 83		      STA	SpriteXPos
    565  f20f		       a5 86		      LDA	LastSpriteYPos
    566  f211		       85 84		      STA	SpriteYPos
    567  f213
    568  f213		       4c 3f f2 	      JMP	ZeroPlayerVelocity
    569  f216
    570  f216				   WasGoingRight
    571  f216		       a5 85		      LDA	LastSpriteXPos
    572  f218		       85 83		      STA	SpriteXPos
    573  f21a
    574  f21a		       c6 83		      DEC	SpriteXPos
    575  f21c		       c6 83		      DEC	SpriteXPos
    576  f21e
    577  f21e		       4c 3f f2 	      JMP	ZeroPlayerVelocity
    578  f221
    579  f221				   WasGoingLeft
    580  f221		       a5 85		      LDA	LastSpriteXPos
    581  f223		       85 83		      STA	SpriteXPos
    582  f225
    583  f225		       e6 83		      INC	SpriteXPos
    584  f227		       e6 83		      INC	SpriteXPos
    585  f229
    586  f229		       4c 3f f2 	      JMP	ZeroPlayerVelocity
    587  f22c
    588  f22c				   WasGoingDown
    589  f22c		       a5 86		      LDA	LastSpriteYPos
    590  f22e		       85 84		      STA	SpriteYPos
    591  f230
    592  f230		       e6 84		      INC	SpriteYPos
    593  f232		       e6 84		      INC	SpriteYPos
    594  f234
    595  f234		       4c 3f f2 	      JMP	ZeroPlayerVelocity
    596  f237
    597  f237				   WasGoingUp
    598  f237		       a5 86		      LDA	LastSpriteYPos
    599  f239		       85 84		      STA	SpriteYPos
    600  f23b
    601  f23b		       c6 84		      DEC	SpriteYPos
    602  f23d		       c6 84		      DEC	SpriteYPos
    603  f23f
    604  f23f				   ZeroPlayerVelocity
    605  f23f		       a9 00		      LDA	#0
    606  f241		       85 87		      STA	PlayerVelocityMask
    607  f243
    608  f243				   PlayerPFCollisionNotDetected
    609  f243		       60		      RTS
    610  f244
    611  f244							;==================================================================================
    612  f244							; UpdatePlayerPosition - Update Player Position According to Velocity Mask
    613  f244							;==================================================================================
    614  f244
    615  f244				   UpdatePlayerPosition
    616  f244							; Verify Collision and Refuse to Move in case is colliding
    617  f244		       a5 02		      LDA	CXP0FB
    618  f246		       29 80		      AND	#%10000000
    619  f248		       d0 5e		      BNE	UpdatePlayerPositionRet
    620  f24a
    621  f24a		       a6 87		      LDX	PlayerVelocityMask
    622  f24c
    623  f24c		       8a		      TXA
    624  f24d		       29 08		      AND	#%1000
    625  f24f		       d0 12		      BNE	GoRight
    626  f251
    627  f251		       8a		      TXA
    628  f252		       29 04		      AND	#%0100
    629  f254		       d0 24		      BNE	GoLeft
    630  f256
    631  f256		       8a		      TXA
    632  f257		       29 02		      AND	#%0010
    633  f259		       d0 36		      BNE	GoDown
    634  f25b
    635  f25b		       8a		      TXA
    636  f25c		       29 01		      AND	#%0001
    637  f25e		       d0 3e		      BNE	GoUp
    638  f260
    639  f260		       4c a8 f2 	      JMP	UpdatePlayerPositionRet
    640  f263
    641  f263				   GoRight
    642  f263		       a5 83		      LDA	SpriteXPos
    643  f265		       85 85		      STA	LastSpriteXPos
    644  f267		       a5 84		      LDA	SpriteYPos
    645  f269		       85 86		      STA	LastSpriteYPos
    646  f26b
    647  f26b		       e6 83		      INC	SpriteXPos
    648  f26d
    649  f26d							; Verify If Sprite is in Far Right
    650  f26d		       a5 83		      LDA	SpriteXPos
    651  f26f		       c9 a0		      CMP	#160
    652  f271		       90 04		      BCC	NotFarRight
    653  f273
    654  f273		       a9 00		      LDA	#0
    655  f275		       85 83		      STA	SpriteXPos
    656  f277
    657  f277				   NotFarRight
    658  f277		       4c a8 f2 	      JMP	UpdatePlayerPositionRet
    659  f27a
    660  f27a				   GoLeft
    661  f27a		       a5 83		      LDA	SpriteXPos
    662  f27c		       85 85		      STA	LastSpriteXPos
    663  f27e		       a5 84		      LDA	SpriteYPos
    664  f280		       85 86		      STA	LastSpriteYPos
    665  f282
    666  f282		       c6 83		      DEC	SpriteXPos
    667  f284
    668  f284							; Verify If Sprite is in Far Left
    669  f284		       a5 83		      LDA	SpriteXPos
    670  f286		       c9 00		      CMP	#0
    671  f288		       d0 04		      BNE	NotFarLeft
    672  f28a
    673  f28a		       a9 a0		      LDA	#160
    674  f28c		       85 83		      STA	SpriteXPos
    675  f28e
    676  f28e				   NotFarLeft
    677  f28e		       4c a8 f2 	      JMP	UpdatePlayerPositionRet
    678  f291
    679  f291				   GoDown
    680  f291		       a5 83		      LDA	SpriteXPos
    681  f293		       85 85		      STA	LastSpriteXPos
    682  f295		       a5 84		      LDA	SpriteYPos
    683  f297		       85 86		      STA	LastSpriteYPos
    684  f299
    685  f299		       c6 84		      DEC	SpriteYPos
    686  f29b		       4c a8 f2 	      JMP	UpdatePlayerPositionRet
    687  f29e
    688  f29e				   GoUp
    689  f29e		       a5 83		      LDA	SpriteXPos
    690  f2a0		       85 85		      STA	LastSpriteXPos
    691  f2a2		       a5 84		      LDA	SpriteYPos
    692  f2a4		       85 86		      STA	LastSpriteYPos
    693  f2a6
    694  f2a6		       e6 84		      INC	SpriteYPos
    695  f2a8
    696  f2a8				   UpdatePlayerPositionRet
    697  f2a8		       60		      RTS
    698  f2a9
    699  f2a9							;==================================================================================
    700  f2a9							; ChangeAnimationFrame
    701  f2a9							;==================================================================================
    702  f2a9
    703  f2a9				   ChangeAnimationFrame
    704  f2a9							; Verify Counter
    705  f2a9		       a5 93		      LDA	TimerCounter
    706  f2ab		       d0 1e		      BNE	DontChangeFrame
    707  f2ad
    708  f2ad							; Load Current Frame Index
    709  f2ad		       a4 8c		      LDY	SpriteAnimationIndex
    710  f2af
    711  f2af							; Verify Next Frame
    712  f2af		       a6 8d		      LDX	IsFrameGoingUp
    713  f2b1		       f0 04		      BEQ	FrameIsGoingUp
    714  f2b3
    715  f2b3				   FrameIsGoingDown
    716  f2b3		       88		      DEY
    717  f2b4		       4c b8 f2 	      JMP	FrameChanged
    718  f2b7
    719  f2b7				   FrameIsGoingUp
    720  f2b7		       c8		      INY
    721  f2b8
    722  f2b8				   FrameChanged
    723  f2b8							; Check if Index is Either 0 or 2
    724  f2b8		       84 8c		      STY	SpriteAnimationIndex
    725  f2ba		       c0 03		      CPY	#3
    726  f2bc		       f0 07		      BEQ	ChangeDirection
    727  f2be		       c0 00		      CPY	#0
    728  f2c0		       f0 03		      BEQ	ChangeDirection
    729  f2c2
    730  f2c2							; If not
    731  f2c2		       4c cb f2 	      JMP	FrameChangeReturn
    732  f2c5
    733  f2c5				   ChangeDirection
    734  f2c5		       a5 8d		      LDA	IsFrameGoingUp
    735  f2c7		       49 01		      EOR	#1
    736  f2c9		       85 8d		      STA	IsFrameGoingUp
    737  f2cb
    738  f2cb				   DontRestartFrame
    739  f2cb				   DontChangeFrame
    740  f2cb				   FrameChangeReturn
    741  f2cb		       60		      RTS
    742  f2cc
    743  f2cc							;==================================================================================
    744  f2cc							; ApplyAnimationFrame
    745  f2cc							;==================================================================================
    746  f2cc
    747  f2cc				   ApplyAnimationFrame
    748  f2cc							; Check Counter
    749  f2cc		       a5 93		      LDA	TimerCounter
    750  f2ce		       d0 39		      BNE	ApplyAnimationFrameRet
    751  f2d0
    752  f2d0		       a5 8c		      LDA	SpriteAnimationIndex
    753  f2d2		       f0 0c		      BEQ	Animation0
    754  f2d4		       c9 01		      CMP	#1
    755  f2d6		       f0 13		      BEQ	Animation1
    756  f2d8		       c9 02		      CMP	#2
    757  f2da		       f0 1a		      BEQ	Animation2
    758  f2dc		       c9 03		      CMP	#3
    759  f2de		       f0 21		      BEQ	Animation3
    760  f2e0
    761  f2e0				   Animation0
    762  f2e0		       a9 00		      LDA	#<Sprite0Data
    763  f2e2		       85 81		      STA	SpriteAddrPtr
    764  f2e4		       a9 f4		      LDA	#>Sprite0Data
    765  f2e6		       85 82		      STA	SpriteAddrPtr+1
    766  f2e8		       4c 09 f3 	      JMP	ApplyAnimationFrameRet
    767  f2eb
    768  f2eb				   Animation1
    769  f2eb		       a9 12		      LDA	#<Sprite1Data
    770  f2ed		       85 81		      STA	SpriteAddrPtr
    771  f2ef		       a9 f4		      LDA	#>Sprite1Data
    772  f2f1		       85 82		      STA	SpriteAddrPtr+1
    773  f2f3		       4c 09 f3 	      JMP	ApplyAnimationFrameRet
    774  f2f6
    775  f2f6				   Animation2
    776  f2f6		       a9 24		      LDA	#<Sprite2Data
    777  f2f8		       85 81		      STA	SpriteAddrPtr
    778  f2fa		       a9 f4		      LDA	#>Sprite2Data
    779  f2fc		       85 82		      STA	SpriteAddrPtr+1
    780  f2fe		       4c 09 f3 	      JMP	ApplyAnimationFrameRet
    781  f301
    782  f301				   Animation3
    783  f301		       a9 36		      LDA	#<Sprite3Data
    784  f303		       85 81		      STA	SpriteAddrPtr
    785  f305		       a9 f4		      LDA	#>Sprite3Data
    786  f307		       85 82		      STA	SpriteAddrPtr+1
    787  f309
    788  f309				   ApplyAnimationFrameRet
    789  f309		       60		      RTS
    790  f30a
    791  f30a							;==================================================================================
    792  f30a							; GetControllerInputs - Update Player Velocity Mask According to Inputs
    793  f30a							;==================================================================================
    794  f30a
    795  f30a				   GetControllerInputs
    796  f30a		       ae 80 02 	      LDX	SWCHA
    797  f30d
    798  f30d							; Check Right Input
    799  f30d		       8a		      TXA
    800  f30e		       29 80		      AND	#%10000000
    801  f310		       f0 12		      BEQ	RightInput
    802  f312
    803  f312							; Check Left Input
    804  f312		       8a		      TXA
    805  f313		       29 40		      AND	#%01000000
    806  f315		       f0 18		      BEQ	LeftInput
    807  f317
    808  f317							; Check Down Input
    809  f317		       8a		      TXA
    810  f318		       29 20		      AND	#%00100000
    811  f31a		       f0 20		      BEQ	DownInput
    812  f31c
    813  f31c							; Check Up Input
    814  f31c		       8a		      TXA
    815  f31d		       29 10		      AND	#%00010000
    816  f31f		       f0 22		      BEQ	UpInput
    817  f321
    818  f321							; No Input Detected
    819  f321		       4c 47 f3 	      JMP	ControllerRet
    820  f324
    821  f324				   RightInput
    822  f324		       a9 08		      LDA	#%1000
    823  f326		       85 0b		      STA	REFP0
    824  f328		       85 94		      STA	PlayerReflectedBuffer
    825  f32a
    826  f32a		       85 87		      STA	PlayerVelocityMask
    827  f32c		       4c 47 f3 	      JMP	ControllerRet
    828  f32f
    829  f32f				   LeftInput
    830  f32f		       a9 00		      LDA	#0
    831  f331		       85 0b		      STA	REFP0
    832  f333		       85 94		      STA	PlayerReflectedBuffer
    833  f335
    834  f335		       a9 04		      LDA	#%0100
    835  f337		       85 87		      STA	PlayerVelocityMask
    836  f339		       4c 47 f3 	      JMP	ControllerRet
    837  f33c
    838  f33c				   DownInput
    839  f33c		       a9 02		      LDA	#%0010
    840  f33e		       85 87		      STA	PlayerVelocityMask
    841  f340		       4c 47 f3 	      JMP	ControllerRet
    842  f343
    843  f343				   UpInput
    844  f343		       a9 01		      LDA	#%0001
    845  f345		       85 87		      STA	PlayerVelocityMask
    846  f347
    847  f347				   ControllerRet
    848  f347		       60		      RTS
    849  f348
    850  f348							;==================================================================================
    851  f348							; GetController2Inputs - DEBUG - Controls Ghost
    852  f348							;==================================================================================
    853  f348
    854  f348				   GetController2InputsDEBUG
    855  f348		       ae 80 02 	      LDX	SWCHA
    856  f34b
    857  f34b							; Check Right Input
    858  f34b		       8a		      TXA
    859  f34c		       29 08		      AND	#%00001000
    860  f34e		       f0 12		      BEQ	RightInputGhost
    861  f350
    862  f350							; Check Left Input
    863  f350		       8a		      TXA
    864  f351		       29 04		      AND	#%00000100
    865  f353		       f0 18		      BEQ	LeftInputGhost
    866  f355
    867  f355							; Check Down Input
    868  f355		       8a		      TXA
    869  f356		       29 02		      AND	#%00000010
    870  f358		       f0 1e		      BEQ	DownInputGhost
    871  f35a
    872  f35a							; Check Up Input
    873  f35a		       8a		      TXA
    874  f35b		       29 01		      AND	#%00000001
    875  f35d		       f0 1e		      BEQ	UpInputGhost
    876  f35f
    877  f35f							; No Input Detected
    878  f35f		       4c 7f f3 	      JMP	ControllerRetGhost
    879  f362
    880  f362				   RightInputGhost
    881  f362		       e6 8a		      INC	GhostSpriteXPos
    882  f364		       a9 08		      LDA	#%1000
    883  f366		       85 0c		      STA	REFP1
    884  f368		       85 95		      STA	GhostReflectedBuffer
    885  f36a		       4c 7f f3 	      JMP	ControllerRetGhost
    886  f36d
    887  f36d				   LeftInputGhost
    888  f36d		       c6 8a		      DEC	GhostSpriteXPos
    889  f36f		       a9 00		      LDA	#0
    890  f371		       85 0c		      STA	REFP1
    891  f373		       85 95		      STA	GhostReflectedBuffer
    892  f375		       4c 7f f3 	      JMP	ControllerRetGhost
    893  f378
    894  f378				   DownInputGhost
    895  f378		       c6 8b		      DEC	GhostSpriteYPos
    896  f37a		       4c 7f f3 	      JMP	ControllerRetGhost
    897  f37d
    898  f37d				   UpInputGhost
    899  f37d		       e6 8b		      INC	GhostSpriteYPos
    900  f37f
    901  f37f				   ControllerRetGhost
    902  f37f		       60		      RTS
    903  f380
    904  f380							;==================================================================================
    905  f380							; UpdateTimer
    906  f380							;==================================================================================
    907  f380
    908  f380				   UpdateTimer
    909  f380		       a5 93		      LDA	TimerCounter
    910  f382		       c9 00		      CMP	#0
    911  f384		       d0 07		      BNE	DidntReachLimit
    912  f386
    913  f386				   ReachedLimit
    914  f386		       a9 05		      LDA	#TIMER_LIMIT
    915  f388		       85 93		      STA	TimerCounter
    916  f38a		       4c 8f f3 	      JMP	TimerRet
    917  f38d
    918  f38d				   DidntReachLimit
    919  f38d		       c6 93		      DEC	TimerCounter
    920  f38f
    921  f38f				   TimerRet
    922  f38f		       60		      RTS
    923  f390
    924  f390							;==================================================================================
    925  f390							; UpdateScore
    926  f390							;==================================================================================
    927  f390
    928  f390				   UpdateScore
    929  f390							; Check If Timer == 0
    930  f390		       a5 93		      LDA	TimerCounter
    931  f392		       c9 00		      CMP	#0
    932  f394		       d0 18		      BNE	NotYet10
    933  f396
    934  f396							; Increase Ones
    935  f396		       e6 8f		      INC	ScoreOnes
    936  f398
    937  f398							; Check if Ones reached 10
    938  f398		       a6 8f		      LDX	ScoreOnes
    939  f39a		       e0 0a		      CPX	#10
    940  f39c		       d0 10		      BNE	NotYet10
    941  f39e
    942  f39e				   OnesReached10
    943  f39e							; Reset Ones and Increase Tens
    944  f39e		       a2 00		      LDX	#0
    945  f3a0		       86 8f		      STX	ScoreOnes
    946  f3a2		       e6 8e		      INC	ScoreTens
    947  f3a4
    948  f3a4							; Check if Tens reached 10
    949  f3a4		       a6 8e		      LDX	ScoreTens
    950  f3a6		       e0 0a		      CPX	#10
    951  f3a8		       d0 04		      BNE	NotYet10
    952  f3aa
    953  f3aa				   TensReached10
    954  f3aa							; Reset Tens
    955  f3aa		       a2 00		      LDX	#0
    956  f3ac		       86 8e		      STX	ScoreTens
    957  f3ae
    958  f3ae				   NotYet10
    959  f3ae		       60		      RTS
    960  f3af
    961  f3af							;==================================================================================
    962  f3af							; Delay12 - Waste 12 cycles of CPU
    963  f3af							;==================================================================================
    964  f3af
    965  f3af				   Delay12
    966  f3af		       60		      RTS
    967  f3b0
    968  f3b0							;==================================================================================
    969  f3b0							; MultBy20
    970  f3b0							;==================================================================================
    971  f3b0
    972  f3b0				   MultBy20
    973  f3b0		       00 14 28 3c*	      .byte.b	0,20,40,60,80,100,120,140,160,180,200
    974  f3bb
    975  f3bb							;==================================================================================
    976  f3bb							; Control Page Boundry
    977  f3bb							;==================================================================================
    978  f3bb
    979  f3bb		       00 01 02 03*	      .byte.b	0,1,2,3,4,5,6,7,8,9,10
    980  f3c6		       00 01		      .byte.b	0,1
    981  f3c8
    982  f3c8							;===============================================================================
    983  f3c8							; free space check before page boundry
    984  f3c8							;===============================================================================
    985  f3c8
 Start of Sprite0Data is:  $f3c8
    986  f3c8					      echo	"Start of Sprite0Data is: ", *
    987  f400		       00 00 00 00*	      align	256
    988  f400
    989  f400							;==================================================================================
    990  f400							; Sprite Data - Pacman
    991  f400							;==================================================================================
    992  f400
    993  f400				   Sprite0Data
    994  f400							; Frame 0
    995  f400		       00		      .byte.b	#%00000000
    996  f401		       00		      .byte.b	#%00000000
    997  f402		       7e		      .byte.b	#%01111110
    998  f403		       7e		      .byte.b	#%01111110
    999  f404		       3f		      .byte.b	#%00111111
   1000  f405		       3f		      .byte.b	#%00111111
   1001  f406		       0f		      .byte.b	#%00001111
   1002  f407		       0f		      .byte.b	#%00001111
   1003  f408		       07		      .byte.b	#%00000111
   1004  f409		       07		      .byte.b	#%00000111
   1005  f40a		       0f		      .byte.b	#%00001111
   1006  f40b		       0f		      .byte.b	#%00001111
   1007  f40c		       3f		      .byte.b	#%00111111
   1008  f40d		       3f		      .byte.b	#%00111111
   1009  f40e		       7e		      .byte.b	#%01111110
   1010  f40f		       7e		      .byte.b	#%01111110
   1011  f410		       00		      .byte.b	#%00000000
   1012  f411		       00		      .byte.b	#%00000000
   1013  f412
   1014  f412				   Sprite1Data
   1015  f412							; Frame 0
   1016  f412		       00		      .byte.b	#%00000000
   1017  f413		       00		      .byte.b	#%00000000
   1018  f414		       7e		      .byte.b	#%01111110
   1019  f415		       7e		      .byte.b	#%01111110
   1020  f416		       ff		      .byte.b	#%11111111
   1021  f417		       ff		      .byte.b	#%11111111
   1022  f418		       3f		      .byte.b	#%00111111
   1023  f419		       3f		      .byte.b	#%00111111
   1024  f41a		       0f		      .byte.b	#%00001111
   1025  f41b		       0f		      .byte.b	#%00001111
   1026  f41c		       3f		      .byte.b	#%00111111
   1027  f41d		       3f		      .byte.b	#%00111111
   1028  f41e		       ff		      .byte.b	#%11111111
   1029  f41f		       ff		      .byte.b	#%11111111
   1030  f420		       7e		      .byte.b	#%01111110
   1031  f421		       7e		      .byte.b	#%01111110
   1032  f422		       00		      .byte.b	#%00000000
   1033  f423		       00		      .byte.b	#%00000000
   1034  f424
   1035  f424				   Sprite2Data
   1036  f424							; Frame 1
   1037  f424		       00		      .byte.b	#%00000000
   1038  f425		       00		      .byte.b	#%00000000
   1039  f426		       7e		      .byte.b	#%01111110
   1040  f427		       7e		      .byte.b	#%01111110
   1041  f428		       ff		      .byte.b	#%11111111
   1042  f429		       ff		      .byte.b	#%11111111
   1043  f42a		       ff		      .byte.b	#%11111111
   1044  f42b		       ff		      .byte.b	#%11111111
   1045  f42c		       0f		      .byte.b	#%00001111
   1046  f42d		       0f		      .byte.b	#%00001111
   1047  f42e		       ff		      .byte.b	#%11111111
   1048  f42f		       ff		      .byte.b	#%11111111
   1049  f430		       ff		      .byte.b	#%11111111
   1050  f431		       ff		      .byte.b	#%11111111
   1051  f432		       7e		      .byte.b	#%01111110
   1052  f433		       7e		      .byte.b	#%01111110
   1053  f434		       00		      .byte.b	#%00000000
   1054  f435		       00		      .byte.b	#%00000000
   1055  f436
   1056  f436				   Sprite3Data
   1057  f436							; Frame 2
   1058  f436		       00		      .byte.b	#%00000000
   1059  f437		       00		      .byte.b	#%00000000
   1060  f438		       7e		      .byte.b	#%01111110
   1061  f439		       7e		      .byte.b	#%01111110
   1062  f43a		       ff		      .byte.b	#%11111111
   1063  f43b		       ff		      .byte.b	#%11111111
   1064  f43c		       ff		      .byte.b	#%11111111
   1065  f43d		       ff		      .byte.b	#%11111111
   1066  f43e		       ff		      .byte.b	#%11111111
   1067  f43f		       ff		      .byte.b	#%11111111
   1068  f440		       ff		      .byte.b	#%11111111
   1069  f441		       ff		      .byte.b	#%11111111
   1070  f442		       ff		      .byte.b	#%11111111
   1071  f443		       ff		      .byte.b	#%11111111
   1072  f444		       7e		      .byte.b	#%01111110
   1073  f445		       7e		      .byte.b	#%01111110
   1074  f446		       00		      .byte.b	#%00000000
   1075  f447		       00		      .byte.b	#%00000000
   1076  f448
   1077  f448							;==================================================================================
   1078  f448							; Sprite Data - Ghost
   1079  f448							;==================================================================================
   1080  f448
   1081  f448				   SpriteGhostData
   1082  f448		       00		      .byte.b	#%00000000
   1083  f449		       00		      .byte.b	#%00000000
   1084  f44a		       55		      .byte.b	#%01010101
   1085  f44b		       55		      .byte.b	#%01010101
   1086  f44c		       ff		      .byte.b	#%11111111
   1087  f44d		       ff		      .byte.b	#%11111111
   1088  f44e		       ff		      .byte.b	#%11111111
   1089  f44f		       99		      .byte.b	#%10011001
   1090  f450		       99		      .byte.b	#%10011001
   1091  f451		       bb		      .byte.b	#%10111011
   1092  f452		       bb		      .byte.b	#%10111011
   1093  f453		       ff		      .byte.b	#%11111111
   1094  f454		       7e		      .byte.b	#%01111110
   1095  f455		       7e		      .byte.b	#%01111110
   1096  f456		       7e		      .byte.b	#%01111110
   1097  f457		       7e		      .byte.b	#%01111110
   1098  f458		       00		      .byte.b	#%00000000
   1099  f459		       00		      .byte.b	#%00000000
   1100  f45a
   1101  f45a							;==================================================================================
   1102  f45a							; free space check before page boundry
   1103  f45a							;==================================================================================
   1104  f45a
 End of Sprite0Data is:  $f45a
   1105  f45a					      echo	"End of Sprite0Data is: ", *
   1106  f500		       00 00 00 00*	      align	256
   1107  f500
   1108  f500							;==================================================================================
   1109  f500							; Board Data
   1110  f500							;==================================================================================
   1111  f500
------- FILE MainBoard.asm LEVEL 2 PASS 2
      0  f500					      include	"MainBoard.asm"
      1  f500				   MainBoard
      2  f500
      3  f500				   MainBoard_STRIP_0
      4  f500		       50		      .byte.b	80
      5  f501		       00		      .byte.b	0
      6  f502		       f0		      .byte.b	240
      7  f503		       f0		      .byte.b	240
      8  f504		       f0		      .byte.b	240
      9  f505		       10		      .byte.b	16
     10  f506		       10		      .byte.b	16
     11  f507		       10		      .byte.b	16
     12  f508		       10		      .byte.b	16
     13  f509		       10		      .byte.b	16
     14  f50a		       10		      .byte.b	16
     15  f50b		       10		      .byte.b	16
     16  f50c		       10		      .byte.b	16
     17  f50d		       10		      .byte.b	16
     18  f50e		       10		      .byte.b	16
     19  f50f		       10		      .byte.b	16
     20  f510		       10		      .byte.b	16
     21  f511		       10		      .byte.b	16
     22  f512		       10		      .byte.b	16
     23  f513		       10		      .byte.b	16
     24  f514		       10		      .byte.b	16
     25  f515		       10		      .byte.b	16
     26  f516		       10		      .byte.b	16
     27  f517		       10		      .byte.b	16
     28  f518		       10		      .byte.b	16
     29  f519		       10		      .byte.b	16
     30  f51a		       10		      .byte.b	16
     31  f51b		       10		      .byte.b	16
     32  f51c		       10		      .byte.b	16
     33  f51d		       10		      .byte.b	16
     34  f51e		       10		      .byte.b	16
     35  f51f		       10		      .byte.b	16
     36  f520		       10		      .byte.b	16
     37  f521		       10		      .byte.b	16
     38  f522		       10		      .byte.b	16
     39  f523		       10		      .byte.b	16
     40  f524		       10		      .byte.b	16
     41  f525		       10		      .byte.b	16
     42  f526		       10		      .byte.b	16
     43  f527		       10		      .byte.b	16
     44  f528		       10		      .byte.b	16
     45  f529		       10		      .byte.b	16
     46  f52a		       10		      .byte.b	16
     47  f52b		       10		      .byte.b	16
     48  f52c		       10		      .byte.b	16
     49  f52d		       10		      .byte.b	16
     50  f52e		       10		      .byte.b	16
     51  f52f		       10		      .byte.b	16
     52  f530		       10		      .byte.b	16
     53  f531		       10		      .byte.b	16
     54  f532		       10		      .byte.b	16
     55  f533		       10		      .byte.b	16
     56  f534		       10		      .byte.b	16
     57  f535		       10		      .byte.b	16
     58  f536		       10		      .byte.b	16
     59  f537		       10		      .byte.b	16
     60  f538		       10		      .byte.b	16
     61  f539		       f0		      .byte.b	240
     62  f53a		       f0		      .byte.b	240
     63  f53b		       f0		      .byte.b	240
     64  f53c		       f0		      .byte.b	240
     65  f53d		       80		      .byte.b	128
     66  f53e		       80		      .byte.b	128
     67  f53f		       80		      .byte.b	128
     68  f540		       80		      .byte.b	128
     69  f541		       80		      .byte.b	128
     70  f542		       80		      .byte.b	128
     71  f543		       80		      .byte.b	128
     72  f544		       80		      .byte.b	128
     73  f545		       80		      .byte.b	128
     74  f546		       80		      .byte.b	128
     75  f547		       80		      .byte.b	128
     76  f548		       80		      .byte.b	128
     77  f549		       80		      .byte.b	128
     78  f54a		       80		      .byte.b	128
     79  f54b		       80		      .byte.b	128
     80  f54c		       80		      .byte.b	128
     81  f54d		       80		      .byte.b	128
     82  f54e		       80		      .byte.b	128
     83  f54f		       80		      .byte.b	128
     84  f550		       80		      .byte.b	128
     85  f551		       f0		      .byte.b	240
     86  f552		       f0		      .byte.b	240
     87  f553		       f0		      .byte.b	240
     88  f554		       f0		      .byte.b	240
     89  f555		       00		      .byte.b	0
     90  f556		       00		      .byte.b	0
     91  f557		       00		      .byte.b	0
     92  f558		       00		      .byte.b	0
     93  f559		       00		      .byte.b	0
     94  f55a		       00		      .byte.b	0
     95  f55b		       00		      .byte.b	0
     96  f55c		       00		      .byte.b	0
     97  f55d		       00		      .byte.b	0
     98  f55e		       00		      .byte.b	0
     99  f55f		       00		      .byte.b	0
    100  f560		       00		      .byte.b	0
    101  f561		       00		      .byte.b	0
    102  f562		       00		      .byte.b	0
    103  f563		       00		      .byte.b	0
    104  f564		       00		      .byte.b	0
    105  f565		       00		      .byte.b	0
    106  f566		       00		      .byte.b	0
    107  f567		       00		      .byte.b	0
    108  f568		       00		      .byte.b	0
    109  f569		       00		      .byte.b	0
    110  f56a		       00		      .byte.b	0
    111  f56b		       f0		      .byte.b	240
    112  f56c		       f0		      .byte.b	240
    113  f56d		       f0		      .byte.b	240
    114  f56e		       80		      .byte.b	128
    115  f56f		       80		      .byte.b	128
    116  f570		       80		      .byte.b	128
    117  f571		       80		      .byte.b	128
    118  f572		       80		      .byte.b	128
    119  f573		       80		      .byte.b	128
    120  f574		       80		      .byte.b	128
    121  f575		       80		      .byte.b	128
    122  f576		       80		      .byte.b	128
    123  f577		       80		      .byte.b	128
    124  f578		       80		      .byte.b	128
    125  f579		       80		      .byte.b	128
    126  f57a		       80		      .byte.b	128
    127  f57b		       80		      .byte.b	128
    128  f57c		       80		      .byte.b	128
    129  f57d		       80		      .byte.b	128
    130  f57e		       80		      .byte.b	128
    131  f57f		       80		      .byte.b	128
    132  f580		       80		      .byte.b	128
    133  f581		       f0		      .byte.b	240
    134  f582		       f0		      .byte.b	240
    135  f583		       f0		      .byte.b	240
    136  f584		       f0		      .byte.b	240
    137  f585		       10		      .byte.b	16
    138  f586		       10		      .byte.b	16
    139  f587		       10		      .byte.b	16
    140  f588		       10		      .byte.b	16
    141  f589		       10		      .byte.b	16
    142  f58a		       10		      .byte.b	16
    143  f58b		       10		      .byte.b	16
    144  f58c		       10		      .byte.b	16
    145  f58d		       10		      .byte.b	16
    146  f58e		       10		      .byte.b	16
    147  f58f		       10		      .byte.b	16
    148  f590		       10		      .byte.b	16
    149  f591		       10		      .byte.b	16
    150  f592		       10		      .byte.b	16
    151  f593		       10		      .byte.b	16
    152  f594		       10		      .byte.b	16
    153  f595		       10		      .byte.b	16
    154  f596		       10		      .byte.b	16
    155  f597		       10		      .byte.b	16
    156  f598		       10		      .byte.b	16
    157  f599		       10		      .byte.b	16
    158  f59a		       10		      .byte.b	16
    159  f59b		       10		      .byte.b	16
    160  f59c		       10		      .byte.b	16
    161  f59d		       10		      .byte.b	16
    162  f59e		       10		      .byte.b	16
    163  f59f		       10		      .byte.b	16
    164  f5a0		       10		      .byte.b	16
    165  f5a1		       10		      .byte.b	16
    166  f5a2		       10		      .byte.b	16
    167  f5a3		       10		      .byte.b	16
    168  f5a4		       10		      .byte.b	16
    169  f5a5		       10		      .byte.b	16
    170  f5a6		       10		      .byte.b	16
    171  f5a7		       10		      .byte.b	16
    172  f5a8		       10		      .byte.b	16
    173  f5a9		       10		      .byte.b	16
    174  f5aa		       10		      .byte.b	16
    175  f5ab		       10		      .byte.b	16
    176  f5ac		       10		      .byte.b	16
    177  f5ad		       10		      .byte.b	16
    178  f5ae		       10		      .byte.b	16
    179  f5af		       10		      .byte.b	16
    180  f5b0		       10		      .byte.b	16
    181  f5b1		       10		      .byte.b	16
    182  f5b2		       10		      .byte.b	16
    183  f5b3		       10		      .byte.b	16
    184  f5b4		       10		      .byte.b	16
    185  f5b5		       10		      .byte.b	16
    186  f5b6		       10		      .byte.b	16
    187  f5b7		       10		      .byte.b	16
    188  f5b8		       10		      .byte.b	16
    189  f5b9		       10		      .byte.b	16
    190  f5ba		       f0		      .byte.b	240
    191  f5bb		       f0		      .byte.b	240
    192  f5bc		       f0		      .byte.b	240
    193  f5bd		       f0		      .byte.b	240
    194  f5be		       00		      .byte.b	0
    195  f5bf		       00		      .byte.b	0
    196  f5c0				   MainBoard_STRIP_1
    197  f5c0		       aa		      .byte.b	170
    198  f5c1		       00		      .byte.b	0
    199  f5c2		       ff		      .byte.b	255
    200  f5c3		       ff		      .byte.b	255
    201  f5c4		       ff		      .byte.b	255
    202  f5c5		       00		      .byte.b	0
    203  f5c6		       00		      .byte.b	0
    204  f5c7		       00		      .byte.b	0
    205  f5c8		       00		      .byte.b	0
    206  f5c9		       00		      .byte.b	0
    207  f5ca		       00		      .byte.b	0
    208  f5cb		       00		      .byte.b	0
    209  f5cc		       00		      .byte.b	0
    210  f5cd		       00		      .byte.b	0
    211  f5ce		       00		      .byte.b	0
    212  f5cf		       00		      .byte.b	0
    213  f5d0		       00		      .byte.b	0
    214  f5d1		       00		      .byte.b	0
    215  f5d2		       00		      .byte.b	0
    216  f5d3		       00		      .byte.b	0
    217  f5d4		       00		      .byte.b	0
    218  f5d5		       00		      .byte.b	0
    219  f5d6		       00		      .byte.b	0
    220  f5d7		       00		      .byte.b	0
    221  f5d8		       00		      .byte.b	0
    222  f5d9		       00		      .byte.b	0
    223  f5da		       00		      .byte.b	0
    224  f5db		       00		      .byte.b	0
    225  f5dc		       00		      .byte.b	0
    226  f5dd		       00		      .byte.b	0
    227  f5de		       00		      .byte.b	0
    228  f5df		       e3		      .byte.b	227
    229  f5e0		       e3		      .byte.b	227
    230  f5e1		       e3		      .byte.b	227
    231  f5e2		       e3		      .byte.b	227
    232  f5e3		       03		      .byte.b	3
    233  f5e4		       03		      .byte.b	3
    234  f5e5		       03		      .byte.b	3
    235  f5e6		       03		      .byte.b	3
    236  f5e7		       03		      .byte.b	3
    237  f5e8		       03		      .byte.b	3
    238  f5e9		       03		      .byte.b	3
    239  f5ea		       03		      .byte.b	3
    240  f5eb		       03		      .byte.b	3
    241  f5ec		       03		      .byte.b	3
    242  f5ed		       03		      .byte.b	3
    243  f5ee		       03		      .byte.b	3
    244  f5ef		       03		      .byte.b	3
    245  f5f0		       03		      .byte.b	3
    246  f5f1		       03		      .byte.b	3
    247  f5f2		       03		      .byte.b	3
    248  f5f3		       03		      .byte.b	3
    249  f5f4		       03		      .byte.b	3
    250  f5f5		       03		      .byte.b	3
    251  f5f6		       03		      .byte.b	3
    252  f5f7		       03		      .byte.b	3
    253  f5f8		       03		      .byte.b	3
    254  f5f9		       e3		      .byte.b	227
    255  f5fa		       e3		      .byte.b	227
    256  f5fb		       e3		      .byte.b	227
    257  f5fc		       e3		      .byte.b	227
    258  f5fd		       00		      .byte.b	0
    259  f5fe		       00		      .byte.b	0
    260  f5ff		       00		      .byte.b	0
    261  f600		       00		      .byte.b	0
    262  f601		       00		      .byte.b	0
    263  f602		       00		      .byte.b	0
    264  f603		       00		      .byte.b	0
    265  f604		       00		      .byte.b	0
    266  f605		       00		      .byte.b	0
    267  f606		       00		      .byte.b	0
    268  f607		       00		      .byte.b	0
    269  f608		       00		      .byte.b	0
    270  f609		       00		      .byte.b	0
    271  f60a		       00		      .byte.b	0
    272  f60b		       00		      .byte.b	0
    273  f60c		       00		      .byte.b	0
    274  f60d		       00		      .byte.b	0
    275  f60e		       00		      .byte.b	0
    276  f60f		       00		      .byte.b	0
    277  f610		       00		      .byte.b	0
    278  f611		       00		      .byte.b	0
    279  f612		       1f		      .byte.b	31
    280  f613		       1f		      .byte.b	31
    281  f614		       1f		      .byte.b	31
    282  f615		       00		      .byte.b	0
    283  f616		       00		      .byte.b	0
    284  f617		       00		      .byte.b	0
    285  f618		       00		      .byte.b	0
    286  f619		       00		      .byte.b	0
    287  f61a		       00		      .byte.b	0
    288  f61b		       00		      .byte.b	0
    289  f61c		       00		      .byte.b	0
    290  f61d		       00		      .byte.b	0
    291  f61e		       00		      .byte.b	0
    292  f61f		       00		      .byte.b	0
    293  f620		       00		      .byte.b	0
    294  f621		       00		      .byte.b	0
    295  f622		       00		      .byte.b	0
    296  f623		       00		      .byte.b	0
    297  f624		       00		      .byte.b	0
    298  f625		       00		      .byte.b	0
    299  f626		       00		      .byte.b	0
    300  f627		       00		      .byte.b	0
    301  f628		       00		      .byte.b	0
    302  f629		       00		      .byte.b	0
    303  f62a		       00		      .byte.b	0
    304  f62b		       1f		      .byte.b	31
    305  f62c		       1f		      .byte.b	31
    306  f62d		       00		      .byte.b	0
    307  f62e		       00		      .byte.b	0
    308  f62f		       00		      .byte.b	0
    309  f630		       00		      .byte.b	0
    310  f631		       00		      .byte.b	0
    311  f632		       00		      .byte.b	0
    312  f633		       00		      .byte.b	0
    313  f634		       00		      .byte.b	0
    314  f635		       00		      .byte.b	0
    315  f636		       00		      .byte.b	0
    316  f637		       00		      .byte.b	0
    317  f638		       00		      .byte.b	0
    318  f639		       00		      .byte.b	0
    319  f63a		       00		      .byte.b	0
    320  f63b		       00		      .byte.b	0
    321  f63c		       00		      .byte.b	0
    322  f63d		       00		      .byte.b	0
    323  f63e		       00		      .byte.b	0
    324  f63f		       00		      .byte.b	0
    325  f640		       00		      .byte.b	0
    326  f641		       00		      .byte.b	0
    327  f642		       1f		      .byte.b	31
    328  f643		       1f		      .byte.b	31
    329  f644		       1f		      .byte.b	31
    330  f645		       00		      .byte.b	0
    331  f646		       00		      .byte.b	0
    332  f647		       00		      .byte.b	0
    333  f648		       00		      .byte.b	0
    334  f649		       00		      .byte.b	0
    335  f64a		       00		      .byte.b	0
    336  f64b		       00		      .byte.b	0
    337  f64c		       00		      .byte.b	0
    338  f64d		       00		      .byte.b	0
    339  f64e		       00		      .byte.b	0
    340  f64f		       00		      .byte.b	0
    341  f650		       00		      .byte.b	0
    342  f651		       00		      .byte.b	0
    343  f652		       00		      .byte.b	0
    344  f653		       00		      .byte.b	0
    345  f654		       00		      .byte.b	0
    346  f655		       00		      .byte.b	0
    347  f656		       00		      .byte.b	0
    348  f657		       00		      .byte.b	0
    349  f658		       00		      .byte.b	0
    350  f659		       00		      .byte.b	0
    351  f65a		       00		      .byte.b	0
    352  f65b		       f8		      .byte.b	248
    353  f65c		       f8		      .byte.b	248
    354  f65d		       f8		      .byte.b	248
    355  f65e		       f8		      .byte.b	248
    356  f65f		       f8		      .byte.b	248
    357  f660		       f8		      .byte.b	248
    358  f661		       f8		      .byte.b	248
    359  f662		       f8		      .byte.b	248
    360  f663		       f8		      .byte.b	248
    361  f664		       00		      .byte.b	0
    362  f665		       00		      .byte.b	0
    363  f666		       00		      .byte.b	0
    364  f667		       00		      .byte.b	0
    365  f668		       00		      .byte.b	0
    366  f669		       00		      .byte.b	0
    367  f66a		       00		      .byte.b	0
    368  f66b		       00		      .byte.b	0
    369  f66c		       00		      .byte.b	0
    370  f66d		       00		      .byte.b	0
    371  f66e		       00		      .byte.b	0
    372  f66f		       00		      .byte.b	0
    373  f670		       00		      .byte.b	0
    374  f671		       00		      .byte.b	0
    375  f672		       00		      .byte.b	0
    376  f673		       00		      .byte.b	0
    377  f674		       00		      .byte.b	0
    378  f675		       00		      .byte.b	0
    379  f676		       00		      .byte.b	0
    380  f677		       00		      .byte.b	0
    381  f678		       00		      .byte.b	0
    382  f679		       00		      .byte.b	0
    383  f67a		       ff		      .byte.b	255
    384  f67b		       ff		      .byte.b	255
    385  f67c		       ff		      .byte.b	255
    386  f67d		       ff		      .byte.b	255
    387  f67e		       00		      .byte.b	0
    388  f67f		       04		      .byte.b	4
    389  f680				   MainBoard_STRIP_2
    390  f680		       00		      .byte.b	0
    391  f681		       00		      .byte.b	0
    392  f682		       ff		      .byte.b	255
    393  f683		       ff		      .byte.b	255
    394  f684		       ff		      .byte.b	255
    395  f685		       80		      .byte.b	128
    396  f686		       80		      .byte.b	128
    397  f687		       80		      .byte.b	128
    398  f688		       80		      .byte.b	128
    399  f689		       80		      .byte.b	128
    400  f68a		       80		      .byte.b	128
    401  f68b		       80		      .byte.b	128
    402  f68c		       80		      .byte.b	128
    403  f68d		       80		      .byte.b	128
    404  f68e		       80		      .byte.b	128
    405  f68f		       80		      .byte.b	128
    406  f690		       80		      .byte.b	128
    407  f691		       80		      .byte.b	128
    408  f692		       80		      .byte.b	128
    409  f693		       80		      .byte.b	128
    410  f694		       80		      .byte.b	128
    411  f695		       80		      .byte.b	128
    412  f696		       80		      .byte.b	128
    413  f697		       80		      .byte.b	128
    414  f698		       80		      .byte.b	128
    415  f699		       80		      .byte.b	128
    416  f69a		       80		      .byte.b	128
    417  f69b		       80		      .byte.b	128
    418  f69c		       80		      .byte.b	128
    419  f69d		       80		      .byte.b	128
    420  f69e		       80		      .byte.b	128
    421  f69f		       8f		      .byte.b	143
    422  f6a0		       8f		      .byte.b	143
    423  f6a1		       8f		      .byte.b	143
    424  f6a2		       8f		      .byte.b	143
    425  f6a3		       01		      .byte.b	1
    426  f6a4		       01		      .byte.b	1
    427  f6a5		       01		      .byte.b	1
    428  f6a6		       01		      .byte.b	1
    429  f6a7		       01		      .byte.b	1
    430  f6a8		       01		      .byte.b	1
    431  f6a9		       01		      .byte.b	1
    432  f6aa		       01		      .byte.b	1
    433  f6ab		       01		      .byte.b	1
    434  f6ac		       01		      .byte.b	1
    435  f6ad		       01		      .byte.b	1
    436  f6ae		       01		      .byte.b	1
    437  f6af		       01		      .byte.b	1
    438  f6b0		       01		      .byte.b	1
    439  f6b1		       01		      .byte.b	1
    440  f6b2		       01		      .byte.b	1
    441  f6b3		       01		      .byte.b	1
    442  f6b4		       01		      .byte.b	1
    443  f6b5		       01		      .byte.b	1
    444  f6b6		       01		      .byte.b	1
    445  f6b7		       01		      .byte.b	1
    446  f6b8		       01		      .byte.b	1
    447  f6b9		       e1		      .byte.b	225
    448  f6ba		       e1		      .byte.b	225
    449  f6bb		       e1		      .byte.b	225
    450  f6bc		       e1		      .byte.b	225
    451  f6bd		       80		      .byte.b	128
    452  f6be		       80		      .byte.b	128
    453  f6bf		       80		      .byte.b	128
    454  f6c0		       80		      .byte.b	128
    455  f6c1		       80		      .byte.b	128
    456  f6c2		       80		      .byte.b	128
    457  f6c3		       80		      .byte.b	128
    458  f6c4		       80		      .byte.b	128
    459  f6c5		       80		      .byte.b	128
    460  f6c6		       80		      .byte.b	128
    461  f6c7		       80		      .byte.b	128
    462  f6c8		       80		      .byte.b	128
    463  f6c9		       80		      .byte.b	128
    464  f6ca		       80		      .byte.b	128
    465  f6cb		       80		      .byte.b	128
    466  f6cc		       80		      .byte.b	128
    467  f6cd		       80		      .byte.b	128
    468  f6ce		       80		      .byte.b	128
    469  f6cf		       80		      .byte.b	128
    470  f6d0		       80		      .byte.b	128
    471  f6d1		       80		      .byte.b	128
    472  f6d2		       8f		      .byte.b	143
    473  f6d3		       8f		      .byte.b	143
    474  f6d4		       8f		      .byte.b	143
    475  f6d5		       00		      .byte.b	0
    476  f6d6		       00		      .byte.b	0
    477  f6d7		       00		      .byte.b	0
    478  f6d8		       00		      .byte.b	0
    479  f6d9		       00		      .byte.b	0
    480  f6da		       00		      .byte.b	0
    481  f6db		       00		      .byte.b	0
    482  f6dc		       00		      .byte.b	0
    483  f6dd		       00		      .byte.b	0
    484  f6de		       00		      .byte.b	0
    485  f6df		       00		      .byte.b	0
    486  f6e0		       00		      .byte.b	0
    487  f6e1		       00		      .byte.b	0
    488  f6e2		       00		      .byte.b	0
    489  f6e3		       00		      .byte.b	0
    490  f6e4		       00		      .byte.b	0
    491  f6e5		       00		      .byte.b	0
    492  f6e6		       00		      .byte.b	0
    493  f6e7		       00		      .byte.b	0
    494  f6e8		       00		      .byte.b	0
    495  f6e9		       00		      .byte.b	0
    496  f6ea		       e0		      .byte.b	224
    497  f6eb		       e3		      .byte.b	227
    498  f6ec		       e3		      .byte.b	227
    499  f6ed		       20		      .byte.b	32
    500  f6ee		       20		      .byte.b	32
    501  f6ef		       20		      .byte.b	32
    502  f6f0		       20		      .byte.b	32
    503  f6f1		       20		      .byte.b	32
    504  f6f2		       20		      .byte.b	32
    505  f6f3		       20		      .byte.b	32
    506  f6f4		       20		      .byte.b	32
    507  f6f5		       20		      .byte.b	32
    508  f6f6		       20		      .byte.b	32
    509  f6f7		       20		      .byte.b	32
    510  f6f8		       20		      .byte.b	32
    511  f6f9		       20		      .byte.b	32
    512  f6fa		       20		      .byte.b	32
    513  f6fb		       20		      .byte.b	32
    514  f6fc		       20		      .byte.b	32
    515  f6fd		       20		      .byte.b	32
    516  f6fe		       20		      .byte.b	32
    517  f6ff		       20		      .byte.b	32
    518  f700		       20		      .byte.b	32
    519  f701		       20		      .byte.b	32
    520  f702		       3f		      .byte.b	63
    521  f703		       ff		      .byte.b	255
    522  f704		       ff		      .byte.b	255
    523  f705		       00		      .byte.b	0
    524  f706		       00		      .byte.b	0
    525  f707		       00		      .byte.b	0
    526  f708		       00		      .byte.b	0
    527  f709		       00		      .byte.b	0
    528  f70a		       00		      .byte.b	0
    529  f70b		       00		      .byte.b	0
    530  f70c		       00		      .byte.b	0
    531  f70d		       00		      .byte.b	0
    532  f70e		       00		      .byte.b	0
    533  f70f		       00		      .byte.b	0
    534  f710		       00		      .byte.b	0
    535  f711		       00		      .byte.b	0
    536  f712		       00		      .byte.b	0
    537  f713		       00		      .byte.b	0
    538  f714		       00		      .byte.b	0
    539  f715		       00		      .byte.b	0
    540  f716		       00		      .byte.b	0
    541  f717		       00		      .byte.b	0
    542  f718		       00		      .byte.b	0
    543  f719		       00		      .byte.b	0
    544  f71a		       00		      .byte.b	0
    545  f71b		       8f		      .byte.b	143
    546  f71c		       8f		      .byte.b	143
    547  f71d		       8f		      .byte.b	143
    548  f71e		       8f		      .byte.b	143
    549  f71f		       8f		      .byte.b	143
    550  f720		       8f		      .byte.b	143
    551  f721		       8f		      .byte.b	143
    552  f722		       8f		      .byte.b	143
    553  f723		       8f		      .byte.b	143
    554  f724		       80		      .byte.b	128
    555  f725		       80		      .byte.b	128
    556  f726		       80		      .byte.b	128
    557  f727		       80		      .byte.b	128
    558  f728		       80		      .byte.b	128
    559  f729		       80		      .byte.b	128
    560  f72a		       80		      .byte.b	128
    561  f72b		       80		      .byte.b	128
    562  f72c		       80		      .byte.b	128
    563  f72d		       80		      .byte.b	128
    564  f72e		       80		      .byte.b	128
    565  f72f		       80		      .byte.b	128
    566  f730		       80		      .byte.b	128
    567  f731		       80		      .byte.b	128
    568  f732		       80		      .byte.b	128
    569  f733		       80		      .byte.b	128
    570  f734		       80		      .byte.b	128
    571  f735		       80		      .byte.b	128
    572  f736		       80		      .byte.b	128
    573  f737		       80		      .byte.b	128
    574  f738		       80		      .byte.b	128
    575  f739		       80		      .byte.b	128
    576  f73a		       ff		      .byte.b	255
    577  f73b		       ff		      .byte.b	255
    578  f73c		       ff		      .byte.b	255
    579  f73d		       ff		      .byte.b	255
    580  f73e		       00		      .byte.b	0
    581  f73f		       80		      .byte.b	128
    582  f740				   MainBoard_STRIP_3
    583  f740		       00		      .byte.b	0
    584  f741		       00		      .byte.b	0
    585  f742		       f0		      .byte.b	240
    586  f743		       f0		      .byte.b	240
    587  f744		       f0		      .byte.b	240
    588  f745		       10		      .byte.b	16
    589  f746		       10		      .byte.b	16
    590  f747		       10		      .byte.b	16
    591  f748		       10		      .byte.b	16
    592  f749		       10		      .byte.b	16
    593  f74a		       10		      .byte.b	16
    594  f74b		       10		      .byte.b	16
    595  f74c		       10		      .byte.b	16
    596  f74d		       10		      .byte.b	16
    597  f74e		       10		      .byte.b	16
    598  f74f		       10		      .byte.b	16
    599  f750		       10		      .byte.b	16
    600  f751		       10		      .byte.b	16
    601  f752		       10		      .byte.b	16
    602  f753		       10		      .byte.b	16
    603  f754		       10		      .byte.b	16
    604  f755		       10		      .byte.b	16
    605  f756		       10		      .byte.b	16
    606  f757		       10		      .byte.b	16
    607  f758		       10		      .byte.b	16
    608  f759		       10		      .byte.b	16
    609  f75a		       10		      .byte.b	16
    610  f75b		       10		      .byte.b	16
    611  f75c		       10		      .byte.b	16
    612  f75d		       10		      .byte.b	16
    613  f75e		       10		      .byte.b	16
    614  f75f		       10		      .byte.b	16
    615  f760		       10		      .byte.b	16
    616  f761		       10		      .byte.b	16
    617  f762		       10		      .byte.b	16
    618  f763		       00		      .byte.b	0
    619  f764		       00		      .byte.b	0
    620  f765		       00		      .byte.b	0
    621  f766		       00		      .byte.b	0
    622  f767		       00		      .byte.b	0
    623  f768		       00		      .byte.b	0
    624  f769		       00		      .byte.b	0
    625  f76a		       00		      .byte.b	0
    626  f76b		       00		      .byte.b	0
    627  f76c		       00		      .byte.b	0
    628  f76d		       00		      .byte.b	0
    629  f76e		       00		      .byte.b	0
    630  f76f		       00		      .byte.b	0
    631  f770		       00		      .byte.b	0
    632  f771		       00		      .byte.b	0
    633  f772		       00		      .byte.b	0
    634  f773		       00		      .byte.b	0
    635  f774		       00		      .byte.b	0
    636  f775		       00		      .byte.b	0
    637  f776		       00		      .byte.b	0
    638  f777		       00		      .byte.b	0
    639  f778		       00		      .byte.b	0
    640  f779		       70		      .byte.b	112
    641  f77a		       70		      .byte.b	112
    642  f77b		       70		      .byte.b	112
    643  f77c		       70		      .byte.b	112
    644  f77d		       10		      .byte.b	16
    645  f77e		       10		      .byte.b	16
    646  f77f		       10		      .byte.b	16
    647  f780		       10		      .byte.b	16
    648  f781		       10		      .byte.b	16
    649  f782		       10		      .byte.b	16
    650  f783		       10		      .byte.b	16
    651  f784		       10		      .byte.b	16
    652  f785		       10		      .byte.b	16
    653  f786		       10		      .byte.b	16
    654  f787		       10		      .byte.b	16
    655  f788		       10		      .byte.b	16
    656  f789		       10		      .byte.b	16
    657  f78a		       10		      .byte.b	16
    658  f78b		       10		      .byte.b	16
    659  f78c		       10		      .byte.b	16
    660  f78d		       10		      .byte.b	16
    661  f78e		       10		      .byte.b	16
    662  f78f		       10		      .byte.b	16
    663  f790		       10		      .byte.b	16
    664  f791		       10		      .byte.b	16
    665  f792		       10		      .byte.b	16
    666  f793		       10		      .byte.b	16
    667  f794		       10		      .byte.b	16
    668  f795		       00		      .byte.b	0
    669  f796		       00		      .byte.b	0
    670  f797		       00		      .byte.b	0
    671  f798		       00		      .byte.b	0
    672  f799		       00		      .byte.b	0
    673  f79a		       00		      .byte.b	0
    674  f79b		       00		      .byte.b	0
    675  f79c		       00		      .byte.b	0
    676  f79d		       00		      .byte.b	0
    677  f79e		       00		      .byte.b	0
    678  f79f		       00		      .byte.b	0
    679  f7a0		       00		      .byte.b	0
    680  f7a1		       00		      .byte.b	0
    681  f7a2		       00		      .byte.b	0
    682  f7a3		       00		      .byte.b	0
    683  f7a4		       00		      .byte.b	0
    684  f7a5		       00		      .byte.b	0
    685  f7a6		       00		      .byte.b	0
    686  f7a7		       00		      .byte.b	0
    687  f7a8		       00		      .byte.b	0
    688  f7a9		       00		      .byte.b	0
    689  f7aa		       70		      .byte.b	112
    690  f7ab		       70		      .byte.b	112
    691  f7ac		       70		      .byte.b	112
    692  f7ad		       40		      .byte.b	64
    693  f7ae		       40		      .byte.b	64
    694  f7af		       40		      .byte.b	64
    695  f7b0		       40		      .byte.b	64
    696  f7b1		       40		      .byte.b	64
    697  f7b2		       40		      .byte.b	64
    698  f7b3		       40		      .byte.b	64
    699  f7b4		       40		      .byte.b	64
    700  f7b5		       40		      .byte.b	64
    701  f7b6		       40		      .byte.b	64
    702  f7b7		       40		      .byte.b	64
    703  f7b8		       40		      .byte.b	64
    704  f7b9		       40		      .byte.b	64
    705  f7ba		       40		      .byte.b	64
    706  f7bb		       40		      .byte.b	64
    707  f7bc		       40		      .byte.b	64
    708  f7bd		       40		      .byte.b	64
    709  f7be		       40		      .byte.b	64
    710  f7bf		       40		      .byte.b	64
    711  f7c0		       40		      .byte.b	64
    712  f7c1		       40		      .byte.b	64
    713  f7c2		       c0		      .byte.b	192
    714  f7c3		       f0		      .byte.b	240
    715  f7c4		       f0		      .byte.b	240
    716  f7c5		       00		      .byte.b	0
    717  f7c6		       00		      .byte.b	0
    718  f7c7		       00		      .byte.b	0
    719  f7c8		       00		      .byte.b	0
    720  f7c9		       00		      .byte.b	0
    721  f7ca		       00		      .byte.b	0
    722  f7cb		       00		      .byte.b	0
    723  f7cc		       00		      .byte.b	0
    724  f7cd		       00		      .byte.b	0
    725  f7ce		       00		      .byte.b	0
    726  f7cf		       00		      .byte.b	0
    727  f7d0		       00		      .byte.b	0
    728  f7d1		       00		      .byte.b	0
    729  f7d2		       00		      .byte.b	0
    730  f7d3		       00		      .byte.b	0
    731  f7d4		       00		      .byte.b	0
    732  f7d5		       00		      .byte.b	0
    733  f7d6		       00		      .byte.b	0
    734  f7d7		       00		      .byte.b	0
    735  f7d8		       00		      .byte.b	0
    736  f7d9		       00		      .byte.b	0
    737  f7da		       00		      .byte.b	0
    738  f7db		       10		      .byte.b	16
    739  f7dc		       10		      .byte.b	16
    740  f7dd		       10		      .byte.b	16
    741  f7de		       10		      .byte.b	16
    742  f7df		       10		      .byte.b	16
    743  f7e0		       10		      .byte.b	16
    744  f7e1		       10		      .byte.b	16
    745  f7e2		       10		      .byte.b	16
    746  f7e3		       10		      .byte.b	16
    747  f7e4		       10		      .byte.b	16
    748  f7e5		       10		      .byte.b	16
    749  f7e6		       10		      .byte.b	16
    750  f7e7		       10		      .byte.b	16
    751  f7e8		       10		      .byte.b	16
    752  f7e9		       10		      .byte.b	16
    753  f7ea		       10		      .byte.b	16
    754  f7eb		       10		      .byte.b	16
    755  f7ec		       10		      .byte.b	16
    756  f7ed		       10		      .byte.b	16
    757  f7ee		       10		      .byte.b	16
    758  f7ef		       10		      .byte.b	16
    759  f7f0		       10		      .byte.b	16
    760  f7f1		       10		      .byte.b	16
    761  f7f2		       10		      .byte.b	16
    762  f7f3		       10		      .byte.b	16
    763  f7f4		       10		      .byte.b	16
    764  f7f5		       10		      .byte.b	16
    765  f7f6		       10		      .byte.b	16
    766  f7f7		       10		      .byte.b	16
    767  f7f8		       10		      .byte.b	16
    768  f7f9		       10		      .byte.b	16
    769  f7fa		       f0		      .byte.b	240
    770  f7fb		       f0		      .byte.b	240
    771  f7fc		       f0		      .byte.b	240
    772  f7fd		       f0		      .byte.b	240
    773  f7fe		       00		      .byte.b	0
    774  f7ff		       10		      .byte.b	16
    775  f800				   MainBoard_STRIP_4
    776  f800		       00		      .byte.b	0
    777  f801		       00		      .byte.b	0
    778  f802		       ff		      .byte.b	255
    779  f803		       ff		      .byte.b	255
    780  f804		       ff		      .byte.b	255
    781  f805		       00		      .byte.b	0
    782  f806		       00		      .byte.b	0
    783  f807		       00		      .byte.b	0
    784  f808		       00		      .byte.b	0
    785  f809		       00		      .byte.b	0
    786  f80a		       00		      .byte.b	0
    787  f80b		       00		      .byte.b	0
    788  f80c		       00		      .byte.b	0
    789  f80d		       00		      .byte.b	0
    790  f80e		       00		      .byte.b	0
    791  f80f		       00		      .byte.b	0
    792  f810		       00		      .byte.b	0
    793  f811		       00		      .byte.b	0
    794  f812		       00		      .byte.b	0
    795  f813		       00		      .byte.b	0
    796  f814		       00		      .byte.b	0
    797  f815		       00		      .byte.b	0
    798  f816		       00		      .byte.b	0
    799  f817		       00		      .byte.b	0
    800  f818		       00		      .byte.b	0
    801  f819		       00		      .byte.b	0
    802  f81a		       00		      .byte.b	0
    803  f81b		       00		      .byte.b	0
    804  f81c		       00		      .byte.b	0
    805  f81d		       00		      .byte.b	0
    806  f81e		       00		      .byte.b	0
    807  f81f		       fc		      .byte.b	252
    808  f820		       fc		      .byte.b	252
    809  f821		       fc		      .byte.b	252
    810  f822		       fc		      .byte.b	252
    811  f823		       1c		      .byte.b	28
    812  f824		       1c		      .byte.b	28
    813  f825		       1c		      .byte.b	28
    814  f826		       1c		      .byte.b	28
    815  f827		       1c		      .byte.b	28
    816  f828		       1c		      .byte.b	28
    817  f829		       1c		      .byte.b	28
    818  f82a		       1c		      .byte.b	28
    819  f82b		       1c		      .byte.b	28
    820  f82c		       1c		      .byte.b	28
    821  f82d		       1c		      .byte.b	28
    822  f82e		       1c		      .byte.b	28
    823  f82f		       1c		      .byte.b	28
    824  f830		       1c		      .byte.b	28
    825  f831		       1c		      .byte.b	28
    826  f832		       1c		      .byte.b	28
    827  f833		       1c		      .byte.b	28
    828  f834		       1c		      .byte.b	28
    829  f835		       1c		      .byte.b	28
    830  f836		       1c		      .byte.b	28
    831  f837		       1c		      .byte.b	28
    832  f838		       1c		      .byte.b	28
    833  f839		       1c		      .byte.b	28
    834  f83a		       1c		      .byte.b	28
    835  f83b		       1c		      .byte.b	28
    836  f83c		       1c		      .byte.b	28
    837  f83d		       00		      .byte.b	0
    838  f83e		       00		      .byte.b	0
    839  f83f		       00		      .byte.b	0
    840  f840		       00		      .byte.b	0
    841  f841		       00		      .byte.b	0
    842  f842		       00		      .byte.b	0
    843  f843		       00		      .byte.b	0
    844  f844		       00		      .byte.b	0
    845  f845		       00		      .byte.b	0
    846  f846		       00		      .byte.b	0
    847  f847		       00		      .byte.b	0
    848  f848		       00		      .byte.b	0
    849  f849		       00		      .byte.b	0
    850  f84a		       00		      .byte.b	0
    851  f84b		       00		      .byte.b	0
    852  f84c		       00		      .byte.b	0
    853  f84d		       00		      .byte.b	0
    854  f84e		       00		      .byte.b	0
    855  f84f		       00		      .byte.b	0
    856  f850		       00		      .byte.b	0
    857  f851		       00		      .byte.b	0
    858  f852		       ff		      .byte.b	255
    859  f853		       ff		      .byte.b	255
    860  f854		       ff		      .byte.b	255
    861  f855		       00		      .byte.b	0
    862  f856		       00		      .byte.b	0
    863  f857		       00		      .byte.b	0
    864  f858		       00		      .byte.b	0
    865  f859		       00		      .byte.b	0
    866  f85a		       00		      .byte.b	0
    867  f85b		       00		      .byte.b	0
    868  f85c		       00		      .byte.b	0
    869  f85d		       00		      .byte.b	0
    870  f85e		       00		      .byte.b	0
    871  f85f		       00		      .byte.b	0
    872  f860		       00		      .byte.b	0
    873  f861		       00		      .byte.b	0
    874  f862		       00		      .byte.b	0
    875  f863		       00		      .byte.b	0
    876  f864		       00		      .byte.b	0
    877  f865		       00		      .byte.b	0
    878  f866		       00		      .byte.b	0
    879  f867		       00		      .byte.b	0
    880  f868		       00		      .byte.b	0
    881  f869		       00		      .byte.b	0
    882  f86a		       00		      .byte.b	0
    883  f86b		       3f		      .byte.b	63
    884  f86c		       3f		      .byte.b	63
    885  f86d		       00		      .byte.b	0
    886  f86e		       00		      .byte.b	0
    887  f86f		       00		      .byte.b	0
    888  f870		       00		      .byte.b	0
    889  f871		       00		      .byte.b	0
    890  f872		       00		      .byte.b	0
    891  f873		       00		      .byte.b	0
    892  f874		       00		      .byte.b	0
    893  f875		       00		      .byte.b	0
    894  f876		       00		      .byte.b	0
    895  f877		       00		      .byte.b	0
    896  f878		       00		      .byte.b	0
    897  f879		       00		      .byte.b	0
    898  f87a		       00		      .byte.b	0
    899  f87b		       00		      .byte.b	0
    900  f87c		       00		      .byte.b	0
    901  f87d		       00		      .byte.b	0
    902  f87e		       00		      .byte.b	0
    903  f87f		       00		      .byte.b	0
    904  f880		       00		      .byte.b	0
    905  f881		       00		      .byte.b	0
    906  f882		       ff		      .byte.b	255
    907  f883		       ff		      .byte.b	255
    908  f884		       ff		      .byte.b	255
    909  f885		       00		      .byte.b	0
    910  f886		       00		      .byte.b	0
    911  f887		       00		      .byte.b	0
    912  f888		       00		      .byte.b	0
    913  f889		       00		      .byte.b	0
    914  f88a		       00		      .byte.b	0
    915  f88b		       00		      .byte.b	0
    916  f88c		       00		      .byte.b	0
    917  f88d		       00		      .byte.b	0
    918  f88e		       00		      .byte.b	0
    919  f88f		       00		      .byte.b	0
    920  f890		       00		      .byte.b	0
    921  f891		       00		      .byte.b	0
    922  f892		       00		      .byte.b	0
    923  f893		       00		      .byte.b	0
    924  f894		       00		      .byte.b	0
    925  f895		       00		      .byte.b	0
    926  f896		       00		      .byte.b	0
    927  f897		       00		      .byte.b	0
    928  f898		       00		      .byte.b	0
    929  f899		       00		      .byte.b	0
    930  f89a		       00		      .byte.b	0
    931  f89b		       f1		      .byte.b	241
    932  f89c		       f1		      .byte.b	241
    933  f89d		       f1		      .byte.b	241
    934  f89e		       f1		      .byte.b	241
    935  f89f		       f1		      .byte.b	241
    936  f8a0		       f1		      .byte.b	241
    937  f8a1		       f1		      .byte.b	241
    938  f8a2		       f1		      .byte.b	241
    939  f8a3		       f1		      .byte.b	241
    940  f8a4		       00		      .byte.b	0
    941  f8a5		       00		      .byte.b	0
    942  f8a6		       00		      .byte.b	0
    943  f8a7		       00		      .byte.b	0
    944  f8a8		       00		      .byte.b	0
    945  f8a9		       00		      .byte.b	0
    946  f8aa		       00		      .byte.b	0
    947  f8ab		       00		      .byte.b	0
    948  f8ac		       00		      .byte.b	0
    949  f8ad		       00		      .byte.b	0
    950  f8ae		       00		      .byte.b	0
    951  f8af		       00		      .byte.b	0
    952  f8b0		       00		      .byte.b	0
    953  f8b1		       00		      .byte.b	0
    954  f8b2		       00		      .byte.b	0
    955  f8b3		       00		      .byte.b	0
    956  f8b4		       00		      .byte.b	0
    957  f8b5		       00		      .byte.b	0
    958  f8b6		       00		      .byte.b	0
    959  f8b7		       00		      .byte.b	0
    960  f8b8		       00		      .byte.b	0
    961  f8b9		       00		      .byte.b	0
    962  f8ba		       ff		      .byte.b	255
    963  f8bb		       ff		      .byte.b	255
    964  f8bc		       ff		      .byte.b	255
    965  f8bd		       ff		      .byte.b	255
    966  f8be		       00		      .byte.b	0
    967  f8bf		       02		      .byte.b	2
    968  f8c0				   MainBoard_STRIP_5
    969  f8c0		       00		      .byte.b	0
    970  f8c1		       00		      .byte.b	0
    971  f8c2		       ff		      .byte.b	255
    972  f8c3		       ff		      .byte.b	255
    973  f8c4		       ff		      .byte.b	255
    974  f8c5		       80		      .byte.b	128
    975  f8c6		       80		      .byte.b	128
    976  f8c7		       80		      .byte.b	128
    977  f8c8		       80		      .byte.b	128
    978  f8c9		       80		      .byte.b	128
    979  f8ca		       80		      .byte.b	128
    980  f8cb		       80		      .byte.b	128
    981  f8cc		       80		      .byte.b	128
    982  f8cd		       80		      .byte.b	128
    983  f8ce		       80		      .byte.b	128
    984  f8cf		       80		      .byte.b	128
    985  f8d0		       80		      .byte.b	128
    986  f8d1		       80		      .byte.b	128
    987  f8d2		       80		      .byte.b	128
    988  f8d3		       80		      .byte.b	128
    989  f8d4		       80		      .byte.b	128
    990  f8d5		       80		      .byte.b	128
    991  f8d6		       80		      .byte.b	128
    992  f8d7		       80		      .byte.b	128
    993  f8d8		       80		      .byte.b	128
    994  f8d9		       80		      .byte.b	128
    995  f8da		       80		      .byte.b	128
    996  f8db		       80		      .byte.b	128
    997  f8dc		       80		      .byte.b	128
    998  f8dd		       80		      .byte.b	128
    999  f8de		       80		      .byte.b	128
   1000  f8df		       8e		      .byte.b	142
   1001  f8e0		       8e		      .byte.b	142
   1002  f8e1		       8e		      .byte.b	142
   1003  f8e2		       8e		      .byte.b	142
   1004  f8e3		       80		      .byte.b	128
   1005  f8e4		       80		      .byte.b	128
   1006  f8e5		       80		      .byte.b	128
   1007  f8e6		       80		      .byte.b	128
   1008  f8e7		       80		      .byte.b	128
   1009  f8e8		       80		      .byte.b	128
   1010  f8e9		       80		      .byte.b	128
   1011  f8ea		       80		      .byte.b	128
   1012  f8eb		       80		      .byte.b	128
   1013  f8ec		       80		      .byte.b	128
   1014  f8ed		       80		      .byte.b	128
   1015  f8ee		       80		      .byte.b	128
   1016  f8ef		       80		      .byte.b	128
   1017  f8f0		       80		      .byte.b	128
   1018  f8f1		       80		      .byte.b	128
   1019  f8f2		       80		      .byte.b	128
   1020  f8f3		       80		      .byte.b	128
   1021  f8f4		       80		      .byte.b	128
   1022  f8f5		       80		      .byte.b	128
   1023  f8f6		       80		      .byte.b	128
   1024  f8f7		       80		      .byte.b	128
   1025  f8f8		       80		      .byte.b	128
   1026  f8f9		       fe		      .byte.b	254
   1027  f8fa		       fe		      .byte.b	254
   1028  f8fb		       fe		      .byte.b	254
   1029  f8fc		       fe		      .byte.b	254
   1030  f8fd		       10		      .byte.b	16
   1031  f8fe		       10		      .byte.b	16
   1032  f8ff		       10		      .byte.b	16
   1033  f900		       50		      .byte.b	80
   1034  f901		       10		      .byte.b	16
   1035  f902		       50		      .byte.b	80
   1036  f903		       10		      .byte.b	16
   1037  f904		       50		      .byte.b	80
   1038  f905		       10		      .byte.b	16
   1039  f906		       50		      .byte.b	80
   1040  f907		       10		      .byte.b	16
   1041  f908		       50		      .byte.b	80
   1042  f909		       10		      .byte.b	16
   1043  f90a		       50		      .byte.b	80
   1044  f90b		       10		      .byte.b	16
   1045  f90c		       50		      .byte.b	80
   1046  f90d		       10		      .byte.b	16
   1047  f90e		       50		      .byte.b	80
   1048  f90f		       10		      .byte.b	16
   1049  f910		       50		      .byte.b	80
   1050  f911		       10		      .byte.b	16
   1051  f912		       f1		      .byte.b	241
   1052  f913		       f1		      .byte.b	241
   1053  f914		       f1		      .byte.b	241
   1054  f915		       00		      .byte.b	0
   1055  f916		       00		      .byte.b	0
   1056  f917		       00		      .byte.b	0
   1057  f918		       00		      .byte.b	0
   1058  f919		       00		      .byte.b	0
   1059  f91a		       00		      .byte.b	0
   1060  f91b		       00		      .byte.b	0
   1061  f91c		       00		      .byte.b	0
   1062  f91d		       00		      .byte.b	0
   1063  f91e		       00		      .byte.b	0
   1064  f91f		       00		      .byte.b	0
   1065  f920		       00		      .byte.b	0
   1066  f921		       00		      .byte.b	0
   1067  f922		       00		      .byte.b	0
   1068  f923		       00		      .byte.b	0
   1069  f924		       00		      .byte.b	0
   1070  f925		       00		      .byte.b	0
   1071  f926		       00		      .byte.b	0
   1072  f927		       00		      .byte.b	0
   1073  f928		       00		      .byte.b	0
   1074  f929		       00		      .byte.b	0
   1075  f92a		       00		      .byte.b	0
   1076  f92b		       f1		      .byte.b	241
   1077  f92c		       f1		      .byte.b	241
   1078  f92d		       f0		      .byte.b	240
   1079  f92e		       10		      .byte.b	16
   1080  f92f		       50		      .byte.b	80
   1081  f930		       10		      .byte.b	16
   1082  f931		       50		      .byte.b	80
   1083  f932		       10		      .byte.b	16
   1084  f933		       50		      .byte.b	80
   1085  f934		       10		      .byte.b	16
   1086  f935		       50		      .byte.b	80
   1087  f936		       10		      .byte.b	16
   1088  f937		       50		      .byte.b	80
   1089  f938		       10		      .byte.b	16
   1090  f939		       50		      .byte.b	80
   1091  f93a		       10		      .byte.b	16
   1092  f93b		       50		      .byte.b	80
   1093  f93c		       10		      .byte.b	16
   1094  f93d		       50		      .byte.b	80
   1095  f93e		       10		      .byte.b	16
   1096  f93f		       50		      .byte.b	80
   1097  f940		       10		      .byte.b	16
   1098  f941		       f0		      .byte.b	240
   1099  f942		       f1		      .byte.b	241
   1100  f943		       f1		      .byte.b	241
   1101  f944		       f1		      .byte.b	241
   1102  f945		       80		      .byte.b	128
   1103  f946		       80		      .byte.b	128
   1104  f947		       80		      .byte.b	128
   1105  f948		       80		      .byte.b	128
   1106  f949		       80		      .byte.b	128
   1107  f94a		       80		      .byte.b	128
   1108  f94b		       80		      .byte.b	128
   1109  f94c		       80		      .byte.b	128
   1110  f94d		       80		      .byte.b	128
   1111  f94e		       80		      .byte.b	128
   1112  f94f		       80		      .byte.b	128
   1113  f950		       80		      .byte.b	128
   1114  f951		       80		      .byte.b	128
   1115  f952		       80		      .byte.b	128
   1116  f953		       80		      .byte.b	128
   1117  f954		       80		      .byte.b	128
   1118  f955		       80		      .byte.b	128
   1119  f956		       80		      .byte.b	128
   1120  f957		       80		      .byte.b	128
   1121  f958		       80		      .byte.b	128
   1122  f959		       80		      .byte.b	128
   1123  f95a		       80		      .byte.b	128
   1124  f95b		       8f		      .byte.b	143
   1125  f95c		       8f		      .byte.b	143
   1126  f95d		       8f		      .byte.b	143
   1127  f95e		       8f		      .byte.b	143
   1128  f95f		       8f		      .byte.b	143
   1129  f960		       8f		      .byte.b	143
   1130  f961		       8f		      .byte.b	143
   1131  f962		       8f		      .byte.b	143
   1132  f963		       8f		      .byte.b	143
   1133  f964		       80		      .byte.b	128
   1134  f965		       80		      .byte.b	128
   1135  f966		       80		      .byte.b	128
   1136  f967		       80		      .byte.b	128
   1137  f968		       80		      .byte.b	128
   1138  f969		       80		      .byte.b	128
   1139  f96a		       80		      .byte.b	128
   1140  f96b		       80		      .byte.b	128
   1141  f96c		       80		      .byte.b	128
   1142  f96d		       80		      .byte.b	128
   1143  f96e		       80		      .byte.b	128
   1144  f96f		       80		      .byte.b	128
   1145  f970		       80		      .byte.b	128
   1146  f971		       80		      .byte.b	128
   1147  f972		       80		      .byte.b	128
   1148  f973		       80		      .byte.b	128
   1149  f974		       80		      .byte.b	128
   1150  f975		       80		      .byte.b	128
   1151  f976		       80		      .byte.b	128
   1152  f977		       80		      .byte.b	128
   1153  f978		       80		      .byte.b	128
   1154  f979		       80		      .byte.b	128
   1155  f97a		       ff		      .byte.b	255
   1156  f97b		       ff		      .byte.b	255
   1157  f97c		       ff		      .byte.b	255
   1158  f97d		       ff		      .byte.b	255
   1159  f97e		       00		      .byte.b	0
   1160  f97f		       00		      .byte.b	0
   1161  f980							;end
   1162  f980
------- FILE PacMan.asm
   1113  f980
   1114  f980							;===============================================================================
   1115  f980							; free space check before page boundry
   1116  f980							;===============================================================================
   1117  f980
 End of MainBoard.asm is:  $f980
   1118  f980					      echo	"End of MainBoard.asm is: ", *
   1119  fa00		       00 00 00 00*	      align	256
   1120  fa00
   1121  fa00							;==================================================================================
   1122  fa00							; Bottom Data
   1123  fa00							;==================================================================================
   1124  fa00
   1125  fa00				   BottomData
   1126  fa00
   1127  fa00							; 0
   1128  fa00		       00		      .byte.b	%00000000
   1129  fa01		       00		      .byte.b	%00000000
   1130  fa02		       00		      .byte.b	%00000000
   1131  fa03		       7e		      .byte.b	%01111110
   1132  fa04		       7e		      .byte.b	%01111110
   1133  fa05		       e7		      .byte.b	%11100111
   1134  fa06		       e7		      .byte.b	%11100111
   1135  fa07		       c3		      .byte.b	%11000011
   1136  fa08		       c3		      .byte.b	%11000011
   1137  fa09		       c3		      .byte.b	%11000011
   1138  fa0a		       c3		      .byte.b	%11000011
   1139  fa0b		       c3		      .byte.b	%11000011
   1140  fa0c		       c3		      .byte.b	%11000011
   1141  fa0d		       c3		      .byte.b	%11000011
   1142  fa0e		       c3		      .byte.b	%11000011
   1143  fa0f		       e7		      .byte.b	%11100111
   1144  fa10		       e7		      .byte.b	%11100111
   1145  fa11		       7e		      .byte.b	%01111110
   1146  fa12		       7e		      .byte.b	%01111110
   1147  fa13		       00		      .byte.b	%00000000
   1148  fa14
   1149  fa14							; 1
   1150  fa14		       00		      .byte.b	%00000000
   1151  fa15		       00		      .byte.b	%00000000
   1152  fa16		       00		      .byte.b	%00000000
   1153  fa17		       ff		      .byte.b	%11111111
   1154  fa18		       ff		      .byte.b	%11111111
   1155  fa19		       1c		      .byte.b	%00011100
   1156  fa1a		       1c		      .byte.b	%00011100
   1157  fa1b		       1c		      .byte.b	%00011100
   1158  fa1c		       1c		      .byte.b	%00011100
   1159  fa1d		       1c		      .byte.b	%00011100
   1160  fa1e		       1c		      .byte.b	%00011100
   1161  fa1f		       1c		      .byte.b	%00011100
   1162  fa20		       1c		      .byte.b	%00011100
   1163  fa21		       1c		      .byte.b	%00011100
   1164  fa22		       1c		      .byte.b	%00011100
   1165  fa23		       fc		      .byte.b	%11111100
   1166  fa24		       7c		      .byte.b	%01111100
   1167  fa25		       3c		      .byte.b	%00111100
   1168  fa26		       1c		      .byte.b	%00011100
   1169  fa27		       00		      .byte.b	%00000000
   1170  fa28
   1171  fa28							; 2
   1172  fa28		       00		      .byte.b	%00000000
   1173  fa29		       00		      .byte.b	%00000000
   1174  fa2a		       00		      .byte.b	%00000000
   1175  fa2b		       ff		      .byte.b	%11111111
   1176  fa2c		       ff		      .byte.b	%11111111
   1177  fa2d		       e0		      .byte.b	%11100000
   1178  fa2e		       e0		      .byte.b	%11100000
   1179  fa2f		       70		      .byte.b	%01110000
   1180  fa30		       38		      .byte.b	%00111000
   1181  fa31		       1c		      .byte.b	%00011100
   1182  fa32		       0e		      .byte.b	%00001110
   1183  fa33		       07		      .byte.b	%00000111
   1184  fa34		       03		      .byte.b	%00000011
   1185  fa35		       03		      .byte.b	%00000011
   1186  fa36		       c3		      .byte.b	%11000011
   1187  fa37		       c3		      .byte.b	%11000011
   1188  fa38		       e7		      .byte.b	%11100111
   1189  fa39		       7e		      .byte.b	%01111110
   1190  fa3a		       3c		      .byte.b	%00111100
   1191  fa3b		       00		      .byte.b	%00000000
   1192  fa3c
   1193  fa3c							; 3
   1194  fa3c		       00		      .byte.b	%00000000
   1195  fa3d		       00		      .byte.b	%00000000
   1196  fa3e		       00		      .byte.b	%00000000
   1197  fa3f		       3c		      .byte.b	%00111100
   1198  fa40		       7e		      .byte.b	%01111110
   1199  fa41		       ef		      .byte.b	%11101111
   1200  fa42		       c7		      .byte.b	%11000111
   1201  fa43		       07		      .byte.b	%00000111
   1202  fa44		       07		      .byte.b	%00000111
   1203  fa45		       0e		      .byte.b	%00001110
   1204  fa46		       1c		      .byte.b	%00011100
   1205  fa47		       1c		      .byte.b	%00011100
   1206  fa48		       0e		      .byte.b	%00001110
   1207  fa49		       07		      .byte.b	%00000111
   1208  fa4a		       07		      .byte.b	%00000111
   1209  fa4b		       c7		      .byte.b	%11000111
   1210  fa4c		       ef		      .byte.b	%11101111
   1211  fa4d		       7e		      .byte.b	%01111110
   1212  fa4e		       3c		      .byte.b	%00111100
   1213  fa4f		       00		      .byte.b	%00000000
   1214  fa50
   1215  fa50							; 4
   1216  fa50		       00		      .byte.b	%00000000
   1217  fa51		       00		      .byte.b	%00000000
   1218  fa52		       00		      .byte.b	%00000000
   1219  fa53		       06		      .byte.b	%00000110
   1220  fa54		       06		      .byte.b	%00000110
   1221  fa55		       06		      .byte.b	%00000110
   1222  fa56		       06		      .byte.b	%00000110
   1223  fa57		       ff		      .byte.b	%11111111
   1224  fa58		       ff		      .byte.b	%11111111
   1225  fa59		       c6		      .byte.b	%11000110
   1226  fa5a		       c6		      .byte.b	%11000110
   1227  fa5b		       66		      .byte.b	%01100110
   1228  fa5c		       66		      .byte.b	%01100110
   1229  fa5d		       36		      .byte.b	%00110110
   1230  fa5e		       36		      .byte.b	%00110110
   1231  fa5f		       1e		      .byte.b	%00011110
   1232  fa60		       1e		      .byte.b	%00011110
   1233  fa61		       0e		      .byte.b	%00001110
   1234  fa62		       0e		      .byte.b	%00001110
   1235  fa63		       00		      .byte.b	%00000000
   1236  fa64
   1237  fa64							; 5
   1238  fa64		       00		      .byte.b	%00000000
   1239  fa65		       00		      .byte.b	%00000000
   1240  fa66		       00		      .byte.b	%00000000
   1241  fa67		       f8		      .byte.b	%11111000
   1242  fa68		       fc		      .byte.b	%11111100
   1243  fa69		       fe		      .byte.b	%11111110
   1244  fa6a		       0f		      .byte.b	%00001111
   1245  fa6b		       07		      .byte.b	%00000111
   1246  fa6c		       07		      .byte.b	%00000111
   1247  fa6d		       07		      .byte.b	%00000111
   1248  fa6e		       0f		      .byte.b	%00001111
   1249  fa6f		       fe		      .byte.b	%11111110
   1250  fa70		       fc		      .byte.b	%11111100
   1251  fa71		       e0		      .byte.b	%11100000
   1252  fa72		       e0		      .byte.b	%11100000
   1253  fa73		       e0		      .byte.b	%11100000
   1254  fa74		       e0		      .byte.b	%11100000
   1255  fa75		       ff		      .byte.b	%11111111
   1256  fa76		       ff		      .byte.b	%11111111
   1257  fa77		       00		      .byte.b	%00000000
   1258  fa78
   1259  fa78							; 6
   1260  fa78		       00		      .byte.b	%00000000
   1261  fa79		       00		      .byte.b	%00000000
   1262  fa7a		       00		      .byte.b	%00000000
   1263  fa7b		       3c		      .byte.b	%00111100
   1264  fa7c		       7e		      .byte.b	%01111110
   1265  fa7d		       e7		      .byte.b	%11100111
   1266  fa7e		       c3		      .byte.b	%11000011
   1267  fa7f		       c3		      .byte.b	%11000011
   1268  fa80		       c3		      .byte.b	%11000011
   1269  fa81		       e7		      .byte.b	%11100111
   1270  fa82		       fe		      .byte.b	%11111110
   1271  fa83		       fc		      .byte.b	%11111100
   1272  fa84		       c0		      .byte.b	%11000000
   1273  fa85		       c0		      .byte.b	%11000000
   1274  fa86		       c0		      .byte.b	%11000000
   1275  fa87		       c3		      .byte.b	%11000011
   1276  fa88		       e7		      .byte.b	%11100111
   1277  fa89		       7f		      .byte.b	%01111111
   1278  fa8a		       3e		      .byte.b	%00111110
   1279  fa8b		       00		      .byte.b	%00000000
   1280  fa8c
   1281  fa8c							; 7
   1282  fa8c		       00		      .byte.b	%00000000
   1283  fa8d		       00		      .byte.b	%00000000
   1284  fa8e		       00		      .byte.b	%00000000
   1285  fa8f		       18		      .byte.b	%00011000
   1286  fa90		       18		      .byte.b	%00011000
   1287  fa91		       18		      .byte.b	%00011000
   1288  fa92		       18		      .byte.b	%00011000
   1289  fa93		       18		      .byte.b	%00011000
   1290  fa94		       18		      .byte.b	%00011000
   1291  fa95		       18		      .byte.b	%00011000
   1292  fa96		       18		      .byte.b	%00011000
   1293  fa97		       0c		      .byte.b	%00001100
   1294  fa98		       0c		      .byte.b	%00001100
   1295  fa99		       0c		      .byte.b	%00001100
   1296  fa9a		       c6		      .byte.b	%11000110
   1297  fa9b		       c7		      .byte.b	%11000111
   1298  fa9c		       ff		      .byte.b	%11111111
   1299  fa9d		       ff		      .byte.b	%11111111
   1300  fa9e		       ff		      .byte.b	%11111111
   1301  fa9f		       00		      .byte.b	%00000000
   1302  faa0
   1303  faa0							; 8
   1304  faa0		       00		      .byte.b	%00000000
   1305  faa1		       00		      .byte.b	%00000000
   1306  faa2		       00		      .byte.b	%00000000
   1307  faa3		       3c		      .byte.b	%00111100
   1308  faa4		       7e		      .byte.b	%01111110
   1309  faa5		       e7		      .byte.b	%11100111
   1310  faa6		       c3		      .byte.b	%11000011
   1311  faa7		       c3		      .byte.b	%11000011
   1312  faa8		       c3		      .byte.b	%11000011
   1313  faa9		       e7		      .byte.b	%11100111
   1314  faaa		       7e		      .byte.b	%01111110
   1315  faab		       3c		      .byte.b	%00111100
   1316  faac		       66		      .byte.b	%01100110
   1317  faad		       c3		      .byte.b	%11000011
   1318  faae		       c3		      .byte.b	%11000011
   1319  faaf		       c3		      .byte.b	%11000011
   1320  fab0		       e7		      .byte.b	%11100111
   1321  fab1		       7e		      .byte.b	%01111110
   1322  fab2		       3c		      .byte.b	%00111100
   1323  fab3		       00		      .byte.b	%00000000
   1324  fab4
   1325  fab4							; 9
   1326  fab4		       00		      .byte.b	%00000000
   1327  fab5		       00		      .byte.b	%00000000
   1328  fab6		       00		      .byte.b	%00000000
   1329  fab7		       3c		      .byte.b	%00111100
   1330  fab8		       7e		      .byte.b	%01111110
   1331  fab9		       e7		      .byte.b	%11100111
   1332  faba		       c3		      .byte.b	%11000011
   1333  fabb		       03		      .byte.b	%00000011
   1334  fabc		       03		      .byte.b	%00000011
   1335  fabd		       03		      .byte.b	%00000011
   1336  fabe		       3f		      .byte.b	%00111111
   1337  fabf		       7f		      .byte.b	%01111111
   1338  fac0		       e7		      .byte.b	%11100111
   1339  fac1		       c3		      .byte.b	%11000011
   1340  fac2		       c3		      .byte.b	%11000011
   1341  fac3		       c3		      .byte.b	%11000011
   1342  fac4		       e7		      .byte.b	%11100111
   1343  fac5		       fe		      .byte.b	%11111110
   1344  fac6		       7c		      .byte.b	%01111100
   1345  fac7		       00		      .byte.b	%00000000
   1346  fac8		       00		      .byte.b	%00000000
   1347  fac9
   1348  fac9							;==================================================================================
   1349  fac9							; Interrupt Routines
   1350  fac9							;==================================================================================
   1351  fac9
   1352  10000 ????				       SEG	Interrupt
   1353  fffa					      ORG	$FFFA
   1354  fffa
   1355  fffa				   InterruptVectors
   1356  fffa		       00 f0		      .word.w	Reset
   1357  fffc		       00 f0		      .word.w	Reset
   1358  fffe		       00 f0		      .word.w	Reset
   1359  10000
   1360  10000					       END
