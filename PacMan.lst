------- FILE PacMan.asm LEVEL 1 PASS 2
      1  10000					       processor	6502
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       include	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.06, 06/SEP/2020
      3  10000 ????
      4  10000 ????		00 6a	    VERSION_VCS =	106
      5  10000 ????
      6  10000 ????						; THIS IS *THE* "STANDARD" VCS.H
      7  10000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  10000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  10000 ????						;
     10  10000 ????						; This file defines hardware registers and memory mapping for the
     11  10000 ????						; Atari 2600. It is distributed as a companion machine-specific support package
     12  10000 ????						; for the DASM compiler. Updates to this file, DASM, and associated tools are
     13  10000 ????						; available at at https://dasm-assembler.github.io/
     14  10000 ????						;
     15  10000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     16  10000 ????						; contents, or would like ot add something, please report as an issue at...
     17  10000 ????						; https://github.com/dasm-assembler/dasm/issues
     18  10000 ????
     19  10000 ????						;
     20  10000 ????						; Latest Revisions...
     21  10000 ????						; 1.06  05/SEP/2020	 Modified header/license and links to new versions
     22  10000 ????						; 1.05  13/NOV/2003	  - Correction to 1.04 - now functions as requested by MR.
     23  10000 ????						;			  - Added VERSION_VCS equate (which will reflect 100x version #)
     24  10000 ????						;			    This will allow conditional code to verify VCS.H being
     25  10000 ????						;			    used for code assembly.
     26  10000 ????						; 1.04  12/NOV/2003	 Added TIA_BASE_WRITE_ADDRESS and TIA_BASE_READ_ADDRESS for
     27  10000 ????						;			 convenient disassembly/reassembly compatibility for hardware
     28  10000 ????						;			 mirrored reading/writing differences.	This is more a 
     29  10000 ????						;			 readability issue, and binary compatibility with disassembled
     30  10000 ????						;			 and reassembled sources.  Per Manuel Rotschkar's suggestion.
     31  10000 ????						; 1.03  12/MAY/2003	 Added SEG segment at end of file to fix old-code compatibility
     32  10000 ????						;			 which was broken by the use of segments in this file, as
     33  10000 ????						;			 reported by Manuel Polik on [stella] 11/MAY/2003
     34  10000 ????						; 1.02  22/MAR/2003	 Added TIMINT($285)
     35  10000 ????						; 1.01				Constant offset added to allow use for 3F-style bankswitching
     36  10000 ????						;						 - define TIA_BASE_ADDRESS as $40 for Tigervision carts, otherwise
     37  10000 ????						;						   it is safe to leave it undefined, and the base address will
     38  10000 ????						;						   be set to 0.  Thanks to Eckhard Stolberg for the suggestion.
     39  10000 ????						;			    Note, may use -DLABEL=EXPRESSION to define TIA_BASE_ADDRESS
     40  10000 ????						;			  - register definitions are now generated through assignment
     41  10000 ????						;			    in uninitialised segments.	This allows a changeable base
     42  10000 ????						;			    address architecture.
     43  10000 ????						; 1.0	22/MAR/2003		Initial release
     44  10000 ????
     45  10000 ????
     46  10000 ????						;-------------------------------------------------------------------------------
     47  10000 ????
     48  10000 ????						; TIA_BASE_ADDRESS
     49  10000 ????						; The TIA_BASE_ADDRESS defines the base address of access to TIA registers.
     50  10000 ????						; Normally 0, the base address should (externally, before including this file)
     51  10000 ????						; be set to $40 when creating 3F-bankswitched (and other?) cartridges.
     52  10000 ????						; The reason is that this bankswitching scheme treats any access to locations
     53  10000 ????						; < $40 as a bankswitch.
     54  10000 ????
     55  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
     56  10000 ????			   -TIA_BASE_ADDRESS =	0
     57  10000 ????				       ENDIF
     58  10000 ????
     59  10000 ????						; Note: The address may be defined on the command-line using the -D switch, eg:
     60  10000 ????						; dasm.exe code.asm -DTIA_BASE_ADDRESS=$40 -f3 -v5 -ocode.bin
     61  10000 ????						; *OR* by declaring the label before including this file, eg:
     62  10000 ????						; TIA_BASE_ADDRESS = $40
     63  10000 ????						;   include "vcs.h"
     64  10000 ????
     65  10000 ????						; Alternate read/write address capability - allows for some disassembly compatibility
     66  10000 ????						; usage ; to allow reassembly to binary perfect copies).  This is essentially catering
     67  10000 ????						; for the mirrored ROM hardware registers.
     68  10000 ????
     69  10000 ????						; Usage: As per above, define the TIA_BASE_READ_ADDRESS and/or TIA_BASE_WRITE_ADDRESS
     70  10000 ????						; using the -D command-line switch, as required.  If the addresses are not defined, 
     71  10000 ????						; they defaut to the TIA_BASE_ADDRESS.
     72  10000 ????
     73  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     74  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     75  10000 ????				       ENDIF
     76  10000 ????
     77  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     78  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     79  10000 ????				       ENDIF
     80  10000 ????
     81  10000 ????						;-------------------------------------------------------------------------------
     82  10000 ????
     83 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     84 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     85 U0000
     86 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     87 U0000
     88 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     89 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     90 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     91 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     92 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     93 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     94 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     95 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     96 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     97 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     98 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     99 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
    100 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
    101 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
    102 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
    103 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
    104 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
    105 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
    106 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
    107 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
    108 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
    109 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
    110 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
    111 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
    112 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
    113 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
    114 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
    115 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
    116 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
    117 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
    118 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
    119 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
    120 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
    121 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
    122 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
    123 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
    124 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
    125 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
    126 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
    127 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
    128 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
    129 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
    130 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
    131 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
    132 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
    133 U002d
    134 U002d							;-------------------------------------------------------------------------------
    135 U002d
    136 U000e ????				      SEG.U	TIA_REGISTERS_READ
    137 U0000					      ORG	TIA_BASE_READ_ADDRESS
    138 U0000
    139 U0000							;											bit 7	 bit 6
    140 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
    141 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
    142 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
    143 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
    144 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
    145 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
    146 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
    147 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
    148 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
    149 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
    150 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
    151 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
    152 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
    153 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
    154 U000e
    155 U000e							;-------------------------------------------------------------------------------
    156 U000e
    157 U0298 ????				      SEG.U	RIOT
    158 U0280					      ORG	$280
    159 U0280
    160 U0280							; RIOT MEMORY MAP
    161 U0280
    162 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    163 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    164 U0281
    165 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    166 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    167 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    168 U0284		       00	   INTIM      ds	1	; $284		Timer output
    169 U0285
    170 U0285		       00	   TIMINT     ds	1	; $285
    171 U0286
    172 U0286							; Unused/undefined registers ($285-$294)
    173 U0286
    174 U0286		       00		      ds	1	; $286
    175 U0287		       00		      ds	1	; $287
    176 U0288		       00		      ds	1	; $288
    177 U0289		       00		      ds	1	; $289
    178 U028a		       00		      ds	1	; $28A
    179 U028b		       00		      ds	1	; $28B
    180 U028c		       00		      ds	1	; $28C
    181 U028d		       00		      ds	1	; $28D
    182 U028e		       00		      ds	1	; $28E
    183 U028f		       00		      ds	1	; $28F
    184 U0290		       00		      ds	1	; $290
    185 U0291		       00		      ds	1	; $291
    186 U0292		       00		      ds	1	; $292
    187 U0293		       00		      ds	1	; $293
    188 U0294
    189 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    190 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    191 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    192 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    193 U0298
    194 U0298							;-------------------------------------------------------------------------------
    195 U0298							; The following required for back-compatibility with code which does not use
    196 U0298							; segments.
    197 U0298
    198  0000 ????				      SEG
    199  0000 ????
    200  0000 ????						; EOF
------- FILE PacMan.asm
------- FILE macro.h LEVEL 2 PASS 2
      0  0000 ????				      include	"macro.h"
      1  0000 ????						; MACRO.H
      2  0000 ????						; Version 1.09, 05/SEP/2020
      3  0000 ????
      4  0000 ????	       00 6d	   VERSION_MACRO =	109
      5  0000 ????
      6  0000 ????						;
      7  0000 ????						; THIS FILE IS EXPLICITLY SUPPORTED AS A DASM-PREFERRED COMPANION FILE
      8  0000 ????						; The latest version can be found at https://dasm-assembler.github.io/
      9  0000 ????						;
     10  0000 ????						; This file defines DASM macros useful for development for the Atari 2600.
     11  0000 ????						; It is distributed as a companion machine-specific support package
     12  0000 ????						; for the DASM compiler.
     13  0000 ????						;
     14  0000 ????						; Many thanks to the people who have contributed. If you find an issue with the
     15  0000 ????						; contents, or would like ot add something, please report as an issue at...
     16  0000 ????						; https://github.com/dasm-assembler/dasm/issues
     17  0000 ????
     18  0000 ????
     19  0000 ????						; Latest Revisions...
     20  0000 ????						; 1.09  05/SEP/2020	 - updated license/links
     21  0000 ????
     22  0000 ????						; 1.08  13/JUL/2020	 - added use of LXA to CLEAN_START
     23  0000 ????						; 1.07  19/JAN/2020	 - correction to comment VERTICAL_SYNC
     24  0000 ????						; 1.06  03/SEP/2004	 - nice revision of VERTICAL_SYNC (Edwin Blink)
     25  0000 ????						; 1.05  14/NOV/2003	 - Added VERSION_MACRO equate (which will reflect 100x version #)
     26  0000 ????						;			   This will allow conditional code to verify MACRO.H being
     27  0000 ????						;			   used for code assembly.
     28  0000 ????						; 1.04  13/NOV/2003	 - SET_POINTER macro added (16-bit address load)
     29  0000 ????						;
     30  0000 ????						; 1.03  23/JUN/2003	 - CLEAN_START macro added - clears TIA, RAM, registers
     31  0000 ????						;
     32  0000 ????						; 1.02  14/JUN/2003	 - VERTICAL_SYNC macro added
     33  0000 ????						;			   (standardised macro for vertical synch code)
     34  0000 ????						; 1.01  22/MAR/2003	 - SLEEP macro added. 
     35  0000 ????						;			 - NO_ILLEGAL_OPCODES switch implemented
     36  0000 ????						; 1.0	22/MAR/2003		Initial release
     37  0000 ????
     38  0000 ????						; Note: These macros use illegal opcodes.  To disable illegal opcode usage, 
     39  0000 ????						;   define the symbol NO_ILLEGAL_OPCODES (-DNO_ILLEGAL_OPCODES=1 on command-line).
     40  0000 ????						;   If you do not allow illegal opcode usage, you must include this file 
     41  0000 ????						;   *after* including VCS.H (as the non-illegal opcodes access hardware
     42  0000 ????						;   registers and require them to be defined first).
     43  0000 ????
     44  0000 ????						; Available macros...
     45  0000 ????						;   SLEEP n		 - sleep for n cycles
     46  0000 ????						;   VERTICAL_SYNC	 - correct 3 scanline vertical synch code
     47  0000 ????						;   CLEAN_START	 - set machine to known state on startup
     48  0000 ????						;   SET_POINTER	 - load a 16-bit absolute to a 16-bit variable
     49  0000 ????
     50  0000 ????						;-------------------------------------------------------------------------------
     51  0000 ????						; SLEEP duration
     52  0000 ????						; Original author: Thomas Jentzsch
     53  0000 ????						; Inserts code which takes the specified number of cycles to execute.	This is
     54  0000 ????						; useful for code where precise timing is required.
     55  0000 ????						; ILLEGAL-OPCODE VERSION DOES NOT AFFECT FLAGS OR REGISTERS.
     56  0000 ????						; LEGAL OPCODE VERSION MAY AFFECT FLAGS
     57  0000 ????						; Uses illegal opcode (DASM 2.20.01 onwards).
     58  0000 ????
     59  0000 ????				      MAC	sleep
     60  0000 ????			   .CYCLES    SET	{1}
     61  0000 ????
     62  0000 ????				      IF	.CYCLES < 2
     63  0000 ????				      ECHO	"MACRO ERROR: 'SLEEP': Duration must be > 1"
     64  0000 ????				      ERR
     65  0000 ????				      ENDIF
     66  0000 ????
     67  0000 ????				      IF	.CYCLES & 1
     68  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
     69  0000 ????				      nop	0
     70  0000 ????				      ELSE
     71  0000 ????				      bit	VSYNC
     72  0000 ????				      ENDIF
     73  0000 ????			   .CYCLES    SET	.CYCLES - 3
     74  0000 ????				      ENDIF
     75  0000 ????
     76  0000 ????				      REPEAT	.CYCLES / 2
     77  0000 ????				      nop
     78  0000 ????				      REPEND
     79  0000 ????				      ENDM		;usage: SLEEP n (n>1)
     80  0000 ????
     81  0000 ????						;-------------------------------------------------------------------------------
     82  0000 ????						; VERTICAL_SYNC
     83  0000 ????						; revised version by Edwin Blink -- saves bytes!
     84  0000 ????						; Inserts the code required for a proper 3 scanline vertical sync sequence
     85  0000 ????						; Note: Alters the accumulator
     86  0000 ????
     87  0000 ????						; OUT: A = 0
     88  0000 ????
     89  0000 ????				      MAC	vertical_sync
     90  0000 ????				      lda	#%1110	; each '1' bits generate a VSYNC ON line (bits 1..3)
     91  0000 ????			   .VSLP1     sta	WSYNC	; 1st '0' bit resets Vsync, 2nd '0' bit exit loop
     92  0000 ????				      sta	VSYNC
     93  0000 ????				      lsr
     94  0000 ????				      bne	.VSLP1	; branch until VYSNC has been reset
     95  0000 ????				      ENDM
     96  0000 ????
     97  0000 ????						;-------------------------------------------------------------------------------
     98  0000 ????						; CLEAN_START
     99  0000 ????						; Original author: Andrew Davie
    100  0000 ????						; Standardised start-up code, clears stack, all TIA registers and RAM to 0
    101  0000 ????						; Sets stack pointer to $FF, and all registers to 0
    102  0000 ????						; Sets decimal mode off, sets interrupt flag (kind of un-necessary)
    103  0000 ????						; Use as very first section of code on boot (ie: at reset)
    104  0000 ????						; Code written to minimise total ROM usage - uses weird 6502 knowledge :)
    105  0000 ????
    106  0000 ????				      MAC	clean_start
    107  0000 ????				      sei
    108  0000 ????				      cld
    109  0000 ????
    110  0000 ????				      IFNCONST	NO_ILLEGAL_OPCODES
    111  0000 ????				      lxa	#0
    112  0000 ????				      ELSE
    113  0000 ????				      ldx	#0
    114  0000 ????				      txa
    115  0000 ????				      ENDIF
    116  0000 ????				      tay
    117  0000 ????			   .CLEAR_STACK dex
    118  0000 ????				      txs
    119  0000 ????				      pha
    120  0000 ????				      bne	.CLEAR_STACK	; SP=$FF, X = A = Y = 0
    121  0000 ????
    122  0000 ????				      ENDM
    123  0000 ????
    124  0000 ????						;-------------------------------------------------------
    125  0000 ????						; SET_POINTER
    126  0000 ????						; Original author: Manuel Rotschkar
    127  0000 ????						;
    128  0000 ????						; Sets a 2 byte RAM pointer to an absolute address.
    129  0000 ????						;
    130  0000 ????						; Usage: SET_POINTER pointer, address
    131  0000 ????						; Example: SET_POINTER SpritePTR, SpriteData
    132  0000 ????						;
    133  0000 ????						; Note: Alters the accumulator, NZ flags
    134  0000 ????						; IN 1: 2 byte RAM location reserved for pointer
    135  0000 ????						; IN 2: absolute address
    136  0000 ????
    137  0000 ????				      MAC	set_pointer
    138  0000 ????			   .POINTER   SET	{1}
    139  0000 ????			   .ADDRESS   SET	{2}
    140  0000 ????
    141  0000 ????				      LDA	#<.ADDRESS	; Get Lowbyte of Address
    142  0000 ????				      STA	.POINTER	; Store in pointer
    143  0000 ????				      LDA	#>.ADDRESS	; Get Hibyte of Address
    144  0000 ????				      STA	.POINTER+1	; Store in pointer+1
    145  0000 ????
    146  0000 ????				      ENDM
    147  0000 ????
    148  0000 ????						;-------------------------------------------------------
    149  0000 ????						; BOUNDARY byte#
    150  0000 ????						; Original author: Denis Debro (borrowed from Bob Smith / Thomas)
    151  0000 ????						;
    152  0000 ????						; Push data to a certain position inside a page and keep count of how
    153  0000 ????						; many free bytes the programmer will have.
    154  0000 ????						;
    155  0000 ????						; eg: BOUNDARY 5    ; position at byte #5 in page
    156  0000 ????
    157  0000 ????			   .FREE_BYTES SET	0
    158  0000 ????				      MAC	boundary
    159  0000 ????				      REPEAT	256
    160  0000 ????				      IF	<. % {1} = 0
    161  0000 ????				      MEXIT
    162  0000 ????				      ELSE
    163  0000 ????			   .FREE_BYTES SET	.FREE_BYTES + 1
    164  0000 ????				      .byte	$00
    165  0000 ????				      ENDIF
    166  0000 ????				      REPEND
    167  0000 ????				      ENDM
    168  0000 ????
    169  0000 ????
    170  0000 ????						; EOF
------- FILE PacMan.asm
      4  0000 ????
      5  0000 ????						;==================================================================================
      6  0000 ????						; Program Definitions
      7  0000 ????						;==================================================================================
      8  0000 ????
      9  0000 ????	       00 12	   SPRITE_HEIGHT =	18
     10  0000 ????	       00 05	   TIMER_LIMIT =	5
     11  0000 ????
     12  0000 ????						;==================================================================================
     13  0000 ????						; Program Variables
     14  0000 ????						;==================================================================================
     15  0000 ????
     16 U009f ????				      SEG.U	Variables
     17 U0080					      ORG	$80
     18 U0080
     19 U0080		       00	   PS_temp    ds	1
     20 U0081
     21 U0081		       00 00	   SpriteAddrPtr ds	2
     22 U0083		       00	   SpriteXPos ds	1
     23 U0084		       00	   SpriteYPos ds	1
     24 U0085		       00	   LastSpriteXPos ds	1
     25 U0086		       00	   LastSpriteYPos ds	1
     26 U0087		       00	   PlayerVelocityMask ds	1
     27 U0088
     28 U0088		       00 00	   SpriteGhostAddrPtr ds	2
     29 U008a		       00	   GhostSpriteXPos ds	1
     30 U008b		       00	   GhostSpriteYPos ds	1
     31 U008c
     32 U008c		       00	   CurWaferXPos0 ds	1
     33 U008d		       00	   WaferXPosIndex ds	1
     34 U008e		       00 00 00 00*WaferArray ds	6
     35 U0094		       00	   PickedUpWaferBuffer ds	1
     36 U0095
     37 U0095		       00	   SpriteAnimationIndex ds	1
     38 U0096		       00	   IsFrameGoingUp ds	1
     39 U0097
     40 U0097		       00	   ScoreTens  ds	1
     41 U0098		       00	   ScoreOnes  ds	1
     42 U0099		       00	   TensOffset ds	1
     43 U009a		       00	   OnesOffset ds	1
     44 U009b		       00	   ScoreDisplayTemp ds	1
     45 U009c
     46 U009c		       00	   TimerCounter ds	1
     47 U009d
     48 U009d		       00	   PlayerReflectedBuffer ds	1
     49 U009e		       00	   GhostReflectedBuffer ds	1
     50 U009f
     51 U009f							;==================================================================================
     52 U009f							; Program Initialization
     53 U009f							;==================================================================================
     54 U009f
     55  fcc9 ????				      SEG	Executable
     56  f000					      ORG	$F000
     57  f000
     58  f000				   Reset
     59  f000				   ClearMemory
     60  f000		       a2 00		      LDX	#0
     61  f002		       9a		      TXS
     62  f003		       48		      PHA
     63  f004		       8a		      TXA
     64  f005
     65  f005				   ClearMemoryLoop
     66  f005		       48		      PHA
     67  f006		       ca		      DEX
     68  f007		       d0 fc		      BNE	ClearMemoryLoop
     69  f009
     70  f009		       20 3d f1 	      JSR	InitVariables
     71  f00c
     72  f00c							;==================================================================================
     73  f00c							; Main Loop
     74  f00c							;==================================================================================
     75  f00c
     76  f00c				   Main
     77  f00c		       20 1b f0 	      JSR	HandleVSync
     78  f00f		       20 2a f0 	      JSR	HandleVBlank
     79  f012		       20 48 f0 	      JSR	MainKernel
     80  f015		       20 dd f0 	      JSR	Overscan
     81  f018		       4c 0c f0 	      JMP	Main
     82  f01b
     83  f01b							;==================================================================================
     84  f01b							; HandleVSync
     85  f01b							;==================================================================================
     86  f01b
     87  f01b				   HandleVSync
     88  f01b		       a9 00		      LDA	#0
     89  f01d		       85 01		      STA	VBLANK
     90  f01f		       a9 02		      LDA	#2
     91  f021		       85 00		      STA	VSYNC
     92  f023
     93  f023				   VSyncLoop
     94  f023		       85 02		      STA	WSYNC
     95  f025		       85 02		      STA	WSYNC
     96  f027		       85 02		      STA	WSYNC
     97  f029
     98  f029		       60		      RTS
     99  f02a
    100  f02a							;==================================================================================
    101  f02a							; HandleVBlank
    102  f02a							; Handle Part of Game Logic
    103  f02a							;==================================================================================
    104  f02a
    105  f02a				   HandleVBlank
    106  f02a
    107  f02a							; Initialize TIM64T
    108  f02a		       a9 2a		      LDA	#42
    109  f02c		       8d 96 02 	      STA	TIM64T
    110  f02f
    111  f02f							; Prepare Registers for VBLANK
    112  f02f		       a9 00		      LDA	#0
    113  f031		       85 00		      STA	VSYNC
    114  f033		       a9 42		      LDA	#%01000010
    115  f035		       85 01		      STA	VBLANK
    116  f037
    117  f037							; Processing Tasks
    118  f037		       20 72 f3 	      JSR	GetControllerInputs
    119  f03a		       20 b0 f3 	      JSR	GetController2InputsDEBUG
    120  f03d		       20 2d f2 	      JSR	UpdateEntities
    121  f040
    122  f040				   VBlankLoop
    123  f040		       ad 84 02 	      LDA	INTIM
    124  f043		       d0 fb		      BNE	VBlankLoop
    125  f045
    126  f045		       85 02		      STA	WSYNC
    127  f047		       60		      RTS
    128  f048
    129  f048							;==================================================================================
    130  f048							; MainKernel
    131  f048							;==================================================================================
    132  f048
    133  f048				   MainKernel
    134  f048		       a9 00		      LDA	#0
    135  f04a		       85 01		      STA	VBLANK
    136  f04c
    137  f04c							; Position Player and Ghost According to XPos
    138  f04c		       20 89 f1 	      JSR	PositionSpriteX
    139  f04f		       20 be f1 	      JSR	PositionGhostSpriteX
    140  f052
    141  f052							; Position Wafer in XPos
    142  f052		       20 f8 f1 	      JSR	PositionWaferX0
    143  f055
    144  f055		       a2 bf		      LDX	#191
    145  f057		       85 02		      STA	WSYNC
    146  f059
    147  f059				   MainFrameLoop
    148  f059							; First Line
    149  f059
    150  f059							; Load First Playfield
    151  f059		       bd 00 f7 	      LDA	MainBoard_STRIP_0,x	; 4  4   0
    152  f05c		       85 0d		      STA	PF0	; 3  7   12
    153  f05e
    154  f05e		       bd c0 f7 	      LDA	MainBoard_STRIP_1,x	; 4  11   33
    155  f061		       85 0e		      STA	PF1	; 3  14   42
    156  f063
    157  f063		       bd 80 f8 	      LDA	MainBoard_STRIP_2,x	; 4  18
    158  f066		       85 0f		      STA	PF2	; 3  21
    159  f068
    160  f068							; Check if line has wafer
    161  f068		       bd 35 f4 	      LDA	CheckLineBytes,x
    162  f06b		       f0 14		      BEQ	DoNotDrawWafer
    163  f06d
    164  f06d				   DoDrawWafer
    165  f06d							; Verify if water is picked up
    166  f06d		       a4 8d		      LDY	WaferXPosIndex
    167  f06f		       b9 8e 00 	      LDA	WaferArray,y
    168  f072
    169  f072		       bc 35 f4 	      LDY	CheckLineBytes,x
    170  f075		       39 22 f4 	      AND	FindWaferLookUp,y
    171  f078		       d0 07		      BNE	DoNotDrawWafer
    172  f07a
    173  f07a							; Draw wafer
    174  f07a		       a9 02		      LDA	#%10
    175  f07c		       85 1d		      STA	ENAM0
    176  f07e		       4c 85 f0 	      JMP	AfterDrawing
    177  f081
    178  f081				   DoNotDrawWafer
    179  f081							; If flow comes from BEQ DoNotDrawWafer, A = 0; Else, A = %10
    180  f081		       a9 00		      LDA	#0
    181  f083		       85 1d		      STA	ENAM0
    182  f085
    183  f085				   AfterDrawing
    184  f085							; Check Vertical Sprite (P0) Drawing
    185  f085		       8a		      TXA		; 2
    186  f086		       38		      SEC		; 2
    187  f087		       e5 84		      SBC	SpriteYPos	; 3
    188  f089		       69 12		      ADC	#SPRITE_HEIGHT	; 2
    189  f08b
    190  f08b							; Load P0 Sprite Data
    191  f08b		       90 05		      BCC	SkipDrawingP0	; 3
    192  f08d		       a8		      TAY		; 3
    193  f08e		       b1 81		      LDA	(SpriteAddrPtr),y	; 5
    194  f090		       85 1b		      STA	GRP0	; 3
    195  f092
    196  f092				   SkipDrawingP0
    197  f092							; Decrease X and Go To Next Line
    198  f092		       85 02		      STA	WSYNC	; 3
    199  f094		       ca		      DEX		; 2
    200  f095		       f0 39		      BEQ	MainFrameLoopEnd	; 2 
    201  f097
    202  f097							; Second Line
    203  f097
    204  f097							; Load First Playfield
    205  f097		       bd 00 f7 	      LDA	MainBoard_STRIP_0,x	; 4
    206  f09a		       85 0d		      STA	PF0	; 3
    207  f09c
    208  f09c		       bd c0 f7 	      LDA	MainBoard_STRIP_1,x	; 4
    209  f09f		       85 0e		      STA	PF1	; 3
    210  f0a1
    211  f0a1		       bd 80 f8 	      LDA	MainBoard_STRIP_2,x	; 4
    212  f0a4		       85 0f		      STA	PF2	; 3
    213  f0a6
    214  f0a6							; Check Collision Between Player and Wafer
    215  f0a6		       24 00		      BIT	CXM0P
    216  f0a8		       50 14		      BVC	DidntGetWafer
    217  f0aa
    218  f0aa				   GotWafer
    219  f0aa							; Routine to save wafer as picked up
    220  f0aa		       a4 8d		      LDY	WaferXPosIndex
    221  f0ac		       b9 8e 00 	      LDA	WaferArray,y
    222  f0af
    223  f0af		       bc 35 f4 	      LDY	CheckLineBytes,x
    224  f0b2
    225  f0b2							; Mark Wafer Picked Up for Frame
    226  f0b2		       19 22 f4 	      ORA	FindWaferLookUp,y
    227  f0b5
    228  f0b5		       a4 8d		      LDY	WaferXPosIndex
    229  f0b7		       99 8e 00 	      STA	WaferArray,y
    230  f0ba
    231  f0ba							; Reset Collision Detection
    232  f0ba		       85 94		      STA	PickedUpWaferBuffer
    233  f0bc		       85 2c		      STA	CXCLR
    234  f0be
    235  f0be				   DidntGetWafer
    236  f0be							; Check Ghost Vertical Drawing
    237  f0be		       8a		      TXA		; 2
    238  f0bf		       38		      SEC		; 2
    239  f0c0		       e5 8b		      SBC	GhostSpriteYPos	; 3
    240  f0c2		       69 12		      ADC	#SPRITE_HEIGHT	; 2
    241  f0c4
    242  f0c4							; Load Ghost Sprite Data
    243  f0c4		       90 05		      BCC	SkipGhostDrawing	; 3
    244  f0c6		       a8		      TAY		; 3
    245  f0c7		       b1 88		      LDA	(SpriteGhostAddrPtr),y	; 5
    246  f0c9		       85 1c		      STA	GRP1	; 3
    247  f0cb
    248  f0cb				   SkipGhostDrawing
    249  f0cb							; Decrease X and Go To Next Line
    250  f0cb		       85 02		      STA	WSYNC	; 3
    251  f0cd		       ca		      DEX		; 2
    252  f0ce		       d0 89		      BNE	MainFrameLoop	; 2
    253  f0d0
    254  f0d0				   MainFrameLoopEnd
    255  f0d0							; Clearing Playfield Registers
    256  f0d0		       a9 00		      LDA	#0
    257  f0d2		       85 0d		      STA	PF0
    258  f0d4		       85 0e		      STA	PF1
    259  f0d6		       85 0f		      STA	PF2
    260  f0d8
    261  f0d8		       85 1b		      STA	GRP0
    262  f0da		       85 1c		      STA	GRP1
    263  f0dc
    264  f0dc		       60		      RTS
    265  f0dd
    266  f0dd							;==================================================================================
    267  f0dd							; Overscan
    268  f0dd							;==================================================================================
    269  f0dd
    270  f0dd				   Overscan
    271  f0dd
    272  f0dd							; Prepare Registers for Overscan Drawing
    273  f0dd		       a9 00		      LDA	#0
    274  f0df		       85 0e		      STA	PF1
    275  f0e1		       85 0b		      STA	REFP0
    276  f0e3		       85 0c		      STA	REFP1
    277  f0e5
    278  f0e5		       a9 0e		      LDA	#$0E
    279  f0e7		       85 06		      STA	COLUP0
    280  f0e9		       85 07		      STA	COLUP1
    281  f0eb
    282  f0eb							; Calculate Tens Offset
    283  f0eb		       a6 97		      LDX	ScoreTens
    284  f0ed		       bd 2a f4 	      LDA	MultBy20,x
    285  f0f0		       85 99		      STA	TensOffset
    286  f0f2
    287  f0f2							; Calculate Ones Offset
    288  f0f2		       a6 98		      LDX	ScoreOnes
    289  f0f4		       bd 2a f4 	      LDA	MultBy20,x
    290  f0f7		       85 9a		      STA	OnesOffset
    291  f0f9
    292  f0f9							; Adjust Score Placement
    293  f0f9		       85 02		      STA	WSYNC
    294  f0fb		       20 1b f4 	      JSR	Delay12
    295  f0fe		       20 1b f4 	      JSR	Delay12
    296  f101		       85 10		      STA	RESP0
    297  f103		       85 11		      STA	RESP1
    298  f105
    299  f105		       a2 1c		      LDX	#28
    300  f107				   OverscanLoop
    301  f107
    302  f107							; Is it time to draw?
    303  f107		       e0 0a		      CPX	#10
    304  f109		       90 16		      BCC	SmallerThan9
    305  f10b
    306  f10b							; Time to draw
    307  f10b		       8a		      TXA
    308  f10c		       e9 09		      SBC	#9
    309  f10e		       65 99		      ADC	TensOffset
    310  f110		       a8		      TAY
    311  f111		       b9 00 fc 	      LDA	BottomData,y
    312  f114		       85 1b		      STA	GRP0
    313  f116
    314  f116		       8a		      TXA
    315  f117		       e9 09		      SBC	#9
    316  f119		       65 9a		      ADC	OnesOffset
    317  f11b		       a8		      TAY
    318  f11c		       b9 00 fc 	      LDA	BottomData,y
    319  f11f		       85 1c		      STA	GRP1
    320  f121
    321  f121				   SmallerThan9
    322  f121		       85 02		      STA	WSYNC
    323  f123		       ca		      DEX
    324  f124		       d0 e1		      BNE	OverscanLoop
    325  f126
    326  f126							; Clear Player Registers
    327  f126		       a9 00		      LDA	#0
    328  f128		       85 1b		      STA	GRP0
    329  f12a		       85 1c		      STA	GRP1
    330  f12c
    331  f12c							; Return P0 Register Reflection Value
    332  f12c		       a5 9d		      LDA	PlayerReflectedBuffer
    333  f12e		       85 0b		      STA	REFP0
    334  f130
    335  f130							; Return P1 Register Reflection Value
    336  f130		       a5 9e		      LDA	GhostReflectedBuffer
    337  f132		       85 0c		      STA	REFP1
    338  f134
    339  f134							; Return P0 and P1 colors
    340  f134		       a9 1e		      LDA	#$1E
    341  f136		       85 06		      STA	COLUP0
    342  f138		       a9 58		      LDA	#$58
    343  f13a		       85 07		      STA	COLUP1
    344  f13c
    345  f13c		       60		      RTS
    346  f13d
    347  f13d							;==================================================================================
    348  f13d							; InitVariables
    349  f13d							;==================================================================================
    350  f13d
    351  f13d				   InitVariables
    352  f13d							; Initialize BG Color and PF Color
    353  f13d		       a9 00		      LDA	#$00
    354  f13f		       85 09		      STA	COLUBK
    355  f141		       a9 72		      LDA	#$72
    356  f143		       85 08		      STA	COLUPF
    357  f145
    358  f145							; Initialize Player Color and Pattern
    359  f145		       a9 1e		      LDA	#$1E
    360  f147		       85 06		      STA	COLUP0
    361  f149		       a9 58		      LDA	#$58
    362  f14b		       85 07		      STA	COLUP1
    363  f14d
    364  f14d							; Initialize CTRLPF
    365  f14d		       a9 01		      LDA	#1
    366  f14f		       85 0a		      STA	CTRLPF
    367  f151
    368  f151							; Initialize Missile Graphics
    369  f151		       a9 20		      LDA	#%100000
    370  f153		       85 04		      STA	NUSIZ0
    371  f155
    372  f155							; Initialize Variables
    373  f155
    374  f155							; SpriteXPos and YPos
    375  f155		       a9 14		      LDA	#20
    376  f157		       85 83		      STA	SpriteXPos
    377  f159		       a9 6b		      LDA	#107
    378  f15b		       85 84		      STA	SpriteYPos
    379  f15d
    380  f15d							; SpriteGhostXPos and YPos
    381  f15d		       a9 4d		      LDA	#77
    382  f15f		       85 8a		      STA	GhostSpriteXPos
    383  f161		       a9 82		      LDA	#130
    384  f163		       85 8b		      STA	GhostSpriteYPos
    385  f165
    386  f165							; Timer Counter
    387  f165		       a9 00		      LDA	#0
    388  f167		       85 9c		      STA	TimerCounter
    389  f169
    390  f169							; Score
    391  f169		       85 97		      STA	ScoreTens
    392  f16b		       85 98		      STA	ScoreOnes
    393  f16d
    394  f16d							; Set Controller Inputs
    395  f16d		       8d 81 02 	      STA	SWACNT
    396  f170
    397  f170							; Set SpriteAnimationIndex
    398  f170		       85 95		      STA	SpriteAnimationIndex
    399  f172		       85 96		      STA	IsFrameGoingUp
    400  f174
    401  f174							; Set P0 and P1 Delays
    402  f174		       85 25		      STA	VDELP0
    403  f176
    404  f176							; Set Wafer XPos Index
    405  f176		       85 8d		      STA	WaferXPosIndex
    406  f178
    407  f178							; PacmanSpriteDataPointer
    408  f178		       a9 00		      LDA	#<Sprite0Data
    409  f17a		       85 81		      STA	SpriteAddrPtr
    410  f17c		       a9 f6		      LDA	#>Sprite0Data
    411  f17e		       85 82		      STA	SpriteAddrPtr+1
    412  f180
    413  f180							; GhostSpriteDataPointer
    414  f180		       a9 48		      LDA	#<SpriteGhostData
    415  f182		       85 88		      STA	SpriteGhostAddrPtr
    416  f184		       a9 f6		      LDA	#>SpriteGhostData
    417  f186		       85 89		      STA	SpriteGhostAddrPtr+1
    418  f188
    419  f188		       60		      RTS
    420  f189
    421  f189							;==================================================================================
    422  f189							; PositionSpriteX - Subroutine to position player sprite
    423  f189							;==================================================================================
    424  f189
    425  f189				   PositionSpriteX
    426  f189		       85 02		      STA	WSYNC	; 3
    427  f18b		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    428  f18d
    429  f18d				   PosSP
    430  f18d
    431  f18d		       a5 83		      LDA	SpriteXPos	; 4
    432  f18f		       a8		      TAY		; 2
    433  f190
    434  f190							; Divide by 16
    435  f190		       4a		      LSR		; 2
    436  f191		       4a		      LSR		; 2
    437  f192		       4a		      LSR		; 2
    438  f193		       4a		      LSR		; 2
    439  f194		       85 80		      STA	PS_temp	; 3
    440  f196
    441  f196		       98		      TYA		; 2
    442  f197		       29 0f		      AND	#15	; 2
    443  f199
    444  f199		       18		      CLC		; 2
    445  f19a
    446  f19a		       65 80		      ADC	PS_temp	; 3
    447  f19c		       a4 80		      LDY	PS_temp	; 3
    448  f19e
    449  f19e		       c9 0f		      CMP	#15	; 2
    450  f1a0		       90 03		      BCC	NH	; 3
    451  f1a2		       e9 0f		      SBC	#15	; 2
    452  f1a4		       c8		      INY		; 2
    453  f1a5
    454  f1a5				   NH
    455  f1a5							; Use remainder for fine adjustment
    456  f1a5		       49 07		      EOR	#7	; 2
    457  f1a7		       0a		      ASL		; 2
    458  f1a8		       0a		      ASL		; 2
    459  f1a9		       0a		      ASL		; 2
    460  f1aa		       0a		      ASL		; 2
    461  f1ab
    462  f1ab		       85 20		      STA	HMP0	; fine movement	     ; 4
    463  f1ad		       85 02		      STA	WSYNC	; 3
    464  f1af
    465  f1af		       20 bd f1 	      JSR	Ret	; just a 12 cycle delay     ; 12
    466  f1b2		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    467  f1b4
    468  f1b4
    469  f1b4				   Jiggle
    470  f1b4		       88		      DEY		; 2
    471  f1b5		       10 fd		      BPL	Jiggle	; 3
    472  f1b7
    473  f1b7		       85 10		      STA	RESP0	; 4
    474  f1b9
    475  f1b9		       85 02		      STA	WSYNC	; 3
    476  f1bb		       85 2a		      STA	HMOVE	; 3
    477  f1bd
    478  f1bd				   Ret
    479  f1bd		       60		      RTS		; 6
    480  f1be
    481  f1be							;==================================================================================
    482  f1be							; PositionGhostSpriteX - Subroutine to position ghost sprite
    483  f1be							;==================================================================================
    484  f1be
    485  f1be				   PositionGhostSpriteX
    486  f1be		       85 02		      STA	WSYNC	; 3
    487  f1c0		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    488  f1c2
    489  f1c2		       a2 01		      LDX	#1	; sprite index 		  ; 2
    490  f1c4
    491  f1c4				   PosSP1
    492  f1c4
    493  f1c4		       b5 89		      LDA	GhostSpriteXPos-1,x	; 4
    494  f1c6		       a8		      TAY		; 2
    495  f1c7
    496  f1c7							; Divide by 16
    497  f1c7		       4a		      LSR		; 2
    498  f1c8		       4a		      LSR		; 2
    499  f1c9		       4a		      LSR		; 2
    500  f1ca		       4a		      LSR		; 2
    501  f1cb		       85 80		      STA	PS_temp	; 3
    502  f1cd
    503  f1cd		       98		      TYA		; 2
    504  f1ce		       29 0f		      AND	#15	; 2
    505  f1d0
    506  f1d0		       18		      CLC		; 2
    507  f1d1
    508  f1d1		       65 80		      ADC	PS_temp	; 3
    509  f1d3		       a4 80		      LDY	PS_temp	; 3
    510  f1d5
    511  f1d5		       c9 0f		      CMP	#15	; 2
    512  f1d7		       90 03		      BCC	NH1	; 3
    513  f1d9		       e9 0f		      SBC	#15	; 2
    514  f1db		       c8		      INY		; 2
    515  f1dc
    516  f1dc				   NH1
    517  f1dc							; Use remainder for fine adjustment
    518  f1dc		       49 07		      EOR	#7	; 2
    519  f1de		       0a		      ASL		; 2
    520  f1df		       0a		      ASL		; 2
    521  f1e0		       0a		      ASL		; 2
    522  f1e1		       0a		      ASL		; 2
    523  f1e2
    524  f1e2		       95 20		      STA	HMP1-1,x	; fine movement	     ; 4
    525  f1e4		       85 02		      STA	WSYNC	; 3
    526  f1e6
    527  f1e6		       20 f7 f1 	      JSR	Ret1	; just a 12 cycle delay     ; 12
    528  f1e9		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    529  f1eb
    530  f1eb
    531  f1eb				   Jiggle1
    532  f1eb		       88		      DEY		; 2
    533  f1ec		       10 fd		      BPL	Jiggle1	; 3
    534  f1ee
    535  f1ee		       95 10		      STA	RESP1-1,x	; 4
    536  f1f0
    537  f1f0		       ca		      DEX		; 2
    538  f1f1		       d0 d1		      BNE	PosSP1	; 3
    539  f1f3
    540  f1f3		       85 02		      STA	WSYNC	; 3
    541  f1f5		       85 2a		      STA	HMOVE	; 3
    542  f1f7
    543  f1f7				   Ret1
    544  f1f7		       60		      RTS		; 6
    545  f1f8
    546  f1f8							;==================================================================================
    547  f1f8							; PositionWaferX0 - Subroutine to position wafer missile
    548  f1f8							;==================================================================================
    549  f1f8
    550  f1f8				   PositionWaferX0
    551  f1f8		       85 02		      STA	WSYNC	; 3
    552  f1fa		       85 2b		      STA	HMCLR	; clear any previous movement	  ; 3
    553  f1fc
    554  f1fc				   PosSPWafer0
    555  f1fc
    556  f1fc		       a5 8c		      LDA	CurWaferXPos0	; 4
    557  f1fe		       a8		      TAY		; 2
    558  f1ff
    559  f1ff							; Divide by 16
    560  f1ff		       4a		      LSR		; 2
    561  f200		       4a		      LSR		; 2
    562  f201		       4a		      LSR		; 2
    563  f202		       4a		      LSR		; 2
    564  f203		       85 80		      STA	PS_temp	; 3
    565  f205
    566  f205		       98		      TYA		; 2
    567  f206		       29 0f		      AND	#15	; 2
    568  f208
    569  f208		       18		      CLC		; 2
    570  f209
    571  f209		       65 80		      ADC	PS_temp	; 3
    572  f20b		       a4 80		      LDY	PS_temp	; 3
    573  f20d
    574  f20d		       c9 0f		      CMP	#15	; 2
    575  f20f		       90 03		      BCC	NHWafer0	; 3
    576  f211		       e9 0f		      SBC	#15	; 2
    577  f213		       c8		      INY		; 2
    578  f214
    579  f214				   NHWafer0
    580  f214							; Use remainder for fine adjustment
    581  f214		       49 07		      EOR	#7	; 2
    582  f216		       0a		      ASL		; 2
    583  f217		       0a		      ASL		; 2
    584  f218		       0a		      ASL		; 2
    585  f219		       0a		      ASL		; 2
    586  f21a
    587  f21a		       85 22		      STA	HMM0	; fine movement	     ; 4
    588  f21c		       85 02		      STA	WSYNC	; 3
    589  f21e
    590  f21e		       20 2c f2 	      JSR	RetWafer0	; just a 12 cycle delay     ; 12
    591  f221		       24 00		      BIT	0	; 15 cycles = 3 loops :)    ; 3
    592  f223
    593  f223
    594  f223				   JiggleWafer0
    595  f223		       88		      DEY		; 2
    596  f224		       10 fd		      BPL	JiggleWafer0	; 3
    597  f226
    598  f226		       85 12		      STA	RESM0	; 4
    599  f228
    600  f228		       85 02		      STA	WSYNC	; 3
    601  f22a		       85 2a		      STA	HMOVE	; 3
    602  f22c
    603  f22c				   RetWafer0
    604  f22c		       60		      RTS		; 6
    605  f22d
    606  f22d							;==================================================================================
    607  f22d							; UpdateEntities - Update Game Logic
    608  f22d							;==================================================================================
    609  f22d
    610  f22d				   UpdateEntities
    611  f22d							; Check Player Collision
    612  f22d		       20 57 f2 	      JSR	CheckPlayerCollision
    613  f230
    614  f230							; Update Sprite Pos According to Velocity Mask
    615  f230		       20 ac f2 	      JSR	UpdatePlayerPosition
    616  f233
    617  f233							; Remove Collisions After Checks
    618  f233		       85 2c		      STA	CXCLR
    619  f235
    620  f235							; Update Timer
    621  f235		       20 e8 f3 	      JSR	UpdateTimer
    622  f238
    623  f238							; Increase Score According with Picked Up Wafer Buffer
    624  f238		       20 f8 f3 	      JSR	UpdateScore
    625  f23b
    626  f23b							; Change Animation Frame
    627  f23b		       20 11 f3 	      JSR	ChangeAnimationFrame
    628  f23e
    629  f23e							; Apply Animation Frame
    630  f23e		       20 34 f3 	      JSR	ApplyAnimationFrame
    631  f241
    632  f241							; Update Wafer XPos Index
    633  f241		       20 45 f2 	      JSR	UpdateWaferIndex
    634  f244
    635  f244		       60		      RTS
    636  f245
    637  f245							;==================================================================================
    638  f245							; UpdateWaferIndex - increase wafer XPos Index and apply it
    639  f245							;==================================================================================
    640  f245
    641  f245				   UpdateWaferIndex
    642  f245		       e6 8d		      INC	WaferXPosIndex
    643  f247
    644  f247		       a6 8d		      LDX	WaferXPosIndex
    645  f249		       e0 06		      CPX	#6
    646  f24b		       d0 04		      BNE	ReturnWaferIndex
    647  f24d
    648  f24d				   WaferIndexEquals6
    649  f24d		       a2 00		      LDX	#0
    650  f24f		       86 8d		      STX	WaferXPosIndex
    651  f251
    652  f251				   ReturnWaferIndex
    653  f251		       bd 1c f4 	      LDA	WaferXPosArray0,x
    654  f254		       85 8c		      STA	CurWaferXPos0
    655  f256		       60		      RTS
    656  f257
    657  f257							;==================================================================================
    658  f257							; CheckPlayerCollision - Verify for Player Collision with PF and Update Velocity Mask
    659  f257							;==================================================================================
    660  f257
    661  f257				   CheckPlayerCollision
    662  f257							; Verify P0PF Collision Bit
    663  f257		       a5 02		      LDA	CXP0FB
    664  f259		       29 80		      AND	#%10000000
    665  f25b		       f0 4e		      BEQ	PlayerPFCollisionNotDetected
    666  f25d
    667  f25d							; Check Where Player Was Going
    668  f25d		       a6 87		      LDX	PlayerVelocityMask
    669  f25f
    670  f25f							; Return Player to Previous Spot Before Zeoring Velocity
    671  f25f		       8a		      TXA
    672  f260		       29 08		      AND	#%1000
    673  f262		       d0 1a		      BNE	WasGoingRight
    674  f264
    675  f264		       8a		      TXA
    676  f265		       29 04		      AND	#%0100
    677  f267		       d0 20		      BNE	WasGoingLeft
    678  f269
    679  f269		       8a		      TXA
    680  f26a		       29 02		      AND	#%0010
    681  f26c		       d0 26		      BNE	WasGoingDown
    682  f26e
    683  f26e		       8a		      TXA
    684  f26f		       29 01		      AND	#%0001
    685  f271		       d0 2c		      BNE	WasGoingUp
    686  f273
    687  f273							; Return X and Y in case Player isnt moving and is still stuck
    688  f273		       a5 85		      LDA	LastSpriteXPos
    689  f275		       85 83		      STA	SpriteXPos
    690  f277		       a5 86		      LDA	LastSpriteYPos
    691  f279		       85 84		      STA	SpriteYPos
    692  f27b
    693  f27b		       4c a7 f2 	      JMP	ZeroPlayerVelocity
    694  f27e
    695  f27e				   WasGoingRight
    696  f27e		       a5 85		      LDA	LastSpriteXPos
    697  f280		       85 83		      STA	SpriteXPos
    698  f282
    699  f282		       c6 83		      DEC	SpriteXPos
    700  f284		       c6 83		      DEC	SpriteXPos
    701  f286
    702  f286		       4c a7 f2 	      JMP	ZeroPlayerVelocity
    703  f289
    704  f289				   WasGoingLeft
    705  f289		       a5 85		      LDA	LastSpriteXPos
    706  f28b		       85 83		      STA	SpriteXPos
    707  f28d
    708  f28d		       e6 83		      INC	SpriteXPos
    709  f28f		       e6 83		      INC	SpriteXPos
    710  f291
    711  f291		       4c a7 f2 	      JMP	ZeroPlayerVelocity
    712  f294
    713  f294				   WasGoingDown
    714  f294		       a5 86		      LDA	LastSpriteYPos
    715  f296		       85 84		      STA	SpriteYPos
    716  f298
    717  f298		       e6 84		      INC	SpriteYPos
    718  f29a		       e6 84		      INC	SpriteYPos
    719  f29c
    720  f29c		       4c a7 f2 	      JMP	ZeroPlayerVelocity
    721  f29f
    722  f29f				   WasGoingUp
    723  f29f		       a5 86		      LDA	LastSpriteYPos
    724  f2a1		       85 84		      STA	SpriteYPos
    725  f2a3
    726  f2a3		       c6 84		      DEC	SpriteYPos
    727  f2a5		       c6 84		      DEC	SpriteYPos
    728  f2a7
    729  f2a7				   ZeroPlayerVelocity
    730  f2a7		       a9 00		      LDA	#0
    731  f2a9		       85 87		      STA	PlayerVelocityMask
    732  f2ab
    733  f2ab				   PlayerPFCollisionNotDetected
    734  f2ab		       60		      RTS
    735  f2ac
    736  f2ac							;==================================================================================
    737  f2ac							; UpdatePlayerPosition - Update Player Position According to Velocity Mask
    738  f2ac							;==================================================================================
    739  f2ac
    740  f2ac				   UpdatePlayerPosition
    741  f2ac							; Verify Collision and Refuse to Move in case is colliding
    742  f2ac		       a5 02		      LDA	CXP0FB
    743  f2ae		       29 80		      AND	#%10000000
    744  f2b0		       d0 5e		      BNE	UpdatePlayerPositionRet
    745  f2b2
    746  f2b2		       a6 87		      LDX	PlayerVelocityMask
    747  f2b4
    748  f2b4		       8a		      TXA
    749  f2b5		       29 08		      AND	#%1000
    750  f2b7		       d0 12		      BNE	GoRight
    751  f2b9
    752  f2b9		       8a		      TXA
    753  f2ba		       29 04		      AND	#%0100
    754  f2bc		       d0 24		      BNE	GoLeft
    755  f2be
    756  f2be		       8a		      TXA
    757  f2bf		       29 02		      AND	#%0010
    758  f2c1		       d0 36		      BNE	GoDown
    759  f2c3
    760  f2c3		       8a		      TXA
    761  f2c4		       29 01		      AND	#%0001
    762  f2c6		       d0 3e		      BNE	GoUp
    763  f2c8
    764  f2c8		       4c 10 f3 	      JMP	UpdatePlayerPositionRet
    765  f2cb
    766  f2cb				   GoRight
    767  f2cb		       a5 83		      LDA	SpriteXPos
    768  f2cd		       85 85		      STA	LastSpriteXPos
    769  f2cf		       a5 84		      LDA	SpriteYPos
    770  f2d1		       85 86		      STA	LastSpriteYPos
    771  f2d3
    772  f2d3		       e6 83		      INC	SpriteXPos
    773  f2d5
    774  f2d5							; Verify If Sprite is in Far Right
    775  f2d5		       a5 83		      LDA	SpriteXPos
    776  f2d7		       c9 a0		      CMP	#160
    777  f2d9		       90 04		      BCC	NotFarRight
    778  f2db
    779  f2db		       a9 00		      LDA	#0
    780  f2dd		       85 83		      STA	SpriteXPos
    781  f2df
    782  f2df				   NotFarRight
    783  f2df		       4c 10 f3 	      JMP	UpdatePlayerPositionRet
    784  f2e2
    785  f2e2				   GoLeft
    786  f2e2		       a5 83		      LDA	SpriteXPos
    787  f2e4		       85 85		      STA	LastSpriteXPos
    788  f2e6		       a5 84		      LDA	SpriteYPos
    789  f2e8		       85 86		      STA	LastSpriteYPos
    790  f2ea
    791  f2ea		       c6 83		      DEC	SpriteXPos
    792  f2ec
    793  f2ec							; Verify If Sprite is in Far Left
    794  f2ec		       a5 83		      LDA	SpriteXPos
    795  f2ee		       c9 00		      CMP	#0
    796  f2f0		       d0 04		      BNE	NotFarLeft
    797  f2f2
    798  f2f2		       a9 a0		      LDA	#160
    799  f2f4		       85 83		      STA	SpriteXPos
    800  f2f6
    801  f2f6				   NotFarLeft
    802  f2f6		       4c 10 f3 	      JMP	UpdatePlayerPositionRet
    803  f2f9
    804  f2f9				   GoDown
    805  f2f9		       a5 83		      LDA	SpriteXPos
    806  f2fb		       85 85		      STA	LastSpriteXPos
    807  f2fd		       a5 84		      LDA	SpriteYPos
    808  f2ff		       85 86		      STA	LastSpriteYPos
    809  f301
    810  f301		       c6 84		      DEC	SpriteYPos
    811  f303		       4c 10 f3 	      JMP	UpdatePlayerPositionRet
    812  f306
    813  f306				   GoUp
    814  f306		       a5 83		      LDA	SpriteXPos
    815  f308		       85 85		      STA	LastSpriteXPos
    816  f30a		       a5 84		      LDA	SpriteYPos
    817  f30c		       85 86		      STA	LastSpriteYPos
    818  f30e
    819  f30e		       e6 84		      INC	SpriteYPos
    820  f310
    821  f310				   UpdatePlayerPositionRet
    822  f310		       60		      RTS
    823  f311
    824  f311							;==================================================================================
    825  f311							; ChangeAnimationFrame
    826  f311							;==================================================================================
    827  f311
    828  f311				   ChangeAnimationFrame
    829  f311							; Verify Counter
    830  f311		       a5 9c		      LDA	TimerCounter
    831  f313		       d0 1e		      BNE	DontChangeFrame
    832  f315
    833  f315							; Load Current Frame Index
    834  f315		       a4 95		      LDY	SpriteAnimationIndex
    835  f317
    836  f317							; Verify Next Frame
    837  f317		       a6 96		      LDX	IsFrameGoingUp
    838  f319		       f0 04		      BEQ	FrameIsGoingUp
    839  f31b
    840  f31b				   FrameIsGoingDown
    841  f31b		       88		      DEY
    842  f31c		       4c 20 f3 	      JMP	FrameChanged
    843  f31f
    844  f31f				   FrameIsGoingUp
    845  f31f		       c8		      INY
    846  f320
    847  f320				   FrameChanged
    848  f320							; Check if Index is Either 0 or 2
    849  f320		       84 95		      STY	SpriteAnimationIndex
    850  f322		       c0 03		      CPY	#3
    851  f324		       f0 07		      BEQ	ChangeDirection
    852  f326		       c0 00		      CPY	#0
    853  f328		       f0 03		      BEQ	ChangeDirection
    854  f32a
    855  f32a							; If not
    856  f32a		       4c 33 f3 	      JMP	FrameChangeReturn
    857  f32d
    858  f32d				   ChangeDirection
    859  f32d		       a5 96		      LDA	IsFrameGoingUp
    860  f32f		       49 01		      EOR	#1
    861  f331		       85 96		      STA	IsFrameGoingUp
    862  f333
    863  f333				   DontRestartFrame
    864  f333				   DontChangeFrame
    865  f333				   FrameChangeReturn
    866  f333		       60		      RTS
    867  f334
    868  f334							;==================================================================================
    869  f334							; ApplyAnimationFrame
    870  f334							;==================================================================================
    871  f334
    872  f334				   ApplyAnimationFrame
    873  f334							; Check Counter
    874  f334		       a5 9c		      LDA	TimerCounter
    875  f336		       d0 39		      BNE	ApplyAnimationFrameRet
    876  f338
    877  f338		       a5 95		      LDA	SpriteAnimationIndex
    878  f33a		       f0 0c		      BEQ	Animation0
    879  f33c		       c9 01		      CMP	#1
    880  f33e		       f0 13		      BEQ	Animation1
    881  f340		       c9 02		      CMP	#2
    882  f342		       f0 1a		      BEQ	Animation2
    883  f344		       c9 03		      CMP	#3
    884  f346		       f0 21		      BEQ	Animation3
    885  f348
    886  f348				   Animation0
    887  f348		       a9 00		      LDA	#<Sprite0Data
    888  f34a		       85 81		      STA	SpriteAddrPtr
    889  f34c		       a9 f6		      LDA	#>Sprite0Data
    890  f34e		       85 82		      STA	SpriteAddrPtr+1
    891  f350		       4c 71 f3 	      JMP	ApplyAnimationFrameRet
    892  f353
    893  f353				   Animation1
    894  f353		       a9 12		      LDA	#<Sprite1Data
    895  f355		       85 81		      STA	SpriteAddrPtr
    896  f357		       a9 f6		      LDA	#>Sprite1Data
    897  f359		       85 82		      STA	SpriteAddrPtr+1
    898  f35b		       4c 71 f3 	      JMP	ApplyAnimationFrameRet
    899  f35e
    900  f35e				   Animation2
    901  f35e		       a9 24		      LDA	#<Sprite2Data
    902  f360		       85 81		      STA	SpriteAddrPtr
    903  f362		       a9 f6		      LDA	#>Sprite2Data
    904  f364		       85 82		      STA	SpriteAddrPtr+1
    905  f366		       4c 71 f3 	      JMP	ApplyAnimationFrameRet
    906  f369
    907  f369				   Animation3
    908  f369		       a9 36		      LDA	#<Sprite3Data
    909  f36b		       85 81		      STA	SpriteAddrPtr
    910  f36d		       a9 f6		      LDA	#>Sprite3Data
    911  f36f		       85 82		      STA	SpriteAddrPtr+1
    912  f371
    913  f371				   ApplyAnimationFrameRet
    914  f371		       60		      RTS
    915  f372
    916  f372							;==================================================================================
    917  f372							; GetControllerInputs - Update Player Velocity Mask According to Inputs
    918  f372							;==================================================================================
    919  f372
    920  f372				   GetControllerInputs
    921  f372		       ae 80 02 	      LDX	SWCHA
    922  f375
    923  f375							; Check Right Input
    924  f375		       8a		      TXA
    925  f376		       29 80		      AND	#%10000000
    926  f378		       f0 12		      BEQ	RightInput
    927  f37a
    928  f37a							; Check Left Input
    929  f37a		       8a		      TXA
    930  f37b		       29 40		      AND	#%01000000
    931  f37d		       f0 18		      BEQ	LeftInput
    932  f37f
    933  f37f							; Check Down Input
    934  f37f		       8a		      TXA
    935  f380		       29 20		      AND	#%00100000
    936  f382		       f0 20		      BEQ	DownInput
    937  f384
    938  f384							; Check Up Input
    939  f384		       8a		      TXA
    940  f385		       29 10		      AND	#%00010000
    941  f387		       f0 22		      BEQ	UpInput
    942  f389
    943  f389							; No Input Detected
    944  f389		       4c af f3 	      JMP	ControllerRet
    945  f38c
    946  f38c				   RightInput
    947  f38c		       a9 08		      LDA	#%1000
    948  f38e		       85 0b		      STA	REFP0
    949  f390		       85 9d		      STA	PlayerReflectedBuffer
    950  f392
    951  f392		       85 87		      STA	PlayerVelocityMask
    952  f394		       4c af f3 	      JMP	ControllerRet
    953  f397
    954  f397				   LeftInput
    955  f397		       a9 00		      LDA	#0
    956  f399		       85 0b		      STA	REFP0
    957  f39b		       85 9d		      STA	PlayerReflectedBuffer
    958  f39d
    959  f39d		       a9 04		      LDA	#%0100
    960  f39f		       85 87		      STA	PlayerVelocityMask
    961  f3a1		       4c af f3 	      JMP	ControllerRet
    962  f3a4
    963  f3a4				   DownInput
    964  f3a4		       a9 02		      LDA	#%0010
    965  f3a6		       85 87		      STA	PlayerVelocityMask
    966  f3a8		       4c af f3 	      JMP	ControllerRet
    967  f3ab
    968  f3ab				   UpInput
    969  f3ab		       a9 01		      LDA	#%0001
    970  f3ad		       85 87		      STA	PlayerVelocityMask
    971  f3af
    972  f3af				   ControllerRet
    973  f3af		       60		      RTS
    974  f3b0
    975  f3b0							;==================================================================================
    976  f3b0							; GetController2Inputs - DEBUG - Controls Ghost
    977  f3b0							;==================================================================================
    978  f3b0
    979  f3b0				   GetController2InputsDEBUG
    980  f3b0		       ae 80 02 	      LDX	SWCHA
    981  f3b3
    982  f3b3							; Check Right Input
    983  f3b3		       8a		      TXA
    984  f3b4		       29 08		      AND	#%00001000
    985  f3b6		       f0 12		      BEQ	RightInputGhost
    986  f3b8
    987  f3b8							; Check Left Input
    988  f3b8		       8a		      TXA
    989  f3b9		       29 04		      AND	#%00000100
    990  f3bb		       f0 18		      BEQ	LeftInputGhost
    991  f3bd
    992  f3bd							; Check Down Input
    993  f3bd		       8a		      TXA
    994  f3be		       29 02		      AND	#%00000010
    995  f3c0		       f0 1e		      BEQ	DownInputGhost
    996  f3c2
    997  f3c2							; Check Up Input
    998  f3c2		       8a		      TXA
    999  f3c3		       29 01		      AND	#%00000001
   1000  f3c5		       f0 1e		      BEQ	UpInputGhost
   1001  f3c7
   1002  f3c7							; No Input Detected
   1003  f3c7		       4c e7 f3 	      JMP	ControllerRetGhost
   1004  f3ca
   1005  f3ca				   RightInputGhost
   1006  f3ca		       e6 8a		      INC	GhostSpriteXPos
   1007  f3cc		       a9 08		      LDA	#%1000
   1008  f3ce		       85 0c		      STA	REFP1
   1009  f3d0		       85 9e		      STA	GhostReflectedBuffer
   1010  f3d2		       4c e7 f3 	      JMP	ControllerRetGhost
   1011  f3d5
   1012  f3d5				   LeftInputGhost
   1013  f3d5		       c6 8a		      DEC	GhostSpriteXPos
   1014  f3d7		       a9 00		      LDA	#0
   1015  f3d9		       85 0c		      STA	REFP1
   1016  f3db		       85 9e		      STA	GhostReflectedBuffer
   1017  f3dd		       4c e7 f3 	      JMP	ControllerRetGhost
   1018  f3e0
   1019  f3e0				   DownInputGhost
   1020  f3e0		       c6 8b		      DEC	GhostSpriteYPos
   1021  f3e2		       4c e7 f3 	      JMP	ControllerRetGhost
   1022  f3e5
   1023  f3e5				   UpInputGhost
   1024  f3e5		       e6 8b		      INC	GhostSpriteYPos
   1025  f3e7
   1026  f3e7				   ControllerRetGhost
   1027  f3e7		       60		      RTS
   1028  f3e8
   1029  f3e8							;==================================================================================
   1030  f3e8							; UpdateTimer
   1031  f3e8							;==================================================================================
   1032  f3e8
   1033  f3e8				   UpdateTimer
   1034  f3e8		       a5 9c		      LDA	TimerCounter
   1035  f3ea		       c9 00		      CMP	#0
   1036  f3ec		       d0 07		      BNE	DidntReachLimit
   1037  f3ee
   1038  f3ee				   ReachedLimit
   1039  f3ee		       a9 05		      LDA	#TIMER_LIMIT
   1040  f3f0		       85 9c		      STA	TimerCounter
   1041  f3f2		       4c f7 f3 	      JMP	TimerRet
   1042  f3f5
   1043  f3f5				   DidntReachLimit
   1044  f3f5		       c6 9c		      DEC	TimerCounter
   1045  f3f7
   1046  f3f7				   TimerRet
   1047  f3f7		       60		      RTS
   1048  f3f8
   1049  f3f8							;==================================================================================
   1050  f3f8							; UpdateScore
   1051  f3f8							;==================================================================================
   1052  f3f8
   1053  f3f8				   UpdateScore
   1054  f3f8							; Check If Wafer Was Picked Up
   1055  f3f8		       a5 94		      LDA	PickedUpWaferBuffer
   1056  f3fa		       c9 00		      CMP	#0
   1057  f3fc		       f0 18		      BEQ	DidntPickUpWafer
   1058  f3fe
   1059  f3fe							; Increase Ones
   1060  f3fe		       e6 98		      INC	ScoreOnes
   1061  f400
   1062  f400							; Check if Ones reached 10
   1063  f400		       a6 98		      LDX	ScoreOnes
   1064  f402		       e0 0a		      CPX	#10
   1065  f404		       d0 10		      BNE	NotYet10
   1066  f406
   1067  f406				   OnesReached10
   1068  f406							; Reset Ones and Increase Tens
   1069  f406		       a2 00		      LDX	#0
   1070  f408		       86 98		      STX	ScoreOnes
   1071  f40a		       e6 97		      INC	ScoreTens
   1072  f40c
   1073  f40c							; Check if Tens reached 10
   1074  f40c		       a6 97		      LDX	ScoreTens
   1075  f40e		       e0 0a		      CPX	#10
   1076  f410		       d0 04		      BNE	NotYet10
   1077  f412
   1078  f412				   TensReached10
   1079  f412							; Reset Tens
   1080  f412		       a2 00		      LDX	#0
   1081  f414		       86 97		      STX	ScoreTens
   1082  f416
   1083  f416				   DidntPickUpWafer
   1084  f416				   NotYet10
   1085  f416							; Flush PickedUpWaferBuffer
   1086  f416		       a9 00		      LDA	#0
   1087  f418		       85 94		      STA	PickedUpWaferBuffer
   1088  f41a
   1089  f41a		       60		      RTS
   1090  f41b
   1091  f41b							;==================================================================================
   1092  f41b							; Delay12 - Waste 12 cycles of CPU
   1093  f41b							;==================================================================================
   1094  f41b
   1095  f41b				   Delay12
   1096  f41b		       60		      RTS
   1097  f41c
   1098  f41c							;==================================================================================
   1099  f41c							; WaferXPosArray0
   1100  f41c							;==================================================================================
   1101  f41c
   1102  f41c				   WaferXPosArray0
   1103  f41c		       19 23 3c 64*	      .byte.b	25,35,60,100,130,140
   1104  f422
   1105  f422							;==================================================================================
   1106  f422							; FindWaferLookUp - Look up table for finding wafer in memory
   1107  f422							;==================================================================================
   1108  f422
   1109  f422				   FindWaferLookUp
   1110  f422		       00 02 04 08*	      .byte.b	0,%00000010,%00000100,%00001000,%00010000,%00100000,%01000000,%10000000
   1111  f42a
   1112  f42a							;==================================================================================
   1113  f42a							; MultBy20
   1114  f42a							;==================================================================================
   1115  f42a
   1116  f42a				   MultBy20
   1117  f42a		       00 14 28 3c*	      .byte.b	0,20,40,60,80,100,120,140,160,180,200
   1118  f435
   1119  f435							;==================================================================================
   1120  f435							; CheckLineBytes
   1121  f435							;==================================================================================
   1122  f435
   1123  f435				   CheckLineBytes
   1124  f435		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1125  f440		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,7,7,0,0
   1126  f44b		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1127  f456		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1128  f461		       06 06 00 00*	      .byte.b	6,6,0,0,0,0,0,0,0,0,0
   1129  f46c		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1130  f477		       00 00 00 00*	      .byte.b	0,0,0,0,5,5,0,0,0,0,0
   1131  f482		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1132  f48d		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,4,4,0,0,0
   1133  f498		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1134  f4a3		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,3,3,0
   1135  f4ae		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1136  f4b9		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,2
   1137  f4c4		       02 00 00 00*	      .byte.b	2,0,0,0,0,0,0,0,0,0,0
   1138  f4cf		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1139  f4da		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,1,1
   1140  f4e5		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1141  f4f0		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1142  f4fb		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1143  f506		       00 00 00 00*	      .byte.b	0,0,0,0,0,0,0,0,0,0,0
   1144  f511
   1145  f511							;==================================================================================
   1146  f511							; Control Page Boundry
   1147  f511							;==================================================================================
   1148  f511
   1149  f511
   1150  f511							;===============================================================================
   1151  f511							; free space check before page boundry
   1152  f511							;===============================================================================
   1153  f511
 Start of Sprite0Data is:  $f511
   1154  f511					      echo	"Start of Sprite0Data is: ", *
   1155  f600		       00 00 00 00*	      align	256
   1156  f600
   1157  f600							;==================================================================================
   1158  f600							; Sprite Data - Pacman
   1159  f600							;==================================================================================
   1160  f600
   1161  f600				   Sprite0Data
   1162  f600							; Frame 0
   1163  f600		       00		      .byte.b	#%00000000
   1164  f601		       00		      .byte.b	#%00000000
   1165  f602		       7e		      .byte.b	#%01111110
   1166  f603		       7e		      .byte.b	#%01111110
   1167  f604		       3f		      .byte.b	#%00111111
   1168  f605		       3f		      .byte.b	#%00111111
   1169  f606		       0f		      .byte.b	#%00001111
   1170  f607		       0f		      .byte.b	#%00001111
   1171  f608		       07		      .byte.b	#%00000111
   1172  f609		       07		      .byte.b	#%00000111
   1173  f60a		       0f		      .byte.b	#%00001111
   1174  f60b		       0f		      .byte.b	#%00001111
   1175  f60c		       3f		      .byte.b	#%00111111
   1176  f60d		       3f		      .byte.b	#%00111111
   1177  f60e		       7e		      .byte.b	#%01111110
   1178  f60f		       7e		      .byte.b	#%01111110
   1179  f610		       00		      .byte.b	#%00000000
   1180  f611		       00		      .byte.b	#%00000000
   1181  f612
   1182  f612				   Sprite1Data
   1183  f612							; Frame 0
   1184  f612		       00		      .byte.b	#%00000000
   1185  f613		       00		      .byte.b	#%00000000
   1186  f614		       7e		      .byte.b	#%01111110
   1187  f615		       7e		      .byte.b	#%01111110
   1188  f616		       ff		      .byte.b	#%11111111
   1189  f617		       ff		      .byte.b	#%11111111
   1190  f618		       3f		      .byte.b	#%00111111
   1191  f619		       3f		      .byte.b	#%00111111
   1192  f61a		       0f		      .byte.b	#%00001111
   1193  f61b		       0f		      .byte.b	#%00001111
   1194  f61c		       3f		      .byte.b	#%00111111
   1195  f61d		       3f		      .byte.b	#%00111111
   1196  f61e		       ff		      .byte.b	#%11111111
   1197  f61f		       ff		      .byte.b	#%11111111
   1198  f620		       7e		      .byte.b	#%01111110
   1199  f621		       7e		      .byte.b	#%01111110
   1200  f622		       00		      .byte.b	#%00000000
   1201  f623		       00		      .byte.b	#%00000000
   1202  f624
   1203  f624				   Sprite2Data
   1204  f624							; Frame 1
   1205  f624		       00		      .byte.b	#%00000000
   1206  f625		       00		      .byte.b	#%00000000
   1207  f626		       7e		      .byte.b	#%01111110
   1208  f627		       7e		      .byte.b	#%01111110
   1209  f628		       ff		      .byte.b	#%11111111
   1210  f629		       ff		      .byte.b	#%11111111
   1211  f62a		       ff		      .byte.b	#%11111111
   1212  f62b		       ff		      .byte.b	#%11111111
   1213  f62c		       0f		      .byte.b	#%00001111
   1214  f62d		       0f		      .byte.b	#%00001111
   1215  f62e		       ff		      .byte.b	#%11111111
   1216  f62f		       ff		      .byte.b	#%11111111
   1217  f630		       ff		      .byte.b	#%11111111
   1218  f631		       ff		      .byte.b	#%11111111
   1219  f632		       7e		      .byte.b	#%01111110
   1220  f633		       7e		      .byte.b	#%01111110
   1221  f634		       00		      .byte.b	#%00000000
   1222  f635		       00		      .byte.b	#%00000000
   1223  f636
   1224  f636				   Sprite3Data
   1225  f636							; Frame 2
   1226  f636		       00		      .byte.b	#%00000000
   1227  f637		       00		      .byte.b	#%00000000
   1228  f638		       7e		      .byte.b	#%01111110
   1229  f639		       7e		      .byte.b	#%01111110
   1230  f63a		       ff		      .byte.b	#%11111111
   1231  f63b		       ff		      .byte.b	#%11111111
   1232  f63c		       ff		      .byte.b	#%11111111
   1233  f63d		       ff		      .byte.b	#%11111111
   1234  f63e		       ff		      .byte.b	#%11111111
   1235  f63f		       ff		      .byte.b	#%11111111
   1236  f640		       ff		      .byte.b	#%11111111
   1237  f641		       ff		      .byte.b	#%11111111
   1238  f642		       ff		      .byte.b	#%11111111
   1239  f643		       ff		      .byte.b	#%11111111
   1240  f644		       7e		      .byte.b	#%01111110
   1241  f645		       7e		      .byte.b	#%01111110
   1242  f646		       00		      .byte.b	#%00000000
   1243  f647		       00		      .byte.b	#%00000000
   1244  f648
   1245  f648							;==================================================================================
   1246  f648							; Sprite Data - Ghost
   1247  f648							;==================================================================================
   1248  f648
   1249  f648				   SpriteGhostData
   1250  f648		       00		      .byte.b	#%00000000
   1251  f649		       00		      .byte.b	#%00000000
   1252  f64a		       55		      .byte.b	#%01010101
   1253  f64b		       55		      .byte.b	#%01010101
   1254  f64c		       ff		      .byte.b	#%11111111
   1255  f64d		       ff		      .byte.b	#%11111111
   1256  f64e		       ff		      .byte.b	#%11111111
   1257  f64f		       99		      .byte.b	#%10011001
   1258  f650		       99		      .byte.b	#%10011001
   1259  f651		       bb		      .byte.b	#%10111011
   1260  f652		       bb		      .byte.b	#%10111011
   1261  f653		       ff		      .byte.b	#%11111111
   1262  f654		       7e		      .byte.b	#%01111110
   1263  f655		       7e		      .byte.b	#%01111110
   1264  f656		       7e		      .byte.b	#%01111110
   1265  f657		       7e		      .byte.b	#%01111110
   1266  f658		       00		      .byte.b	#%00000000
   1267  f659		       00		      .byte.b	#%00000000
   1268  f65a
   1269  f65a							;==================================================================================
   1270  f65a							; free space check before page boundry
   1271  f65a							;==================================================================================
   1272  f65a
 End of Sprite0Data is:  $f65a
   1273  f65a					      echo	"End of Sprite0Data is: ", *
   1274  f700		       00 00 00 00*	      align	256
   1275  f700
   1276  f700							;==================================================================================
   1277  f700							; Board Data
   1278  f700							;==================================================================================
   1279  f700
------- FILE MainBoard.asm LEVEL 2 PASS 2
      0  f700					      include	"MainBoard.asm"
      1  f700				   MainBoard
      2  f700
      3  f700				   MainBoard_STRIP_0
      4  f700		       50		      .byte.b	80
      5  f701		       00		      .byte.b	0
      6  f702		       f0		      .byte.b	240
      7  f703		       f0		      .byte.b	240
      8  f704		       f0		      .byte.b	240
      9  f705		       10		      .byte.b	16
     10  f706		       10		      .byte.b	16
     11  f707		       10		      .byte.b	16
     12  f708		       10		      .byte.b	16
     13  f709		       10		      .byte.b	16
     14  f70a		       10		      .byte.b	16
     15  f70b		       10		      .byte.b	16
     16  f70c		       10		      .byte.b	16
     17  f70d		       10		      .byte.b	16
     18  f70e		       10		      .byte.b	16
     19  f70f		       10		      .byte.b	16
     20  f710		       10		      .byte.b	16
     21  f711		       10		      .byte.b	16
     22  f712		       10		      .byte.b	16
     23  f713		       10		      .byte.b	16
     24  f714		       10		      .byte.b	16
     25  f715		       10		      .byte.b	16
     26  f716		       10		      .byte.b	16
     27  f717		       10		      .byte.b	16
     28  f718		       10		      .byte.b	16
     29  f719		       10		      .byte.b	16
     30  f71a		       10		      .byte.b	16
     31  f71b		       10		      .byte.b	16
     32  f71c		       10		      .byte.b	16
     33  f71d		       10		      .byte.b	16
     34  f71e		       10		      .byte.b	16
     35  f71f		       10		      .byte.b	16
     36  f720		       10		      .byte.b	16
     37  f721		       10		      .byte.b	16
     38  f722		       10		      .byte.b	16
     39  f723		       10		      .byte.b	16
     40  f724		       10		      .byte.b	16
     41  f725		       10		      .byte.b	16
     42  f726		       10		      .byte.b	16
     43  f727		       10		      .byte.b	16
     44  f728		       10		      .byte.b	16
     45  f729		       10		      .byte.b	16
     46  f72a		       10		      .byte.b	16
     47  f72b		       10		      .byte.b	16
     48  f72c		       10		      .byte.b	16
     49  f72d		       10		      .byte.b	16
     50  f72e		       10		      .byte.b	16
     51  f72f		       10		      .byte.b	16
     52  f730		       10		      .byte.b	16
     53  f731		       10		      .byte.b	16
     54  f732		       10		      .byte.b	16
     55  f733		       10		      .byte.b	16
     56  f734		       10		      .byte.b	16
     57  f735		       10		      .byte.b	16
     58  f736		       10		      .byte.b	16
     59  f737		       10		      .byte.b	16
     60  f738		       10		      .byte.b	16
     61  f739		       f0		      .byte.b	240
     62  f73a		       f0		      .byte.b	240
     63  f73b		       f0		      .byte.b	240
     64  f73c		       f0		      .byte.b	240
     65  f73d		       80		      .byte.b	128
     66  f73e		       80		      .byte.b	128
     67  f73f		       80		      .byte.b	128
     68  f740		       80		      .byte.b	128
     69  f741		       80		      .byte.b	128
     70  f742		       80		      .byte.b	128
     71  f743		       80		      .byte.b	128
     72  f744		       80		      .byte.b	128
     73  f745		       80		      .byte.b	128
     74  f746		       80		      .byte.b	128
     75  f747		       80		      .byte.b	128
     76  f748		       80		      .byte.b	128
     77  f749		       80		      .byte.b	128
     78  f74a		       80		      .byte.b	128
     79  f74b		       80		      .byte.b	128
     80  f74c		       80		      .byte.b	128
     81  f74d		       80		      .byte.b	128
     82  f74e		       80		      .byte.b	128
     83  f74f		       80		      .byte.b	128
     84  f750		       80		      .byte.b	128
     85  f751		       f0		      .byte.b	240
     86  f752		       f0		      .byte.b	240
     87  f753		       f0		      .byte.b	240
     88  f754		       f0		      .byte.b	240
     89  f755		       00		      .byte.b	0
     90  f756		       00		      .byte.b	0
     91  f757		       00		      .byte.b	0
     92  f758		       00		      .byte.b	0
     93  f759		       00		      .byte.b	0
     94  f75a		       00		      .byte.b	0
     95  f75b		       00		      .byte.b	0
     96  f75c		       00		      .byte.b	0
     97  f75d		       00		      .byte.b	0
     98  f75e		       00		      .byte.b	0
     99  f75f		       00		      .byte.b	0
    100  f760		       00		      .byte.b	0
    101  f761		       00		      .byte.b	0
    102  f762		       00		      .byte.b	0
    103  f763		       00		      .byte.b	0
    104  f764		       00		      .byte.b	0
    105  f765		       00		      .byte.b	0
    106  f766		       00		      .byte.b	0
    107  f767		       00		      .byte.b	0
    108  f768		       00		      .byte.b	0
    109  f769		       00		      .byte.b	0
    110  f76a		       00		      .byte.b	0
    111  f76b		       f0		      .byte.b	240
    112  f76c		       f0		      .byte.b	240
    113  f76d		       f0		      .byte.b	240
    114  f76e		       80		      .byte.b	128
    115  f76f		       80		      .byte.b	128
    116  f770		       80		      .byte.b	128
    117  f771		       80		      .byte.b	128
    118  f772		       80		      .byte.b	128
    119  f773		       80		      .byte.b	128
    120  f774		       80		      .byte.b	128
    121  f775		       80		      .byte.b	128
    122  f776		       80		      .byte.b	128
    123  f777		       80		      .byte.b	128
    124  f778		       80		      .byte.b	128
    125  f779		       80		      .byte.b	128
    126  f77a		       80		      .byte.b	128
    127  f77b		       80		      .byte.b	128
    128  f77c		       80		      .byte.b	128
    129  f77d		       80		      .byte.b	128
    130  f77e		       80		      .byte.b	128
    131  f77f		       80		      .byte.b	128
    132  f780		       80		      .byte.b	128
    133  f781		       f0		      .byte.b	240
    134  f782		       f0		      .byte.b	240
    135  f783		       f0		      .byte.b	240
    136  f784		       f0		      .byte.b	240
    137  f785		       10		      .byte.b	16
    138  f786		       10		      .byte.b	16
    139  f787		       10		      .byte.b	16
    140  f788		       10		      .byte.b	16
    141  f789		       10		      .byte.b	16
    142  f78a		       10		      .byte.b	16
    143  f78b		       10		      .byte.b	16
    144  f78c		       10		      .byte.b	16
    145  f78d		       10		      .byte.b	16
    146  f78e		       10		      .byte.b	16
    147  f78f		       10		      .byte.b	16
    148  f790		       10		      .byte.b	16
    149  f791		       10		      .byte.b	16
    150  f792		       10		      .byte.b	16
    151  f793		       10		      .byte.b	16
    152  f794		       10		      .byte.b	16
    153  f795		       10		      .byte.b	16
    154  f796		       10		      .byte.b	16
    155  f797		       10		      .byte.b	16
    156  f798		       10		      .byte.b	16
    157  f799		       10		      .byte.b	16
    158  f79a		       10		      .byte.b	16
    159  f79b		       10		      .byte.b	16
    160  f79c		       10		      .byte.b	16
    161  f79d		       10		      .byte.b	16
    162  f79e		       10		      .byte.b	16
    163  f79f		       10		      .byte.b	16
    164  f7a0		       10		      .byte.b	16
    165  f7a1		       10		      .byte.b	16
    166  f7a2		       10		      .byte.b	16
    167  f7a3		       10		      .byte.b	16
    168  f7a4		       10		      .byte.b	16
    169  f7a5		       10		      .byte.b	16
    170  f7a6		       10		      .byte.b	16
    171  f7a7		       10		      .byte.b	16
    172  f7a8		       10		      .byte.b	16
    173  f7a9		       10		      .byte.b	16
    174  f7aa		       10		      .byte.b	16
    175  f7ab		       10		      .byte.b	16
    176  f7ac		       10		      .byte.b	16
    177  f7ad		       10		      .byte.b	16
    178  f7ae		       10		      .byte.b	16
    179  f7af		       10		      .byte.b	16
    180  f7b0		       10		      .byte.b	16
    181  f7b1		       10		      .byte.b	16
    182  f7b2		       10		      .byte.b	16
    183  f7b3		       10		      .byte.b	16
    184  f7b4		       10		      .byte.b	16
    185  f7b5		       10		      .byte.b	16
    186  f7b6		       10		      .byte.b	16
    187  f7b7		       10		      .byte.b	16
    188  f7b8		       10		      .byte.b	16
    189  f7b9		       10		      .byte.b	16
    190  f7ba		       f0		      .byte.b	240
    191  f7bb		       f0		      .byte.b	240
    192  f7bc		       f0		      .byte.b	240
    193  f7bd		       f0		      .byte.b	240
    194  f7be		       00		      .byte.b	0
    195  f7bf		       00		      .byte.b	0
    196  f7c0				   MainBoard_STRIP_1
    197  f7c0		       aa		      .byte.b	170
    198  f7c1		       00		      .byte.b	0
    199  f7c2		       ff		      .byte.b	255
    200  f7c3		       ff		      .byte.b	255
    201  f7c4		       ff		      .byte.b	255
    202  f7c5		       00		      .byte.b	0
    203  f7c6		       00		      .byte.b	0
    204  f7c7		       00		      .byte.b	0
    205  f7c8		       00		      .byte.b	0
    206  f7c9		       00		      .byte.b	0
    207  f7ca		       00		      .byte.b	0
    208  f7cb		       00		      .byte.b	0
    209  f7cc		       00		      .byte.b	0
    210  f7cd		       00		      .byte.b	0
    211  f7ce		       00		      .byte.b	0
    212  f7cf		       00		      .byte.b	0
    213  f7d0		       00		      .byte.b	0
    214  f7d1		       00		      .byte.b	0
    215  f7d2		       00		      .byte.b	0
    216  f7d3		       00		      .byte.b	0
    217  f7d4		       00		      .byte.b	0
    218  f7d5		       00		      .byte.b	0
    219  f7d6		       00		      .byte.b	0
    220  f7d7		       00		      .byte.b	0
    221  f7d8		       00		      .byte.b	0
    222  f7d9		       00		      .byte.b	0
    223  f7da		       00		      .byte.b	0
    224  f7db		       00		      .byte.b	0
    225  f7dc		       00		      .byte.b	0
    226  f7dd		       00		      .byte.b	0
    227  f7de		       00		      .byte.b	0
    228  f7df		       e3		      .byte.b	227
    229  f7e0		       e3		      .byte.b	227
    230  f7e1		       e3		      .byte.b	227
    231  f7e2		       e3		      .byte.b	227
    232  f7e3		       03		      .byte.b	3
    233  f7e4		       03		      .byte.b	3
    234  f7e5		       03		      .byte.b	3
    235  f7e6		       03		      .byte.b	3
    236  f7e7		       03		      .byte.b	3
    237  f7e8		       03		      .byte.b	3
    238  f7e9		       03		      .byte.b	3
    239  f7ea		       03		      .byte.b	3
    240  f7eb		       03		      .byte.b	3
    241  f7ec		       03		      .byte.b	3
    242  f7ed		       03		      .byte.b	3
    243  f7ee		       03		      .byte.b	3
    244  f7ef		       03		      .byte.b	3
    245  f7f0		       03		      .byte.b	3
    246  f7f1		       03		      .byte.b	3
    247  f7f2		       03		      .byte.b	3
    248  f7f3		       03		      .byte.b	3
    249  f7f4		       03		      .byte.b	3
    250  f7f5		       03		      .byte.b	3
    251  f7f6		       03		      .byte.b	3
    252  f7f7		       03		      .byte.b	3
    253  f7f8		       03		      .byte.b	3
    254  f7f9		       e3		      .byte.b	227
    255  f7fa		       e3		      .byte.b	227
    256  f7fb		       e3		      .byte.b	227
    257  f7fc		       e3		      .byte.b	227
    258  f7fd		       00		      .byte.b	0
    259  f7fe		       00		      .byte.b	0
    260  f7ff		       00		      .byte.b	0
    261  f800		       00		      .byte.b	0
    262  f801		       00		      .byte.b	0
    263  f802		       00		      .byte.b	0
    264  f803		       00		      .byte.b	0
    265  f804		       00		      .byte.b	0
    266  f805		       00		      .byte.b	0
    267  f806		       00		      .byte.b	0
    268  f807		       00		      .byte.b	0
    269  f808		       00		      .byte.b	0
    270  f809		       00		      .byte.b	0
    271  f80a		       00		      .byte.b	0
    272  f80b		       00		      .byte.b	0
    273  f80c		       00		      .byte.b	0
    274  f80d		       00		      .byte.b	0
    275  f80e		       00		      .byte.b	0
    276  f80f		       00		      .byte.b	0
    277  f810		       00		      .byte.b	0
    278  f811		       00		      .byte.b	0
    279  f812		       1f		      .byte.b	31
    280  f813		       1f		      .byte.b	31
    281  f814		       1f		      .byte.b	31
    282  f815		       00		      .byte.b	0
    283  f816		       00		      .byte.b	0
    284  f817		       00		      .byte.b	0
    285  f818		       00		      .byte.b	0
    286  f819		       00		      .byte.b	0
    287  f81a		       00		      .byte.b	0
    288  f81b		       00		      .byte.b	0
    289  f81c		       00		      .byte.b	0
    290  f81d		       00		      .byte.b	0
    291  f81e		       00		      .byte.b	0
    292  f81f		       00		      .byte.b	0
    293  f820		       00		      .byte.b	0
    294  f821		       00		      .byte.b	0
    295  f822		       00		      .byte.b	0
    296  f823		       00		      .byte.b	0
    297  f824		       00		      .byte.b	0
    298  f825		       00		      .byte.b	0
    299  f826		       00		      .byte.b	0
    300  f827		       00		      .byte.b	0
    301  f828		       00		      .byte.b	0
    302  f829		       00		      .byte.b	0
    303  f82a		       00		      .byte.b	0
    304  f82b		       1f		      .byte.b	31
    305  f82c		       1f		      .byte.b	31
    306  f82d		       00		      .byte.b	0
    307  f82e		       00		      .byte.b	0
    308  f82f		       00		      .byte.b	0
    309  f830		       00		      .byte.b	0
    310  f831		       00		      .byte.b	0
    311  f832		       00		      .byte.b	0
    312  f833		       00		      .byte.b	0
    313  f834		       00		      .byte.b	0
    314  f835		       00		      .byte.b	0
    315  f836		       00		      .byte.b	0
    316  f837		       00		      .byte.b	0
    317  f838		       00		      .byte.b	0
    318  f839		       00		      .byte.b	0
    319  f83a		       00		      .byte.b	0
    320  f83b		       00		      .byte.b	0
    321  f83c		       00		      .byte.b	0
    322  f83d		       00		      .byte.b	0
    323  f83e		       00		      .byte.b	0
    324  f83f		       00		      .byte.b	0
    325  f840		       00		      .byte.b	0
    326  f841		       00		      .byte.b	0
    327  f842		       1f		      .byte.b	31
    328  f843		       1f		      .byte.b	31
    329  f844		       1f		      .byte.b	31
    330  f845		       00		      .byte.b	0
    331  f846		       00		      .byte.b	0
    332  f847		       00		      .byte.b	0
    333  f848		       00		      .byte.b	0
    334  f849		       00		      .byte.b	0
    335  f84a		       00		      .byte.b	0
    336  f84b		       00		      .byte.b	0
    337  f84c		       00		      .byte.b	0
    338  f84d		       00		      .byte.b	0
    339  f84e		       00		      .byte.b	0
    340  f84f		       00		      .byte.b	0
    341  f850		       00		      .byte.b	0
    342  f851		       00		      .byte.b	0
    343  f852		       00		      .byte.b	0
    344  f853		       00		      .byte.b	0
    345  f854		       00		      .byte.b	0
    346  f855		       00		      .byte.b	0
    347  f856		       00		      .byte.b	0
    348  f857		       00		      .byte.b	0
    349  f858		       00		      .byte.b	0
    350  f859		       00		      .byte.b	0
    351  f85a		       00		      .byte.b	0
    352  f85b		       f8		      .byte.b	248
    353  f85c		       f8		      .byte.b	248
    354  f85d		       f8		      .byte.b	248
    355  f85e		       f8		      .byte.b	248
    356  f85f		       f8		      .byte.b	248
    357  f860		       f8		      .byte.b	248
    358  f861		       f8		      .byte.b	248
    359  f862		       f8		      .byte.b	248
    360  f863		       f8		      .byte.b	248
    361  f864		       00		      .byte.b	0
    362  f865		       00		      .byte.b	0
    363  f866		       00		      .byte.b	0
    364  f867		       00		      .byte.b	0
    365  f868		       00		      .byte.b	0
    366  f869		       00		      .byte.b	0
    367  f86a		       00		      .byte.b	0
    368  f86b		       00		      .byte.b	0
    369  f86c		       00		      .byte.b	0
    370  f86d		       00		      .byte.b	0
    371  f86e		       00		      .byte.b	0
    372  f86f		       00		      .byte.b	0
    373  f870		       00		      .byte.b	0
    374  f871		       00		      .byte.b	0
    375  f872		       00		      .byte.b	0
    376  f873		       00		      .byte.b	0
    377  f874		       00		      .byte.b	0
    378  f875		       00		      .byte.b	0
    379  f876		       00		      .byte.b	0
    380  f877		       00		      .byte.b	0
    381  f878		       00		      .byte.b	0
    382  f879		       00		      .byte.b	0
    383  f87a		       ff		      .byte.b	255
    384  f87b		       ff		      .byte.b	255
    385  f87c		       ff		      .byte.b	255
    386  f87d		       ff		      .byte.b	255
    387  f87e		       00		      .byte.b	0
    388  f87f		       00		      .byte.b	0
    389  f880				   MainBoard_STRIP_2
    390  f880		       00		      .byte.b	0
    391  f881		       00		      .byte.b	0
    392  f882		       ff		      .byte.b	255
    393  f883		       ff		      .byte.b	255
    394  f884		       ff		      .byte.b	255
    395  f885		       80		      .byte.b	128
    396  f886		       80		      .byte.b	128
    397  f887		       80		      .byte.b	128
    398  f888		       80		      .byte.b	128
    399  f889		       80		      .byte.b	128
    400  f88a		       80		      .byte.b	128
    401  f88b		       80		      .byte.b	128
    402  f88c		       80		      .byte.b	128
    403  f88d		       80		      .byte.b	128
    404  f88e		       80		      .byte.b	128
    405  f88f		       80		      .byte.b	128
    406  f890		       80		      .byte.b	128
    407  f891		       80		      .byte.b	128
    408  f892		       80		      .byte.b	128
    409  f893		       80		      .byte.b	128
    410  f894		       80		      .byte.b	128
    411  f895		       80		      .byte.b	128
    412  f896		       80		      .byte.b	128
    413  f897		       80		      .byte.b	128
    414  f898		       80		      .byte.b	128
    415  f899		       80		      .byte.b	128
    416  f89a		       80		      .byte.b	128
    417  f89b		       80		      .byte.b	128
    418  f89c		       80		      .byte.b	128
    419  f89d		       80		      .byte.b	128
    420  f89e		       80		      .byte.b	128
    421  f89f		       8f		      .byte.b	143
    422  f8a0		       8f		      .byte.b	143
    423  f8a1		       8f		      .byte.b	143
    424  f8a2		       8f		      .byte.b	143
    425  f8a3		       01		      .byte.b	1
    426  f8a4		       01		      .byte.b	1
    427  f8a5		       01		      .byte.b	1
    428  f8a6		       01		      .byte.b	1
    429  f8a7		       01		      .byte.b	1
    430  f8a8		       01		      .byte.b	1
    431  f8a9		       01		      .byte.b	1
    432  f8aa		       01		      .byte.b	1
    433  f8ab		       01		      .byte.b	1
    434  f8ac		       01		      .byte.b	1
    435  f8ad		       01		      .byte.b	1
    436  f8ae		       01		      .byte.b	1
    437  f8af		       01		      .byte.b	1
    438  f8b0		       01		      .byte.b	1
    439  f8b1		       01		      .byte.b	1
    440  f8b2		       01		      .byte.b	1
    441  f8b3		       01		      .byte.b	1
    442  f8b4		       01		      .byte.b	1
    443  f8b5		       01		      .byte.b	1
    444  f8b6		       01		      .byte.b	1
    445  f8b7		       01		      .byte.b	1
    446  f8b8		       01		      .byte.b	1
    447  f8b9		       e1		      .byte.b	225
    448  f8ba		       e1		      .byte.b	225
    449  f8bb		       e1		      .byte.b	225
    450  f8bc		       e1		      .byte.b	225
    451  f8bd		       80		      .byte.b	128
    452  f8be		       80		      .byte.b	128
    453  f8bf		       80		      .byte.b	128
    454  f8c0		       80		      .byte.b	128
    455  f8c1		       80		      .byte.b	128
    456  f8c2		       80		      .byte.b	128
    457  f8c3		       80		      .byte.b	128
    458  f8c4		       80		      .byte.b	128
    459  f8c5		       80		      .byte.b	128
    460  f8c6		       80		      .byte.b	128
    461  f8c7		       80		      .byte.b	128
    462  f8c8		       80		      .byte.b	128
    463  f8c9		       80		      .byte.b	128
    464  f8ca		       80		      .byte.b	128
    465  f8cb		       80		      .byte.b	128
    466  f8cc		       80		      .byte.b	128
    467  f8cd		       80		      .byte.b	128
    468  f8ce		       80		      .byte.b	128
    469  f8cf		       80		      .byte.b	128
    470  f8d0		       80		      .byte.b	128
    471  f8d1		       80		      .byte.b	128
    472  f8d2		       8f		      .byte.b	143
    473  f8d3		       8f		      .byte.b	143
    474  f8d4		       8f		      .byte.b	143
    475  f8d5		       00		      .byte.b	0
    476  f8d6		       00		      .byte.b	0
    477  f8d7		       00		      .byte.b	0
    478  f8d8		       00		      .byte.b	0
    479  f8d9		       00		      .byte.b	0
    480  f8da		       00		      .byte.b	0
    481  f8db		       00		      .byte.b	0
    482  f8dc		       00		      .byte.b	0
    483  f8dd		       00		      .byte.b	0
    484  f8de		       00		      .byte.b	0
    485  f8df		       00		      .byte.b	0
    486  f8e0		       00		      .byte.b	0
    487  f8e1		       00		      .byte.b	0
    488  f8e2		       00		      .byte.b	0
    489  f8e3		       00		      .byte.b	0
    490  f8e4		       00		      .byte.b	0
    491  f8e5		       00		      .byte.b	0
    492  f8e6		       00		      .byte.b	0
    493  f8e7		       00		      .byte.b	0
    494  f8e8		       00		      .byte.b	0
    495  f8e9		       00		      .byte.b	0
    496  f8ea		       e0		      .byte.b	224
    497  f8eb		       e3		      .byte.b	227
    498  f8ec		       e3		      .byte.b	227
    499  f8ed		       20		      .byte.b	32
    500  f8ee		       20		      .byte.b	32
    501  f8ef		       20		      .byte.b	32
    502  f8f0		       20		      .byte.b	32
    503  f8f1		       20		      .byte.b	32
    504  f8f2		       20		      .byte.b	32
    505  f8f3		       20		      .byte.b	32
    506  f8f4		       20		      .byte.b	32
    507  f8f5		       20		      .byte.b	32
    508  f8f6		       20		      .byte.b	32
    509  f8f7		       20		      .byte.b	32
    510  f8f8		       20		      .byte.b	32
    511  f8f9		       20		      .byte.b	32
    512  f8fa		       20		      .byte.b	32
    513  f8fb		       20		      .byte.b	32
    514  f8fc		       20		      .byte.b	32
    515  f8fd		       20		      .byte.b	32
    516  f8fe		       20		      .byte.b	32
    517  f8ff		       20		      .byte.b	32
    518  f900		       20		      .byte.b	32
    519  f901		       20		      .byte.b	32
    520  f902		       3f		      .byte.b	63
    521  f903		       ff		      .byte.b	255
    522  f904		       ff		      .byte.b	255
    523  f905		       00		      .byte.b	0
    524  f906		       00		      .byte.b	0
    525  f907		       00		      .byte.b	0
    526  f908		       00		      .byte.b	0
    527  f909		       00		      .byte.b	0
    528  f90a		       00		      .byte.b	0
    529  f90b		       00		      .byte.b	0
    530  f90c		       00		      .byte.b	0
    531  f90d		       00		      .byte.b	0
    532  f90e		       00		      .byte.b	0
    533  f90f		       00		      .byte.b	0
    534  f910		       00		      .byte.b	0
    535  f911		       00		      .byte.b	0
    536  f912		       00		      .byte.b	0
    537  f913		       00		      .byte.b	0
    538  f914		       00		      .byte.b	0
    539  f915		       00		      .byte.b	0
    540  f916		       00		      .byte.b	0
    541  f917		       00		      .byte.b	0
    542  f918		       00		      .byte.b	0
    543  f919		       00		      .byte.b	0
    544  f91a		       00		      .byte.b	0
    545  f91b		       8f		      .byte.b	143
    546  f91c		       8f		      .byte.b	143
    547  f91d		       8f		      .byte.b	143
    548  f91e		       8f		      .byte.b	143
    549  f91f		       8f		      .byte.b	143
    550  f920		       8f		      .byte.b	143
    551  f921		       8f		      .byte.b	143
    552  f922		       8f		      .byte.b	143
    553  f923		       8f		      .byte.b	143
    554  f924		       80		      .byte.b	128
    555  f925		       80		      .byte.b	128
    556  f926		       80		      .byte.b	128
    557  f927		       80		      .byte.b	128
    558  f928		       80		      .byte.b	128
    559  f929		       80		      .byte.b	128
    560  f92a		       80		      .byte.b	128
    561  f92b		       80		      .byte.b	128
    562  f92c		       80		      .byte.b	128
    563  f92d		       80		      .byte.b	128
    564  f92e		       80		      .byte.b	128
    565  f92f		       80		      .byte.b	128
    566  f930		       80		      .byte.b	128
    567  f931		       80		      .byte.b	128
    568  f932		       80		      .byte.b	128
    569  f933		       80		      .byte.b	128
    570  f934		       80		      .byte.b	128
    571  f935		       80		      .byte.b	128
    572  f936		       80		      .byte.b	128
    573  f937		       80		      .byte.b	128
    574  f938		       80		      .byte.b	128
    575  f939		       80		      .byte.b	128
    576  f93a		       ff		      .byte.b	255
    577  f93b		       ff		      .byte.b	255
    578  f93c		       ff		      .byte.b	255
    579  f93d		       ff		      .byte.b	255
    580  f93e		       00		      .byte.b	0
    581  f93f		       00		      .byte.b	0
    582  f940				   MainBoard_STRIP_3
    583  f940		       00		      .byte.b	0
    584  f941		       00		      .byte.b	0
    585  f942		       f0		      .byte.b	240
    586  f943		       f0		      .byte.b	240
    587  f944		       f0		      .byte.b	240
    588  f945		       10		      .byte.b	16
    589  f946		       10		      .byte.b	16
    590  f947		       10		      .byte.b	16
    591  f948		       10		      .byte.b	16
    592  f949		       10		      .byte.b	16
    593  f94a		       10		      .byte.b	16
    594  f94b		       10		      .byte.b	16
    595  f94c		       10		      .byte.b	16
    596  f94d		       10		      .byte.b	16
    597  f94e		       10		      .byte.b	16
    598  f94f		       10		      .byte.b	16
    599  f950		       10		      .byte.b	16
    600  f951		       10		      .byte.b	16
    601  f952		       10		      .byte.b	16
    602  f953		       10		      .byte.b	16
    603  f954		       10		      .byte.b	16
    604  f955		       10		      .byte.b	16
    605  f956		       10		      .byte.b	16
    606  f957		       10		      .byte.b	16
    607  f958		       10		      .byte.b	16
    608  f959		       10		      .byte.b	16
    609  f95a		       10		      .byte.b	16
    610  f95b		       10		      .byte.b	16
    611  f95c		       10		      .byte.b	16
    612  f95d		       10		      .byte.b	16
    613  f95e		       10		      .byte.b	16
    614  f95f		       10		      .byte.b	16
    615  f960		       10		      .byte.b	16
    616  f961		       10		      .byte.b	16
    617  f962		       10		      .byte.b	16
    618  f963		       00		      .byte.b	0
    619  f964		       00		      .byte.b	0
    620  f965		       00		      .byte.b	0
    621  f966		       00		      .byte.b	0
    622  f967		       00		      .byte.b	0
    623  f968		       00		      .byte.b	0
    624  f969		       00		      .byte.b	0
    625  f96a		       00		      .byte.b	0
    626  f96b		       00		      .byte.b	0
    627  f96c		       00		      .byte.b	0
    628  f96d		       00		      .byte.b	0
    629  f96e		       00		      .byte.b	0
    630  f96f		       00		      .byte.b	0
    631  f970		       00		      .byte.b	0
    632  f971		       00		      .byte.b	0
    633  f972		       00		      .byte.b	0
    634  f973		       00		      .byte.b	0
    635  f974		       00		      .byte.b	0
    636  f975		       00		      .byte.b	0
    637  f976		       00		      .byte.b	0
    638  f977		       00		      .byte.b	0
    639  f978		       00		      .byte.b	0
    640  f979		       70		      .byte.b	112
    641  f97a		       70		      .byte.b	112
    642  f97b		       70		      .byte.b	112
    643  f97c		       70		      .byte.b	112
    644  f97d		       10		      .byte.b	16
    645  f97e		       10		      .byte.b	16
    646  f97f		       10		      .byte.b	16
    647  f980		       10		      .byte.b	16
    648  f981		       10		      .byte.b	16
    649  f982		       10		      .byte.b	16
    650  f983		       10		      .byte.b	16
    651  f984		       10		      .byte.b	16
    652  f985		       10		      .byte.b	16
    653  f986		       10		      .byte.b	16
    654  f987		       10		      .byte.b	16
    655  f988		       10		      .byte.b	16
    656  f989		       10		      .byte.b	16
    657  f98a		       10		      .byte.b	16
    658  f98b		       10		      .byte.b	16
    659  f98c		       10		      .byte.b	16
    660  f98d		       10		      .byte.b	16
    661  f98e		       10		      .byte.b	16
    662  f98f		       10		      .byte.b	16
    663  f990		       10		      .byte.b	16
    664  f991		       10		      .byte.b	16
    665  f992		       10		      .byte.b	16
    666  f993		       10		      .byte.b	16
    667  f994		       10		      .byte.b	16
    668  f995		       00		      .byte.b	0
    669  f996		       00		      .byte.b	0
    670  f997		       00		      .byte.b	0
    671  f998		       00		      .byte.b	0
    672  f999		       00		      .byte.b	0
    673  f99a		       00		      .byte.b	0
    674  f99b		       00		      .byte.b	0
    675  f99c		       00		      .byte.b	0
    676  f99d		       00		      .byte.b	0
    677  f99e		       00		      .byte.b	0
    678  f99f		       00		      .byte.b	0
    679  f9a0		       00		      .byte.b	0
    680  f9a1		       00		      .byte.b	0
    681  f9a2		       00		      .byte.b	0
    682  f9a3		       00		      .byte.b	0
    683  f9a4		       00		      .byte.b	0
    684  f9a5		       00		      .byte.b	0
    685  f9a6		       00		      .byte.b	0
    686  f9a7		       00		      .byte.b	0
    687  f9a8		       00		      .byte.b	0
    688  f9a9		       00		      .byte.b	0
    689  f9aa		       70		      .byte.b	112
    690  f9ab		       70		      .byte.b	112
    691  f9ac		       70		      .byte.b	112
    692  f9ad		       40		      .byte.b	64
    693  f9ae		       40		      .byte.b	64
    694  f9af		       40		      .byte.b	64
    695  f9b0		       40		      .byte.b	64
    696  f9b1		       40		      .byte.b	64
    697  f9b2		       40		      .byte.b	64
    698  f9b3		       40		      .byte.b	64
    699  f9b4		       40		      .byte.b	64
    700  f9b5		       40		      .byte.b	64
    701  f9b6		       40		      .byte.b	64
    702  f9b7		       40		      .byte.b	64
    703  f9b8		       40		      .byte.b	64
    704  f9b9		       40		      .byte.b	64
    705  f9ba		       40		      .byte.b	64
    706  f9bb		       40		      .byte.b	64
    707  f9bc		       40		      .byte.b	64
    708  f9bd		       40		      .byte.b	64
    709  f9be		       40		      .byte.b	64
    710  f9bf		       40		      .byte.b	64
    711  f9c0		       40		      .byte.b	64
    712  f9c1		       40		      .byte.b	64
    713  f9c2		       c0		      .byte.b	192
    714  f9c3		       f0		      .byte.b	240
    715  f9c4		       f0		      .byte.b	240
    716  f9c5		       00		      .byte.b	0
    717  f9c6		       00		      .byte.b	0
    718  f9c7		       00		      .byte.b	0
    719  f9c8		       00		      .byte.b	0
    720  f9c9		       00		      .byte.b	0
    721  f9ca		       00		      .byte.b	0
    722  f9cb		       00		      .byte.b	0
    723  f9cc		       00		      .byte.b	0
    724  f9cd		       00		      .byte.b	0
    725  f9ce		       00		      .byte.b	0
    726  f9cf		       00		      .byte.b	0
    727  f9d0		       00		      .byte.b	0
    728  f9d1		       00		      .byte.b	0
    729  f9d2		       00		      .byte.b	0
    730  f9d3		       00		      .byte.b	0
    731  f9d4		       00		      .byte.b	0
    732  f9d5		       00		      .byte.b	0
    733  f9d6		       00		      .byte.b	0
    734  f9d7		       00		      .byte.b	0
    735  f9d8		       00		      .byte.b	0
    736  f9d9		       00		      .byte.b	0
    737  f9da		       00		      .byte.b	0
    738  f9db		       10		      .byte.b	16
    739  f9dc		       10		      .byte.b	16
    740  f9dd		       10		      .byte.b	16
    741  f9de		       10		      .byte.b	16
    742  f9df		       10		      .byte.b	16
    743  f9e0		       10		      .byte.b	16
    744  f9e1		       10		      .byte.b	16
    745  f9e2		       10		      .byte.b	16
    746  f9e3		       10		      .byte.b	16
    747  f9e4		       10		      .byte.b	16
    748  f9e5		       10		      .byte.b	16
    749  f9e6		       10		      .byte.b	16
    750  f9e7		       10		      .byte.b	16
    751  f9e8		       10		      .byte.b	16
    752  f9e9		       10		      .byte.b	16
    753  f9ea		       10		      .byte.b	16
    754  f9eb		       10		      .byte.b	16
    755  f9ec		       10		      .byte.b	16
    756  f9ed		       10		      .byte.b	16
    757  f9ee		       10		      .byte.b	16
    758  f9ef		       10		      .byte.b	16
    759  f9f0		       10		      .byte.b	16
    760  f9f1		       10		      .byte.b	16
    761  f9f2		       10		      .byte.b	16
    762  f9f3		       10		      .byte.b	16
    763  f9f4		       10		      .byte.b	16
    764  f9f5		       10		      .byte.b	16
    765  f9f6		       10		      .byte.b	16
    766  f9f7		       10		      .byte.b	16
    767  f9f8		       10		      .byte.b	16
    768  f9f9		       10		      .byte.b	16
    769  f9fa		       f0		      .byte.b	240
    770  f9fb		       f0		      .byte.b	240
    771  f9fc		       f0		      .byte.b	240
    772  f9fd		       f0		      .byte.b	240
    773  f9fe		       00		      .byte.b	0
    774  f9ff		       00		      .byte.b	0
    775  fa00				   MainBoard_STRIP_4
    776  fa00		       00		      .byte.b	0
    777  fa01		       00		      .byte.b	0
    778  fa02		       ff		      .byte.b	255
    779  fa03		       ff		      .byte.b	255
    780  fa04		       ff		      .byte.b	255
    781  fa05		       00		      .byte.b	0
    782  fa06		       00		      .byte.b	0
    783  fa07		       00		      .byte.b	0
    784  fa08		       00		      .byte.b	0
    785  fa09		       00		      .byte.b	0
    786  fa0a		       00		      .byte.b	0
    787  fa0b		       00		      .byte.b	0
    788  fa0c		       00		      .byte.b	0
    789  fa0d		       00		      .byte.b	0
    790  fa0e		       00		      .byte.b	0
    791  fa0f		       00		      .byte.b	0
    792  fa10		       00		      .byte.b	0
    793  fa11		       00		      .byte.b	0
    794  fa12		       00		      .byte.b	0
    795  fa13		       00		      .byte.b	0
    796  fa14		       00		      .byte.b	0
    797  fa15		       00		      .byte.b	0
    798  fa16		       00		      .byte.b	0
    799  fa17		       00		      .byte.b	0
    800  fa18		       00		      .byte.b	0
    801  fa19		       00		      .byte.b	0
    802  fa1a		       00		      .byte.b	0
    803  fa1b		       00		      .byte.b	0
    804  fa1c		       00		      .byte.b	0
    805  fa1d		       00		      .byte.b	0
    806  fa1e		       00		      .byte.b	0
    807  fa1f		       fc		      .byte.b	252
    808  fa20		       fc		      .byte.b	252
    809  fa21		       fc		      .byte.b	252
    810  fa22		       fc		      .byte.b	252
    811  fa23		       1c		      .byte.b	28
    812  fa24		       1c		      .byte.b	28
    813  fa25		       1c		      .byte.b	28
    814  fa26		       1c		      .byte.b	28
    815  fa27		       1c		      .byte.b	28
    816  fa28		       1c		      .byte.b	28
    817  fa29		       1c		      .byte.b	28
    818  fa2a		       1c		      .byte.b	28
    819  fa2b		       1c		      .byte.b	28
    820  fa2c		       1c		      .byte.b	28
    821  fa2d		       1c		      .byte.b	28
    822  fa2e		       1c		      .byte.b	28
    823  fa2f		       1c		      .byte.b	28
    824  fa30		       1c		      .byte.b	28
    825  fa31		       1c		      .byte.b	28
    826  fa32		       1c		      .byte.b	28
    827  fa33		       1c		      .byte.b	28
    828  fa34		       1c		      .byte.b	28
    829  fa35		       1c		      .byte.b	28
    830  fa36		       1c		      .byte.b	28
    831  fa37		       1c		      .byte.b	28
    832  fa38		       1c		      .byte.b	28
    833  fa39		       1c		      .byte.b	28
    834  fa3a		       1c		      .byte.b	28
    835  fa3b		       1c		      .byte.b	28
    836  fa3c		       1c		      .byte.b	28
    837  fa3d		       00		      .byte.b	0
    838  fa3e		       00		      .byte.b	0
    839  fa3f		       00		      .byte.b	0
    840  fa40		       00		      .byte.b	0
    841  fa41		       00		      .byte.b	0
    842  fa42		       00		      .byte.b	0
    843  fa43		       00		      .byte.b	0
    844  fa44		       00		      .byte.b	0
    845  fa45		       00		      .byte.b	0
    846  fa46		       00		      .byte.b	0
    847  fa47		       00		      .byte.b	0
    848  fa48		       00		      .byte.b	0
    849  fa49		       00		      .byte.b	0
    850  fa4a		       00		      .byte.b	0
    851  fa4b		       00		      .byte.b	0
    852  fa4c		       00		      .byte.b	0
    853  fa4d		       00		      .byte.b	0
    854  fa4e		       00		      .byte.b	0
    855  fa4f		       00		      .byte.b	0
    856  fa50		       00		      .byte.b	0
    857  fa51		       00		      .byte.b	0
    858  fa52		       ff		      .byte.b	255
    859  fa53		       ff		      .byte.b	255
    860  fa54		       ff		      .byte.b	255
    861  fa55		       00		      .byte.b	0
    862  fa56		       00		      .byte.b	0
    863  fa57		       00		      .byte.b	0
    864  fa58		       00		      .byte.b	0
    865  fa59		       00		      .byte.b	0
    866  fa5a		       00		      .byte.b	0
    867  fa5b		       00		      .byte.b	0
    868  fa5c		       00		      .byte.b	0
    869  fa5d		       00		      .byte.b	0
    870  fa5e		       00		      .byte.b	0
    871  fa5f		       00		      .byte.b	0
    872  fa60		       00		      .byte.b	0
    873  fa61		       00		      .byte.b	0
    874  fa62		       00		      .byte.b	0
    875  fa63		       00		      .byte.b	0
    876  fa64		       00		      .byte.b	0
    877  fa65		       00		      .byte.b	0
    878  fa66		       00		      .byte.b	0
    879  fa67		       00		      .byte.b	0
    880  fa68		       00		      .byte.b	0
    881  fa69		       00		      .byte.b	0
    882  fa6a		       00		      .byte.b	0
    883  fa6b		       3f		      .byte.b	63
    884  fa6c		       3f		      .byte.b	63
    885  fa6d		       00		      .byte.b	0
    886  fa6e		       00		      .byte.b	0
    887  fa6f		       00		      .byte.b	0
    888  fa70		       00		      .byte.b	0
    889  fa71		       00		      .byte.b	0
    890  fa72		       00		      .byte.b	0
    891  fa73		       00		      .byte.b	0
    892  fa74		       00		      .byte.b	0
    893  fa75		       00		      .byte.b	0
    894  fa76		       00		      .byte.b	0
    895  fa77		       00		      .byte.b	0
    896  fa78		       00		      .byte.b	0
    897  fa79		       00		      .byte.b	0
    898  fa7a		       00		      .byte.b	0
    899  fa7b		       00		      .byte.b	0
    900  fa7c		       00		      .byte.b	0
    901  fa7d		       00		      .byte.b	0
    902  fa7e		       00		      .byte.b	0
    903  fa7f		       00		      .byte.b	0
    904  fa80		       00		      .byte.b	0
    905  fa81		       00		      .byte.b	0
    906  fa82		       ff		      .byte.b	255
    907  fa83		       ff		      .byte.b	255
    908  fa84		       ff		      .byte.b	255
    909  fa85		       00		      .byte.b	0
    910  fa86		       00		      .byte.b	0
    911  fa87		       00		      .byte.b	0
    912  fa88		       00		      .byte.b	0
    913  fa89		       00		      .byte.b	0
    914  fa8a		       00		      .byte.b	0
    915  fa8b		       00		      .byte.b	0
    916  fa8c		       00		      .byte.b	0
    917  fa8d		       00		      .byte.b	0
    918  fa8e		       00		      .byte.b	0
    919  fa8f		       00		      .byte.b	0
    920  fa90		       00		      .byte.b	0
    921  fa91		       00		      .byte.b	0
    922  fa92		       00		      .byte.b	0
    923  fa93		       00		      .byte.b	0
    924  fa94		       00		      .byte.b	0
    925  fa95		       00		      .byte.b	0
    926  fa96		       00		      .byte.b	0
    927  fa97		       00		      .byte.b	0
    928  fa98		       00		      .byte.b	0
    929  fa99		       00		      .byte.b	0
    930  fa9a		       00		      .byte.b	0
    931  fa9b		       f1		      .byte.b	241
    932  fa9c		       f1		      .byte.b	241
    933  fa9d		       f1		      .byte.b	241
    934  fa9e		       f1		      .byte.b	241
    935  fa9f		       f1		      .byte.b	241
    936  faa0		       f1		      .byte.b	241
    937  faa1		       f1		      .byte.b	241
    938  faa2		       f1		      .byte.b	241
    939  faa3		       f1		      .byte.b	241
    940  faa4		       00		      .byte.b	0
    941  faa5		       00		      .byte.b	0
    942  faa6		       00		      .byte.b	0
    943  faa7		       00		      .byte.b	0
    944  faa8		       00		      .byte.b	0
    945  faa9		       00		      .byte.b	0
    946  faaa		       00		      .byte.b	0
    947  faab		       00		      .byte.b	0
    948  faac		       00		      .byte.b	0
    949  faad		       00		      .byte.b	0
    950  faae		       00		      .byte.b	0
    951  faaf		       00		      .byte.b	0
    952  fab0		       00		      .byte.b	0
    953  fab1		       00		      .byte.b	0
    954  fab2		       00		      .byte.b	0
    955  fab3		       00		      .byte.b	0
    956  fab4		       00		      .byte.b	0
    957  fab5		       00		      .byte.b	0
    958  fab6		       00		      .byte.b	0
    959  fab7		       00		      .byte.b	0
    960  fab8		       00		      .byte.b	0
    961  fab9		       00		      .byte.b	0
    962  faba		       ff		      .byte.b	255
    963  fabb		       ff		      .byte.b	255
    964  fabc		       ff		      .byte.b	255
    965  fabd		       ff		      .byte.b	255
    966  fabe		       00		      .byte.b	0
    967  fabf		       00		      .byte.b	0
    968  fac0				   MainBoard_STRIP_5
    969  fac0		       00		      .byte.b	0
    970  fac1		       00		      .byte.b	0
    971  fac2		       ff		      .byte.b	255
    972  fac3		       ff		      .byte.b	255
    973  fac4		       ff		      .byte.b	255
    974  fac5		       80		      .byte.b	128
    975  fac6		       80		      .byte.b	128
    976  fac7		       80		      .byte.b	128
    977  fac8		       80		      .byte.b	128
    978  fac9		       80		      .byte.b	128
    979  faca		       80		      .byte.b	128
    980  facb		       80		      .byte.b	128
    981  facc		       80		      .byte.b	128
    982  facd		       80		      .byte.b	128
    983  face		       80		      .byte.b	128
    984  facf		       80		      .byte.b	128
    985  fad0		       80		      .byte.b	128
    986  fad1		       80		      .byte.b	128
    987  fad2		       80		      .byte.b	128
    988  fad3		       80		      .byte.b	128
    989  fad4		       80		      .byte.b	128
    990  fad5		       80		      .byte.b	128
    991  fad6		       80		      .byte.b	128
    992  fad7		       80		      .byte.b	128
    993  fad8		       80		      .byte.b	128
    994  fad9		       80		      .byte.b	128
    995  fada		       80		      .byte.b	128
    996  fadb		       80		      .byte.b	128
    997  fadc		       80		      .byte.b	128
    998  fadd		       80		      .byte.b	128
    999  fade		       80		      .byte.b	128
   1000  fadf		       8e		      .byte.b	142
   1001  fae0		       8e		      .byte.b	142
   1002  fae1		       8e		      .byte.b	142
   1003  fae2		       8e		      .byte.b	142
   1004  fae3		       80		      .byte.b	128
   1005  fae4		       80		      .byte.b	128
   1006  fae5		       80		      .byte.b	128
   1007  fae6		       80		      .byte.b	128
   1008  fae7		       80		      .byte.b	128
   1009  fae8		       80		      .byte.b	128
   1010  fae9		       80		      .byte.b	128
   1011  faea		       80		      .byte.b	128
   1012  faeb		       80		      .byte.b	128
   1013  faec		       80		      .byte.b	128
   1014  faed		       80		      .byte.b	128
   1015  faee		       80		      .byte.b	128
   1016  faef		       80		      .byte.b	128
   1017  faf0		       80		      .byte.b	128
   1018  faf1		       80		      .byte.b	128
   1019  faf2		       80		      .byte.b	128
   1020  faf3		       80		      .byte.b	128
   1021  faf4		       80		      .byte.b	128
   1022  faf5		       80		      .byte.b	128
   1023  faf6		       80		      .byte.b	128
   1024  faf7		       80		      .byte.b	128
   1025  faf8		       80		      .byte.b	128
   1026  faf9		       fe		      .byte.b	254
   1027  fafa		       fe		      .byte.b	254
   1028  fafb		       fe		      .byte.b	254
   1029  fafc		       fe		      .byte.b	254
   1030  fafd		       10		      .byte.b	16
   1031  fafe		       10		      .byte.b	16
   1032  faff		       10		      .byte.b	16
   1033  fb00		       50		      .byte.b	80
   1034  fb01		       10		      .byte.b	16
   1035  fb02		       50		      .byte.b	80
   1036  fb03		       10		      .byte.b	16
   1037  fb04		       50		      .byte.b	80
   1038  fb05		       10		      .byte.b	16
   1039  fb06		       50		      .byte.b	80
   1040  fb07		       10		      .byte.b	16
   1041  fb08		       50		      .byte.b	80
   1042  fb09		       10		      .byte.b	16
   1043  fb0a		       50		      .byte.b	80
   1044  fb0b		       10		      .byte.b	16
   1045  fb0c		       50		      .byte.b	80
   1046  fb0d		       10		      .byte.b	16
   1047  fb0e		       50		      .byte.b	80
   1048  fb0f		       10		      .byte.b	16
   1049  fb10		       50		      .byte.b	80
   1050  fb11		       10		      .byte.b	16
   1051  fb12		       f1		      .byte.b	241
   1052  fb13		       f1		      .byte.b	241
   1053  fb14		       f1		      .byte.b	241
   1054  fb15		       00		      .byte.b	0
   1055  fb16		       00		      .byte.b	0
   1056  fb17		       00		      .byte.b	0
   1057  fb18		       00		      .byte.b	0
   1058  fb19		       00		      .byte.b	0
   1059  fb1a		       00		      .byte.b	0
   1060  fb1b		       00		      .byte.b	0
   1061  fb1c		       00		      .byte.b	0
   1062  fb1d		       00		      .byte.b	0
   1063  fb1e		       00		      .byte.b	0
   1064  fb1f		       00		      .byte.b	0
   1065  fb20		       00		      .byte.b	0
   1066  fb21		       00		      .byte.b	0
   1067  fb22		       00		      .byte.b	0
   1068  fb23		       00		      .byte.b	0
   1069  fb24		       00		      .byte.b	0
   1070  fb25		       00		      .byte.b	0
   1071  fb26		       00		      .byte.b	0
   1072  fb27		       00		      .byte.b	0
   1073  fb28		       00		      .byte.b	0
   1074  fb29		       00		      .byte.b	0
   1075  fb2a		       00		      .byte.b	0
   1076  fb2b		       f1		      .byte.b	241
   1077  fb2c		       f1		      .byte.b	241
   1078  fb2d		       f0		      .byte.b	240
   1079  fb2e		       10		      .byte.b	16
   1080  fb2f		       50		      .byte.b	80
   1081  fb30		       10		      .byte.b	16
   1082  fb31		       50		      .byte.b	80
   1083  fb32		       10		      .byte.b	16
   1084  fb33		       50		      .byte.b	80
   1085  fb34		       10		      .byte.b	16
   1086  fb35		       50		      .byte.b	80
   1087  fb36		       10		      .byte.b	16
   1088  fb37		       50		      .byte.b	80
   1089  fb38		       10		      .byte.b	16
   1090  fb39		       50		      .byte.b	80
   1091  fb3a		       10		      .byte.b	16
   1092  fb3b		       50		      .byte.b	80
   1093  fb3c		       10		      .byte.b	16
   1094  fb3d		       50		      .byte.b	80
   1095  fb3e		       10		      .byte.b	16
   1096  fb3f		       50		      .byte.b	80
   1097  fb40		       10		      .byte.b	16
   1098  fb41		       f0		      .byte.b	240
   1099  fb42		       f1		      .byte.b	241
   1100  fb43		       f1		      .byte.b	241
   1101  fb44		       f1		      .byte.b	241
   1102  fb45		       80		      .byte.b	128
   1103  fb46		       80		      .byte.b	128
   1104  fb47		       80		      .byte.b	128
   1105  fb48		       80		      .byte.b	128
   1106  fb49		       80		      .byte.b	128
   1107  fb4a		       80		      .byte.b	128
   1108  fb4b		       80		      .byte.b	128
   1109  fb4c		       80		      .byte.b	128
   1110  fb4d		       80		      .byte.b	128
   1111  fb4e		       80		      .byte.b	128
   1112  fb4f		       80		      .byte.b	128
   1113  fb50		       80		      .byte.b	128
   1114  fb51		       80		      .byte.b	128
   1115  fb52		       80		      .byte.b	128
   1116  fb53		       80		      .byte.b	128
   1117  fb54		       80		      .byte.b	128
   1118  fb55		       80		      .byte.b	128
   1119  fb56		       80		      .byte.b	128
   1120  fb57		       80		      .byte.b	128
   1121  fb58		       80		      .byte.b	128
   1122  fb59		       80		      .byte.b	128
   1123  fb5a		       80		      .byte.b	128
   1124  fb5b		       8f		      .byte.b	143
   1125  fb5c		       8f		      .byte.b	143
   1126  fb5d		       8f		      .byte.b	143
   1127  fb5e		       8f		      .byte.b	143
   1128  fb5f		       8f		      .byte.b	143
   1129  fb60		       8f		      .byte.b	143
   1130  fb61		       8f		      .byte.b	143
   1131  fb62		       8f		      .byte.b	143
   1132  fb63		       8f		      .byte.b	143
   1133  fb64		       80		      .byte.b	128
   1134  fb65		       80		      .byte.b	128
   1135  fb66		       80		      .byte.b	128
   1136  fb67		       80		      .byte.b	128
   1137  fb68		       80		      .byte.b	128
   1138  fb69		       80		      .byte.b	128
   1139  fb6a		       80		      .byte.b	128
   1140  fb6b		       80		      .byte.b	128
   1141  fb6c		       80		      .byte.b	128
   1142  fb6d		       80		      .byte.b	128
   1143  fb6e		       80		      .byte.b	128
   1144  fb6f		       80		      .byte.b	128
   1145  fb70		       80		      .byte.b	128
   1146  fb71		       80		      .byte.b	128
   1147  fb72		       80		      .byte.b	128
   1148  fb73		       80		      .byte.b	128
   1149  fb74		       80		      .byte.b	128
   1150  fb75		       80		      .byte.b	128
   1151  fb76		       80		      .byte.b	128
   1152  fb77		       80		      .byte.b	128
   1153  fb78		       80		      .byte.b	128
   1154  fb79		       80		      .byte.b	128
   1155  fb7a		       ff		      .byte.b	255
   1156  fb7b		       ff		      .byte.b	255
   1157  fb7c		       ff		      .byte.b	255
   1158  fb7d		       ff		      .byte.b	255
   1159  fb7e		       00		      .byte.b	0
   1160  fb7f		       00		      .byte.b	0
   1161  fb80							;end
   1162  fb80
------- FILE PacMan.asm
   1281  fb80
   1282  fb80							;===============================================================================
   1283  fb80							; free space check before page boundry
   1284  fb80							;===============================================================================
   1285  fb80
 End of MainBoard.asm is:  $fb80
   1286  fb80					      echo	"End of MainBoard.asm is: ", *
   1287  fc00		       00 00 00 00*	      align	256
   1288  fc00
   1289  fc00							;==================================================================================
   1290  fc00							; Bottom Data
   1291  fc00							;==================================================================================
   1292  fc00
   1293  fc00				   BottomData
   1294  fc00
   1295  fc00							; 0
   1296  fc00		       00		      .byte.b	%00000000
   1297  fc01		       00		      .byte.b	%00000000
   1298  fc02		       00		      .byte.b	%00000000
   1299  fc03		       7e		      .byte.b	%01111110
   1300  fc04		       7e		      .byte.b	%01111110
   1301  fc05		       e7		      .byte.b	%11100111
   1302  fc06		       e7		      .byte.b	%11100111
   1303  fc07		       c3		      .byte.b	%11000011
   1304  fc08		       c3		      .byte.b	%11000011
   1305  fc09		       c3		      .byte.b	%11000011
   1306  fc0a		       c3		      .byte.b	%11000011
   1307  fc0b		       c3		      .byte.b	%11000011
   1308  fc0c		       c3		      .byte.b	%11000011
   1309  fc0d		       c3		      .byte.b	%11000011
   1310  fc0e		       c3		      .byte.b	%11000011
   1311  fc0f		       e7		      .byte.b	%11100111
   1312  fc10		       e7		      .byte.b	%11100111
   1313  fc11		       7e		      .byte.b	%01111110
   1314  fc12		       7e		      .byte.b	%01111110
   1315  fc13		       00		      .byte.b	%00000000
   1316  fc14
   1317  fc14							; 1
   1318  fc14		       00		      .byte.b	%00000000
   1319  fc15		       00		      .byte.b	%00000000
   1320  fc16		       00		      .byte.b	%00000000
   1321  fc17		       ff		      .byte.b	%11111111
   1322  fc18		       ff		      .byte.b	%11111111
   1323  fc19		       1c		      .byte.b	%00011100
   1324  fc1a		       1c		      .byte.b	%00011100
   1325  fc1b		       1c		      .byte.b	%00011100
   1326  fc1c		       1c		      .byte.b	%00011100
   1327  fc1d		       1c		      .byte.b	%00011100
   1328  fc1e		       1c		      .byte.b	%00011100
   1329  fc1f		       1c		      .byte.b	%00011100
   1330  fc20		       1c		      .byte.b	%00011100
   1331  fc21		       1c		      .byte.b	%00011100
   1332  fc22		       1c		      .byte.b	%00011100
   1333  fc23		       fc		      .byte.b	%11111100
   1334  fc24		       7c		      .byte.b	%01111100
   1335  fc25		       3c		      .byte.b	%00111100
   1336  fc26		       1c		      .byte.b	%00011100
   1337  fc27		       00		      .byte.b	%00000000
   1338  fc28
   1339  fc28							; 2
   1340  fc28		       00		      .byte.b	%00000000
   1341  fc29		       00		      .byte.b	%00000000
   1342  fc2a		       00		      .byte.b	%00000000
   1343  fc2b		       ff		      .byte.b	%11111111
   1344  fc2c		       ff		      .byte.b	%11111111
   1345  fc2d		       e0		      .byte.b	%11100000
   1346  fc2e		       e0		      .byte.b	%11100000
   1347  fc2f		       70		      .byte.b	%01110000
   1348  fc30		       38		      .byte.b	%00111000
   1349  fc31		       1c		      .byte.b	%00011100
   1350  fc32		       0e		      .byte.b	%00001110
   1351  fc33		       07		      .byte.b	%00000111
   1352  fc34		       03		      .byte.b	%00000011
   1353  fc35		       03		      .byte.b	%00000011
   1354  fc36		       c3		      .byte.b	%11000011
   1355  fc37		       c3		      .byte.b	%11000011
   1356  fc38		       e7		      .byte.b	%11100111
   1357  fc39		       7e		      .byte.b	%01111110
   1358  fc3a		       3c		      .byte.b	%00111100
   1359  fc3b		       00		      .byte.b	%00000000
   1360  fc3c
   1361  fc3c							; 3
   1362  fc3c		       00		      .byte.b	%00000000
   1363  fc3d		       00		      .byte.b	%00000000
   1364  fc3e		       00		      .byte.b	%00000000
   1365  fc3f		       3c		      .byte.b	%00111100
   1366  fc40		       7e		      .byte.b	%01111110
   1367  fc41		       ef		      .byte.b	%11101111
   1368  fc42		       c7		      .byte.b	%11000111
   1369  fc43		       07		      .byte.b	%00000111
   1370  fc44		       07		      .byte.b	%00000111
   1371  fc45		       0e		      .byte.b	%00001110
   1372  fc46		       1c		      .byte.b	%00011100
   1373  fc47		       1c		      .byte.b	%00011100
   1374  fc48		       0e		      .byte.b	%00001110
   1375  fc49		       07		      .byte.b	%00000111
   1376  fc4a		       07		      .byte.b	%00000111
   1377  fc4b		       c7		      .byte.b	%11000111
   1378  fc4c		       ef		      .byte.b	%11101111
   1379  fc4d		       7e		      .byte.b	%01111110
   1380  fc4e		       3c		      .byte.b	%00111100
   1381  fc4f		       00		      .byte.b	%00000000
   1382  fc50
   1383  fc50							; 4
   1384  fc50		       00		      .byte.b	%00000000
   1385  fc51		       00		      .byte.b	%00000000
   1386  fc52		       00		      .byte.b	%00000000
   1387  fc53		       06		      .byte.b	%00000110
   1388  fc54		       06		      .byte.b	%00000110
   1389  fc55		       06		      .byte.b	%00000110
   1390  fc56		       06		      .byte.b	%00000110
   1391  fc57		       ff		      .byte.b	%11111111
   1392  fc58		       ff		      .byte.b	%11111111
   1393  fc59		       c6		      .byte.b	%11000110
   1394  fc5a		       c6		      .byte.b	%11000110
   1395  fc5b		       66		      .byte.b	%01100110
   1396  fc5c		       66		      .byte.b	%01100110
   1397  fc5d		       36		      .byte.b	%00110110
   1398  fc5e		       36		      .byte.b	%00110110
   1399  fc5f		       1e		      .byte.b	%00011110
   1400  fc60		       1e		      .byte.b	%00011110
   1401  fc61		       0e		      .byte.b	%00001110
   1402  fc62		       0e		      .byte.b	%00001110
   1403  fc63		       00		      .byte.b	%00000000
   1404  fc64
   1405  fc64							; 5
   1406  fc64		       00		      .byte.b	%00000000
   1407  fc65		       00		      .byte.b	%00000000
   1408  fc66		       00		      .byte.b	%00000000
   1409  fc67		       f8		      .byte.b	%11111000
   1410  fc68		       fc		      .byte.b	%11111100
   1411  fc69		       fe		      .byte.b	%11111110
   1412  fc6a		       0f		      .byte.b	%00001111
   1413  fc6b		       07		      .byte.b	%00000111
   1414  fc6c		       07		      .byte.b	%00000111
   1415  fc6d		       07		      .byte.b	%00000111
   1416  fc6e		       0f		      .byte.b	%00001111
   1417  fc6f		       fe		      .byte.b	%11111110
   1418  fc70		       fc		      .byte.b	%11111100
   1419  fc71		       e0		      .byte.b	%11100000
   1420  fc72		       e0		      .byte.b	%11100000
   1421  fc73		       e0		      .byte.b	%11100000
   1422  fc74		       e0		      .byte.b	%11100000
   1423  fc75		       ff		      .byte.b	%11111111
   1424  fc76		       ff		      .byte.b	%11111111
   1425  fc77		       00		      .byte.b	%00000000
   1426  fc78
   1427  fc78							; 6
   1428  fc78		       00		      .byte.b	%00000000
   1429  fc79		       00		      .byte.b	%00000000
   1430  fc7a		       00		      .byte.b	%00000000
   1431  fc7b		       3c		      .byte.b	%00111100
   1432  fc7c		       7e		      .byte.b	%01111110
   1433  fc7d		       e7		      .byte.b	%11100111
   1434  fc7e		       c3		      .byte.b	%11000011
   1435  fc7f		       c3		      .byte.b	%11000011
   1436  fc80		       c3		      .byte.b	%11000011
   1437  fc81		       e7		      .byte.b	%11100111
   1438  fc82		       fe		      .byte.b	%11111110
   1439  fc83		       fc		      .byte.b	%11111100
   1440  fc84		       c0		      .byte.b	%11000000
   1441  fc85		       c0		      .byte.b	%11000000
   1442  fc86		       c0		      .byte.b	%11000000
   1443  fc87		       c3		      .byte.b	%11000011
   1444  fc88		       e7		      .byte.b	%11100111
   1445  fc89		       7f		      .byte.b	%01111111
   1446  fc8a		       3e		      .byte.b	%00111110
   1447  fc8b		       00		      .byte.b	%00000000
   1448  fc8c
   1449  fc8c							; 7
   1450  fc8c		       00		      .byte.b	%00000000
   1451  fc8d		       00		      .byte.b	%00000000
   1452  fc8e		       00		      .byte.b	%00000000
   1453  fc8f		       18		      .byte.b	%00011000
   1454  fc90		       18		      .byte.b	%00011000
   1455  fc91		       18		      .byte.b	%00011000
   1456  fc92		       18		      .byte.b	%00011000
   1457  fc93		       18		      .byte.b	%00011000
   1458  fc94		       18		      .byte.b	%00011000
   1459  fc95		       18		      .byte.b	%00011000
   1460  fc96		       18		      .byte.b	%00011000
   1461  fc97		       0c		      .byte.b	%00001100
   1462  fc98		       0c		      .byte.b	%00001100
   1463  fc99		       0c		      .byte.b	%00001100
   1464  fc9a		       c6		      .byte.b	%11000110
   1465  fc9b		       c7		      .byte.b	%11000111
   1466  fc9c		       ff		      .byte.b	%11111111
   1467  fc9d		       ff		      .byte.b	%11111111
   1468  fc9e		       ff		      .byte.b	%11111111
   1469  fc9f		       00		      .byte.b	%00000000
   1470  fca0
   1471  fca0							; 8
   1472  fca0		       00		      .byte.b	%00000000
   1473  fca1		       00		      .byte.b	%00000000
   1474  fca2		       00		      .byte.b	%00000000
   1475  fca3		       3c		      .byte.b	%00111100
   1476  fca4		       7e		      .byte.b	%01111110
   1477  fca5		       e7		      .byte.b	%11100111
   1478  fca6		       c3		      .byte.b	%11000011
   1479  fca7		       c3		      .byte.b	%11000011
   1480  fca8		       c3		      .byte.b	%11000011
   1481  fca9		       e7		      .byte.b	%11100111
   1482  fcaa		       7e		      .byte.b	%01111110
   1483  fcab		       3c		      .byte.b	%00111100
   1484  fcac		       66		      .byte.b	%01100110
   1485  fcad		       c3		      .byte.b	%11000011
   1486  fcae		       c3		      .byte.b	%11000011
   1487  fcaf		       c3		      .byte.b	%11000011
   1488  fcb0		       e7		      .byte.b	%11100111
   1489  fcb1		       7e		      .byte.b	%01111110
   1490  fcb2		       3c		      .byte.b	%00111100
   1491  fcb3		       00		      .byte.b	%00000000
   1492  fcb4
   1493  fcb4							; 9
   1494  fcb4		       00		      .byte.b	%00000000
   1495  fcb5		       00		      .byte.b	%00000000
   1496  fcb6		       00		      .byte.b	%00000000
   1497  fcb7		       3c		      .byte.b	%00111100
   1498  fcb8		       7e		      .byte.b	%01111110
   1499  fcb9		       e7		      .byte.b	%11100111
   1500  fcba		       c3		      .byte.b	%11000011
   1501  fcbb		       03		      .byte.b	%00000011
   1502  fcbc		       03		      .byte.b	%00000011
   1503  fcbd		       03		      .byte.b	%00000011
   1504  fcbe		       3f		      .byte.b	%00111111
   1505  fcbf		       7f		      .byte.b	%01111111
   1506  fcc0		       e7		      .byte.b	%11100111
   1507  fcc1		       c3		      .byte.b	%11000011
   1508  fcc2		       c3		      .byte.b	%11000011
   1509  fcc3		       c3		      .byte.b	%11000011
   1510  fcc4		       e7		      .byte.b	%11100111
   1511  fcc5		       fe		      .byte.b	%11111110
   1512  fcc6		       7c		      .byte.b	%01111100
   1513  fcc7		       00		      .byte.b	%00000000
   1514  fcc8		       00		      .byte.b	%00000000
   1515  fcc9
   1516  fcc9							;==================================================================================
   1517  fcc9							; Interrupt Routines
   1518  fcc9							;==================================================================================
   1519  fcc9
   1520  10000 ????				       SEG	Interrupt
   1521  fffa					      ORG	$FFFA
   1522  fffa
   1523  fffa				   InterruptVectors
   1524  fffa		       00 f0		      .word.w	Reset
   1525  fffc		       00 f0		      .word.w	Reset
   1526  fffe		       00 f0		      .word.w	Reset
   1527  10000
   1528  10000					       END
